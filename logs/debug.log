[Mon, 17 Dec 18 22:10:23 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:12:52 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:14:28 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:14:32 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:14:54 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:15:30 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:21:49 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:22:11 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:23:29 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:23:43 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:29:03 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:29:42 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 22:31:07 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
))
[Mon, 17 Dec 18 23:08:56 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
     'id' => -1,
  )),
   'id' => 'f6e24e6f-cc6e-4477-94cd-a38898a7a969',
))
[Mon, 17 Dec 18 23:09:55 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
     'id' => -1,
  )),
   'id' => '4b40d226-011f-49ef-bb49-40b9a53697cf',
))
[Mon, 17 Dec 18 23:09:55 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Row::__set_state(array(
     'id' => 1,
     'name' => 'qwerty',
     'gecos' => 'Loppolo Kuppolo',
     'superuser' => true,
  )),
)
[Mon, 17 Dec 18 23:11:24 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
  )),
))
[Mon, 17 Dec 18 23:11:24 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Row::__set_state(array(
     'id' => 1,
     'name' => 'qwerty',
     'gecos' => 'Loppolo Kuppolo',
     'superuser' => true,
  )),
)
[Mon, 17 Dec 18 23:15:17 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
  )),
))
[Mon, 17 Dec 18 23:15:17 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Row::__set_state(array(
     'id' => 1,
     'name' => 'qwerty',
     'gecos' => 'Loppolo Kuppolo',
     'superuser' => true,
  )),
)
[Mon, 17 Dec 18 23:15:41 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
     'id' => -1,
  )),
   'id' => '229b96d2-df39-428e-804a-7604cc53968e',
))
[Mon, 17 Dec 18 23:15:41 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Row::__set_state(array(
     'id' => 1,
     'name' => 'qwerty',
     'gecos' => 'Loppolo Kuppolo',
     'superuser' => true,
  )),
)
[Mon, 17 Dec 18 23:17:50 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '123',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'id' => '-1',
     'name' => 'qwerty',
     'password' => '12345',
  )),
))
[Mon, 17 Dec 18 23:17:50 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Row::__set_state(array(
     'id' => 1,
     'name' => 'qwerty',
     'gecos' => 'Loppolo Kuppolo',
     'superuser' => true,
  )),
)
[Mon, 17 Dec 18 23:18:01 +0200][DEBUG] stdClass::__set_state(array(
   'id' => '1asasSSSSASASAsASSAS23',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'id' => '-1',
     'name' => 'qwerty',
     'password' => '12345',
  )),
))
[Mon, 17 Dec 18 23:18:01 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Row::__set_state(array(
     'id' => 1,
     'name' => 'qwerty',
     'gecos' => 'Loppolo Kuppolo',
     'superuser' => true,
  )),
)
[Mon, 17 Dec 18 23:18:25 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
     'id' => -1,
  )),
   'id' => '18da941e-c366-4348-81af-5b928c40fd65',
))
[Mon, 17 Dec 18 23:18:25 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Row::__set_state(array(
     'id' => 1,
     'name' => 'qwerty',
     'gecos' => 'Loppolo Kuppolo',
     'superuser' => true,
  )),
)
[Mon, 17 Dec 18 23:21:12 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
     'id' => -1,
  )),
   'id' => '7bae72fc-660d-47e6-bc71-eb94a88587d0',
))
[Mon, 17 Dec 18 23:21:12 +0200][DEBUG] array (
  'result' => 
  array (
    0 => 
    Phalcon\Mvc\Model\Row::__set_state(array(
       'id' => 1,
       'name' => 'qwerty',
       'gecos' => 'Loppolo Kuppolo',
       'superuser' => true,
    )),
  ),
)
[Mon, 17 Dec 18 23:22:13 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
     'id' => -1,
  )),
   'id' => 'b8d85cb4-b682-4494-9561-e60fcd9ab018',
))
[Mon, 17 Dec 18 23:22:13 +0200][DEBUG] array (
  'result' => 
  array (
    0 => 
    Phalcon\Mvc\Model\Row::__set_state(array(
       'id' => 1,
       'name' => 'qwerty',
       'gecos' => 'Loppolo Kuppolo',
       'superuser' => true,
    )),
  ),
)
[Mon, 17 Dec 18 23:22:46 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'create',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
     'gecos' => '212121',
     'superuser' => true,
  )),
   'id' => '7671d871-7b3c-4e5f-85ec-a24ed3ae2126',
))
[Mon, 17 Dec 18 23:22:46 +0200][DEBUG] array (
  'result' => 
  User::__set_state(array(
     'id' => 1,
     'name' => 'qwerty',
     'password' => '12345',
     'gecos' => 'Loppolo Kuppolo',
     'superuser' => true,
     '_dependencyInjector' => 
    Phalcon\Di\FactoryDefault::__set_state(array(
       '_services' => 
      array (
        'router' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'router',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => true,
           '_resolved' => true,
           '_sharedInstance' => 
          Phalcon\Mvc\Router::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_uriSource' => NULL,
             '_namespace' => NULL,
             '_module' => NULL,
             '_controller' => 'api-users',
             '_action' => 'index',
             '_params' => 
            array (
            ),
             '_routes' => 
            array (
              0 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/',
                 '_compiledPattern' => '/',
                 '_paths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 0,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              1 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/login',
                 '_compiledPattern' => '/api/login',
                 '_paths' => 
                array (
                  'controller' => 'api-login',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 1,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              2 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
            ),
             '_matchedRoute' => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/users',
               '_compiledPattern' => '/api/users',
               '_paths' => 
              array (
                'controller' => 'api-users',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 2,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
             '_matches' => NULL,
             '_wasMatched' => true,
             '_defaultNamespace' => NULL,
             '_defaultModule' => NULL,
             '_defaultController' => 'index',
             '_defaultAction' => 'index',
             '_defaultParams' => 
            array (
            ),
             '_removeExtraSlashes' => true,
             '_notFoundPaths' => 
            array (
              'controller' => 'index',
              'action' => 'index',
            ),
             '_keyRouteNames' => 
            array (
            ),
             '_keyRouteIds' => 
            array (
            ),
          )),
        )),
        'dispatcher' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'dispatcher',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => true,
           '_resolved' => true,
           '_sharedInstance' => 
          Phalcon\Mvc\Dispatcher::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => 
            Phalcon\Events\Manager::__set_state(array(
               '_events' => 
              array (
                'dispatch:beforeExecuteRoute' => 
                array (
                  0 => 
                  SecurityPlugin::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                  )),
                ),
              ),
               '_collect' => false,
               '_enablePriorities' => false,
               '_responses' => NULL,
            )),
             '_activeHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_finished' => true,
             '_forwarded' => false,
             '_moduleName' => '',
             '_namespaceName' => NULL,
             '_handlerName' => 'api-users',
             '_actionName' => 'index',
             '_params' => 
            array (
            ),
             '_returnedValue' => NULL,
             '_lastHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_defaultNamespace' => NULL,
             '_actionSuffix' => 'Action',
             '_previousNamespaceName' => NULL,
             '_previousHandlerName' => NULL,
             '_previousActionName' => NULL,
             '_modelBinding' => false,
             '_modelBinder' => NULL,
             '_isControllerInitialize' => false,
             '_handlerSuffix' => 'Controller',
             '_defaultHandler' => 'index',
             '_defaultAction' => 'index',
          )),
        )),
        'url' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'url',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => false,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'modelsManager' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'modelsManager',
           '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
           '_shared' => true,
           '_resolved' => true,
           '_sharedInstance' => 
          Phalcon\Mvc\Model\Manager::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_customEventsManager' => NULL,
             '_readConnectionServices' => NULL,
             '_writeConnectionServices' => NULL,
             '_aliases' => NULL,
             '_modelVisibility' => 
            array (
            ),
             '_hasMany' => NULL,
             '_hasManySingle' => NULL,
             '_hasOne' => NULL,
             '_hasOneSingle' => NULL,
             '_belongsTo' => NULL,
             '_belongsToSingle' => NULL,
             '_hasManyToMany' => NULL,
             '_hasManyToManySingle' => NULL,
             '_initialized' => 
            array (
              'user' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
            ),
             '_prefix' => '',
             '_sources' => 
            array (
              'user' => 'user',
            ),
             '_schemas' => NULL,
             '_behaviors' => NULL,
             '_lastInitialized' => 
            User::__set_state(array(
               'id' => NULL,
               'name' => NULL,
               'password' => NULL,
               'gecos' => NULL,
               'superuser' => NULL,
               '_dependencyInjector' => NULL,
               '_modelsManager' => NULL,
               '_modelsMetaData' => NULL,
               '_errorMessages' => NULL,
               '_operationMade' => 0,
               '_dirtyState' => 1,
               '_transaction' => NULL,
               '_uniqueKey' => NULL,
               '_uniqueParams' => NULL,
               '_uniqueTypes' => NULL,
               '_skipped' => NULL,
               '_related' => NULL,
               '_snapshot' => NULL,
               '_oldSnapshot' => 
              array (
              ),
            )),
             '_lastQuery' => NULL,
             '_reusable' => NULL,
             '_keepSnapshots' => NULL,
             '_dynamicUpdate' => NULL,
             '_namespaceAliases' => NULL,
          )),
        )),
        'modelsMetadata' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'modelsMetadata',
           '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
           '_shared' => true,
           '_resolved' => true,
           '_sharedInstance' => 
          Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
             '_dependencyInjector' => NULL,
             '_strategy' => 
            Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
            )),
             '_columnMap' => 
            array (
              'user' => 
              array (
                0 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
                1 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
              ),
            ),
             '_metaData' => 
            array (
              'user-user' => 
              array (
                0 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                  4 => 'superuser',
                ),
                1 => 
                array (
                  0 => 'id',
                ),
                2 => 
                array (
                  0 => 'name',
                  1 => 'gecos',
                  2 => 'password',
                  3 => 'superuser',
                ),
                3 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                ),
                4 => 
                array (
                  'id' => 0,
                  'name' => 6,
                  'gecos' => 6,
                  'password' => 6,
                  'superuser' => 8,
                ),
                5 => 
                array (
                  'id' => true,
                ),
                8 => 'id',
                9 => 
                array (
                  'id' => 1,
                  'name' => 2,
                  'gecos' => 2,
                  'password' => 2,
                  'superuser' => 5,
                ),
                10 => 
                array (
                ),
                11 => 
                array (
                ),
                12 => 
                array (
                  'superuser' => NULL,
                ),
                13 => 
                array (
                ),
              ),
            ),
          )),
        )),
        'response' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'response',
           '_definition' => 'Phalcon\\Http\\Response',
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'cookies' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'cookies',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'request' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'request',
           '_definition' => 'Phalcon\\Http\\Request',
           '_shared' => true,
           '_resolved' => true,
           '_sharedInstance' => 
          Phalcon\Http\Request::__set_state(array(
             '_dependencyInjector' => NULL,
             '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
             '_filter' => NULL,
             '_putCache' => NULL,
             '_httpMethodParameterOverride' => false,
             '_strictHostCheck' => false,
          )),
        )),
        'filter' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'filter',
           '_definition' => 'Phalcon\\Filter',
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'escaper' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'escaper',
           '_definition' => 'Phalcon\\Escaper',
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'security' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'security',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'crypt' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'crypt',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => false,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'annotations' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'annotations',
           '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'flash' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'flash',
           '_definition' => 'Phalcon\\Flash\\Direct',
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'flashSession' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'flashSession',
           '_definition' => 'Phalcon\\Flash\\Session',
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'tag' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'tag',
           '_definition' => 'Phalcon\\Tag',
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'session' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'session',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'sessionBag' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'sessionBag',
           '_definition' => 'Phalcon\\Session\\Bag',
           '_shared' => false,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'eventsManager' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'eventsManager',
           '_definition' => 'Phalcon\\Events\\Manager',
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'transactionManager' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'transactionManager',
           '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'assets' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'assets',
           '_definition' => 'Phalcon\\Assets\\Manager',
           '_shared' => true,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'config' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'config',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => true,
           '_resolved' => true,
           '_sharedInstance' => 
          Phalcon\Config\Adapter\Ini::__set_state(array(
             'database' => 
            Phalcon\Config::__set_state(array(
               'host' => 'localhost',
               'dbname' => 'phalcon',
               'username' => 'pgsql',
               'password' => 'secret',
            )),
             'application' => 
            Phalcon\Config::__set_state(array(
               'appDir' => '/var/www/dev/app/../app/',
               'controllersDir' => '/var/www/dev/app/../app/controllers/',
               'modelsDir' => '/var/www/dev/app/../app/models/',
               'migrationsDir' => '/var/www/dev/app/../app/migrations/',
               'viewsDir' => '/var/www/dev/app/../app/views/',
               'pluginsDir' => '/var/www/dev/app/../app/plugins/',
               'libraryDir' => '/var/www/dev/app/../app/library/',
               'utilsDir' => '/var/www/dev/app/../app/utils/',
               'logPath' => '/var/www/dev/app/../logs/debug.log',
               'cacheDir' => '/var/www/dev/app/../cache/',
               'dataDir' => '/var/www/dev/app/../data/',
            )),
          )),
        )),
        'logger' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'logger',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => false,
           '_resolved' => true,
           '_sharedInstance' => NULL,
        )),
        'viewCache' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'viewCache',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => false,
           '_resolved' => false,
           '_sharedInstance' => NULL,
        )),
        'view' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'view',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => true,
           '_resolved' => true,
           '_sharedInstance' => 
          Phalcon\Mvc\View::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_options' => 
            array (
            ),
             '_basePath' => '',
             '_content' => NULL,
             '_renderLevel' => 5,
             '_currentRenderLevel' => 0,
             '_disabledLevels' => NULL,
             '_viewParams' => 
            array (
            ),
             '_layout' => NULL,
             '_layoutsDir' => '',
             '_partialsDir' => '',
             '_viewsDirs' => '/var/www/dev/app/../app/views/',
             '_templatesBefore' => 
            array (
            ),
             '_templatesAfter' => 
            array (
            ),
             '_engines' => false,
             '_registeredEngines' => NULL,
             '_mainView' => 'index',
             '_controllerName' => NULL,
             '_actionName' => NULL,
             '_params' => NULL,
             '_pickView' => NULL,
             '_cache' => NULL,
             '_cacheLevel' => 0,
             '_activeRenderPaths' => NULL,
             '_disabled' => false,
          )),
        )),
        'db' => 
        Phalcon\Di\Service::__set_state(array(
           '_name' => 'db',
           '_definition' => 
          Closure::__set_state(array(
          )),
           '_shared' => false,
           '_resolved' => true,
           '_sharedInstance' => NULL,
        )),
      ),
       '_sharedInstances' => 
      array (
        'config' => 
        Phalcon\Config\Adapter\Ini::__set_state(array(
           'database' => 
          Phalcon\Config::__set_state(array(
             'host' => 'localhost',
             'dbname' => 'phalcon',
             'username' => 'pgsql',
             'password' => 'secret',
          )),
           'application' => 
          Phalcon\Config::__set_state(array(
             'appDir' => '/var/www/dev/app/../app/',
             'controllersDir' => '/var/www/dev/app/../app/controllers/',
             'modelsDir' => '/var/www/dev/app/../app/models/',
             'migrationsDir' => '/var/www/dev/app/../app/migrations/',
             'viewsDir' => '/var/www/dev/app/../app/views/',
             'pluginsDir' => '/var/www/dev/app/../app/plugins/',
             'libraryDir' => '/var/www/dev/app/../app/library/',
             'utilsDir' => '/var/www/dev/app/../app/utils/',
             'logPath' => '/var/www/dev/app/../logs/debug.log',
             'cacheDir' => '/var/www/dev/app/../cache/',
             'dataDir' => '/var/www/dev/app/../data/',
          )),
        )),
        'router' => 
        Phalcon\Mvc\Router::__set_state(array(
           '_dependencyInjector' => NULL,
           '_eventsManager' => NULL,
           '_uriSource' => NULL,
           '_namespace' => NULL,
           '_module' => NULL,
           '_controller' => 'api-users',
           '_action' => 'index',
           '_params' => 
          array (
          ),
           '_routes' => 
          array (
            0 => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/',
               '_compiledPattern' => '/',
               '_paths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 0,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
            1 => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/login',
               '_compiledPattern' => '/api/login',
               '_paths' => 
              array (
                'controller' => 'api-login',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 1,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
            2 => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/users',
               '_compiledPattern' => '/api/users',
               '_paths' => 
              array (
                'controller' => 'api-users',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 2,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
          ),
           '_matchedRoute' => 
          Phalcon\Mvc\Router\Route::__set_state(array(
             '_pattern' => '/api/users',
             '_compiledPattern' => '/api/users',
             '_paths' => 
            array (
              'controller' => 'api-users',
              'action' => 'index',
            ),
             '_methods' => NULL,
             '_hostname' => NULL,
             '_converters' => NULL,
             '_id' => 2,
             '_name' => NULL,
             '_beforeMatch' => NULL,
             '_match' => NULL,
             '_group' => NULL,
          )),
           '_matches' => NULL,
           '_wasMatched' => true,
           '_defaultNamespace' => NULL,
           '_defaultModule' => NULL,
           '_defaultController' => 'index',
           '_defaultAction' => 'index',
           '_defaultParams' => 
          array (
          ),
           '_removeExtraSlashes' => true,
           '_notFoundPaths' => 
          array (
            'controller' => 'index',
            'action' => 'index',
          ),
           '_keyRouteNames' => 
          array (
          ),
           '_keyRouteIds' => 
          array (
          ),
        )),
        'view' => 
        Phalcon\Mvc\View::__set_state(array(
           '_dependencyInjector' => NULL,
           '_eventsManager' => NULL,
           '_options' => 
          array (
          ),
           '_basePath' => '',
           '_content' => NULL,
           '_renderLevel' => 5,
           '_currentRenderLevel' => 0,
           '_disabledLevels' => NULL,
           '_viewParams' => 
          array (
          ),
           '_layout' => NULL,
           '_layoutsDir' => '',
           '_partialsDir' => '',
           '_viewsDirs' => '/var/www/dev/app/../app/views/',
           '_templatesBefore' => 
          array (
          ),
           '_templatesAfter' => 
          array (
          ),
           '_engines' => false,
           '_registeredEngines' => NULL,
           '_mainView' => 'index',
           '_controllerName' => NULL,
           '_actionName' => NULL,
           '_params' => NULL,
           '_pickView' => NULL,
           '_cache' => NULL,
           '_cacheLevel' => 0,
           '_activeRenderPaths' => NULL,
           '_disabled' => false,
        )),
        'dispatcher' => 
        Phalcon\Mvc\Dispatcher::__set_state(array(
           '_dependencyInjector' => NULL,
           '_eventsManager' => 
          Phalcon\Events\Manager::__set_state(array(
             '_events' => 
            array (
              'dispatch:beforeExecuteRoute' => 
              array (
                0 => 
                SecurityPlugin::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                )),
              ),
            ),
             '_collect' => false,
             '_enablePriorities' => false,
             '_responses' => NULL,
          )),
           '_activeHandler' => 
          ApiUsersController::__set_state(array(
             'invalidRequest' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32600,
                'message' => 'Invalid Request',
              ),
              'id' => NULL,
            ),
             'parseError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32700,
                'message' => 'Parse error',
              ),
              'id' => NULL,
            ),
             'methodNotFound' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32601,
                'message' => 'Method not found',
              ),
              'id' => 1,
            ),
             'internalError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32603,
                'message' => 'Internal error',
              ),
              'id' => 0,
            ),
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
             'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
          )),
           '_finished' => true,
           '_forwarded' => false,
           '_moduleName' => '',
           '_namespaceName' => NULL,
           '_handlerName' => 'api-users',
           '_actionName' => 'index',
           '_params' => 
          array (
          ),
           '_returnedValue' => NULL,
           '_lastHandler' => 
          ApiUsersController::__set_state(array(
             'invalidRequest' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32600,
                'message' => 'Invalid Request',
              ),
              'id' => NULL,
            ),
             'parseError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32700,
                'message' => 'Parse error',
              ),
              'id' => NULL,
            ),
             'methodNotFound' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32601,
                'message' => 'Method not found',
              ),
              'id' => 1,
            ),
             'internalError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32603,
                'message' => 'Internal error',
              ),
              'id' => 0,
            ),
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
             'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
          )),
           '_defaultNamespace' => NULL,
           '_actionSuffix' => 'Action',
           '_previousNamespaceName' => NULL,
           '_previousHandlerName' => NULL,
           '_previousActionName' => NULL,
           '_modelBinding' => false,
           '_modelBinder' => NULL,
           '_isControllerInitialize' => false,
           '_handlerSuffix' => 'Controller',
           '_defaultHandler' => 'index',
           '_defaultAction' => 'index',
        )),
        'ApiUsersController' => 
        ApiUsersController::__set_state(array(
           'invalidRequest' => 
          array (
            'jsonrpc' => '2.0',
            'error' => 
            array (
              'code' => -32600,
              'message' => 'Invalid Request',
            ),
            'id' => NULL,
          ),
           'parseError' => 
          array (
            'jsonrpc' => '2.0',
            'error' => 
            array (
              'code' => -32700,
              'message' => 'Parse error',
            ),
            'id' => NULL,
          ),
           'methodNotFound' => 
          array (
            'jsonrpc' => '2.0',
            'error' => 
            array (
              'code' => -32601,
              'message' => 'Method not found',
            ),
            'id' => 1,
          ),
           'internalError' => 
          array (
            'jsonrpc' => '2.0',
            'error' => 
            array (
              'code' => -32603,
              'message' => 'Internal error',
            ),
            'id' => 0,
          ),
           '_dependencyInjector' => NULL,
           '_eventsManager' => NULL,
           'request' => 
          Phalcon\Http\Request::__set_state(array(
             '_dependencyInjector' => NULL,
             '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
             '_filter' => NULL,
             '_putCache' => NULL,
             '_httpMethodParameterOverride' => false,
             '_strictHostCheck' => false,
          )),
           'logger' => 
          Phalcon\Logger\Adapter\File::__set_state(array(
             '_transaction' => false,
             '_queue' => 
            array (
            ),
             '_formatter' => 
            Phalcon\Logger\Formatter\Line::__set_state(array(
               '_dateFormat' => 'D, d M y H:i:s O',
               '_format' => '[%date%][%type%] %message%',
            )),
             '_logLevel' => 9,
             '_fileHandler' => NULL,
             '_path' => '/var/www/dev/app/../logs/debug.log',
             '_options' => NULL,
          )),
        )),
        'request' => 
        Phalcon\Http\Request::__set_state(array(
           '_dependencyInjector' => NULL,
           '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
           '_filter' => NULL,
           '_putCache' => NULL,
           '_httpMethodParameterOverride' => false,
           '_strictHostCheck' => false,
        )),
        'logger' => 
        Phalcon\Logger\Adapter\File::__set_state(array(
           '_transaction' => false,
           '_queue' => 
          array (
          ),
           '_formatter' => 
          Phalcon\Logger\Formatter\Line::__set_state(array(
             '_dateFormat' => 'D, d M y H:i:s O',
             '_format' => '[%date%][%type%] %message%',
          )),
           '_logLevel' => 9,
           '_fileHandler' => NULL,
           '_path' => '/var/www/dev/app/../logs/debug.log',
           '_options' => NULL,
        )),
        'modelsManager' => 
        Phalcon\Mvc\Model\Manager::__set_state(array(
           '_dependencyInjector' => NULL,
           '_eventsManager' => NULL,
           '_customEventsManager' => NULL,
           '_readConnectionServices' => NULL,
           '_writeConnectionServices' => NULL,
           '_aliases' => NULL,
           '_modelVisibility' => 
          array (
          ),
           '_hasMany' => NULL,
           '_hasManySingle' => NULL,
           '_hasOne' => NULL,
           '_hasOneSingle' => NULL,
           '_belongsTo' => NULL,
           '_belongsToSingle' => NULL,
           '_hasManyToMany' => NULL,
           '_hasManyToManySingle' => NULL,
           '_initialized' => 
          array (
            'user' => 
            User::__set_state(array(
               'id' => NULL,
               'name' => NULL,
               'password' => NULL,
               'gecos' => NULL,
               'superuser' => NULL,
               '_dependencyInjector' => NULL,
               '_modelsManager' => NULL,
               '_modelsMetaData' => NULL,
               '_errorMessages' => NULL,
               '_operationMade' => 0,
               '_dirtyState' => 1,
               '_transaction' => NULL,
               '_uniqueKey' => NULL,
               '_uniqueParams' => NULL,
               '_uniqueTypes' => NULL,
               '_skipped' => NULL,
               '_related' => NULL,
               '_snapshot' => NULL,
               '_oldSnapshot' => 
              array (
              ),
            )),
          ),
           '_prefix' => '',
           '_sources' => 
          array (
            'user' => 'user',
          ),
           '_schemas' => NULL,
           '_behaviors' => NULL,
           '_lastInitialized' => 
          User::__set_state(array(
             'id' => NULL,
             'name' => NULL,
             'password' => NULL,
             'gecos' => NULL,
             'superuser' => NULL,
             '_dependencyInjector' => NULL,
             '_modelsManager' => NULL,
             '_modelsMetaData' => NULL,
             '_errorMessages' => NULL,
             '_operationMade' => 0,
             '_dirtyState' => 1,
             '_transaction' => NULL,
             '_uniqueKey' => NULL,
             '_uniqueParams' => NULL,
             '_uniqueTypes' => NULL,
             '_skipped' => NULL,
             '_related' => NULL,
             '_snapshot' => NULL,
             '_oldSnapshot' => 
            array (
            ),
          )),
           '_lastQuery' => NULL,
           '_reusable' => NULL,
           '_keepSnapshots' => NULL,
           '_dynamicUpdate' => NULL,
           '_namespaceAliases' => NULL,
        )),
        'modelsMetadata' => 
        Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
           '_dependencyInjector' => NULL,
           '_strategy' => 
          Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
          )),
           '_columnMap' => 
          array (
            'user' => 
            array (
              0 => 
              array (
                'id' => 'id',
                'name' => 'name',
                'password' => 'password',
                'gecos' => 'gecos',
                'superuser' => 'superuser',
              ),
              1 => 
              array (
                'id' => 'id',
                'name' => 'name',
                'password' => 'password',
                'gecos' => 'gecos',
                'superuser' => 'superuser',
              ),
            ),
          ),
           '_metaData' => 
          array (
            'user-user' => 
            array (
              0 => 
              array (
                0 => 'id',
                1 => 'name',
                2 => 'gecos',
                3 => 'password',
                4 => 'superuser',
              ),
              1 => 
              array (
                0 => 'id',
              ),
              2 => 
              array (
                0 => 'name',
                1 => 'gecos',
                2 => 'password',
                3 => 'superuser',
              ),
              3 => 
              array (
                0 => 'id',
                1 => 'name',
                2 => 'gecos',
                3 => 'password',
              ),
              4 => 
              array (
                'id' => 0,
                'name' => 6,
                'gecos' => 6,
                'password' => 6,
                'superuser' => 8,
              ),
              5 => 
              array (
                'id' => true,
              ),
              8 => 'id',
              9 => 
              array (
                'id' => 1,
                'name' => 2,
                'gecos' => 2,
                'password' => 2,
                'superuser' => 5,
              ),
              10 => 
              array (
              ),
              11 => 
              array (
              ),
              12 => 
              array (
                'superuser' => NULL,
              ),
              13 => 
              array (
              ),
            ),
          ),
        )),
        'db' => 
        Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
           '_eventsManager' => NULL,
           '_descriptor' => 
          array (
            'host' => 'localhost',
            'username' => 'pgsql',
            'password' => 'secret',
            'dbname' => 'phalcon',
          ),
           '_dialect' => 
          Phalcon\Db\Dialect\Postgresql::__set_state(array(
             '_customFunctions' => NULL,
             '_escapeChar' => '"',
          )),
           '_connectionId' => 0,
           '_sqlStatement' => NULL,
           '_sqlVariables' => NULL,
           '_sqlBindTypes' => NULL,
           '_transactionLevel' => 0,
           '_transactionsWithSavepoints' => false,
           '_pdo' => 
          PDO::__set_state(array(
          )),
           '_affectedRows' => NULL,
           '_type' => 'pgsql',
           '_dialectType' => 'postgresql',
        )),
      ),
       '_freshInstance' => false,
       '_eventsManager' => NULL,
    )),
     '_modelsManager' => 
    Phalcon\Mvc\Model\Manager::__set_state(array(
       '_dependencyInjector' => 
      Phalcon\Di\FactoryDefault::__set_state(array(
         '_services' => 
        array (
          'router' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'router',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
          )),
          'dispatcher' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'dispatcher',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
          )),
          'url' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'url',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
          'modelsMetadata' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsMetadata',
             '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
          )),
          'response' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'response',
             '_definition' => 'Phalcon\\Http\\Response',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'cookies' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'cookies',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'request' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'request',
             '_definition' => 'Phalcon\\Http\\Request',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
          )),
          'filter' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'filter',
             '_definition' => 'Phalcon\\Filter',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'escaper' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'escaper',
             '_definition' => 'Phalcon\\Escaper',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'security' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'security',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'crypt' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'crypt',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'annotations' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'annotations',
             '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flash' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flash',
             '_definition' => 'Phalcon\\Flash\\Direct',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flashSession' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flashSession',
             '_definition' => 'Phalcon\\Flash\\Session',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'tag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'tag',
             '_definition' => 'Phalcon\\Tag',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'session' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'session',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'sessionBag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'sessionBag',
             '_definition' => 'Phalcon\\Session\\Bag',
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'eventsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'eventsManager',
             '_definition' => 'Phalcon\\Events\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'transactionManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'transactionManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'assets' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'assets',
             '_definition' => 'Phalcon\\Assets\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'config' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'config',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
          )),
          'logger' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'logger',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
          'viewCache' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'viewCache',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'view' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'view',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
          )),
          'db' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'db',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
        ),
         '_sharedInstances' => 
        array (
          'config' => 
          Phalcon\Config\Adapter\Ini::__set_state(array(
             'database' => 
            Phalcon\Config::__set_state(array(
               'host' => 'localhost',
               'dbname' => 'phalcon',
               'username' => 'pgsql',
               'password' => 'secret',
            )),
             'application' => 
            Phalcon\Config::__set_state(array(
               'appDir' => '/var/www/dev/app/../app/',
               'controllersDir' => '/var/www/dev/app/../app/controllers/',
               'modelsDir' => '/var/www/dev/app/../app/models/',
               'migrationsDir' => '/var/www/dev/app/../app/migrations/',
               'viewsDir' => '/var/www/dev/app/../app/views/',
               'pluginsDir' => '/var/www/dev/app/../app/plugins/',
               'libraryDir' => '/var/www/dev/app/../app/library/',
               'utilsDir' => '/var/www/dev/app/../app/utils/',
               'logPath' => '/var/www/dev/app/../logs/debug.log',
               'cacheDir' => '/var/www/dev/app/../cache/',
               'dataDir' => '/var/www/dev/app/../data/',
            )),
          )),
          'router' => 
          Phalcon\Mvc\Router::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_uriSource' => NULL,
             '_namespace' => NULL,
             '_module' => NULL,
             '_controller' => 'api-users',
             '_action' => 'index',
             '_params' => 
            array (
            ),
             '_routes' => 
            array (
              0 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/',
                 '_compiledPattern' => '/',
                 '_paths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 0,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              1 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/login',
                 '_compiledPattern' => '/api/login',
                 '_paths' => 
                array (
                  'controller' => 'api-login',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 1,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              2 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
            ),
             '_matchedRoute' => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/users',
               '_compiledPattern' => '/api/users',
               '_paths' => 
              array (
                'controller' => 'api-users',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 2,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
             '_matches' => NULL,
             '_wasMatched' => true,
             '_defaultNamespace' => NULL,
             '_defaultModule' => NULL,
             '_defaultController' => 'index',
             '_defaultAction' => 'index',
             '_defaultParams' => 
            array (
            ),
             '_removeExtraSlashes' => true,
             '_notFoundPaths' => 
            array (
              'controller' => 'index',
              'action' => 'index',
            ),
             '_keyRouteNames' => 
            array (
            ),
             '_keyRouteIds' => 
            array (
            ),
          )),
          'view' => 
          Phalcon\Mvc\View::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_options' => 
            array (
            ),
             '_basePath' => '',
             '_content' => NULL,
             '_renderLevel' => 5,
             '_currentRenderLevel' => 0,
             '_disabledLevels' => NULL,
             '_viewParams' => 
            array (
            ),
             '_layout' => NULL,
             '_layoutsDir' => '',
             '_partialsDir' => '',
             '_viewsDirs' => '/var/www/dev/app/../app/views/',
             '_templatesBefore' => 
            array (
            ),
             '_templatesAfter' => 
            array (
            ),
             '_engines' => false,
             '_registeredEngines' => NULL,
             '_mainView' => 'index',
             '_controllerName' => NULL,
             '_actionName' => NULL,
             '_params' => NULL,
             '_pickView' => NULL,
             '_cache' => NULL,
             '_cacheLevel' => 0,
             '_activeRenderPaths' => NULL,
             '_disabled' => false,
          )),
          'dispatcher' => 
          Phalcon\Mvc\Dispatcher::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => 
            Phalcon\Events\Manager::__set_state(array(
               '_events' => 
              array (
                'dispatch:beforeExecuteRoute' => 
                array (
                  0 => 
                  SecurityPlugin::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                  )),
                ),
              ),
               '_collect' => false,
               '_enablePriorities' => false,
               '_responses' => NULL,
            )),
             '_activeHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_finished' => true,
             '_forwarded' => false,
             '_moduleName' => '',
             '_namespaceName' => NULL,
             '_handlerName' => 'api-users',
             '_actionName' => 'index',
             '_params' => 
            array (
            ),
             '_returnedValue' => NULL,
             '_lastHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_defaultNamespace' => NULL,
             '_actionSuffix' => 'Action',
             '_previousNamespaceName' => NULL,
             '_previousHandlerName' => NULL,
             '_previousActionName' => NULL,
             '_modelBinding' => false,
             '_modelBinder' => NULL,
             '_isControllerInitialize' => false,
             '_handlerSuffix' => 'Controller',
             '_defaultHandler' => 'index',
             '_defaultAction' => 'index',
          )),
          'ApiUsersController' => 
          ApiUsersController::__set_state(array(
             'invalidRequest' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32600,
                'message' => 'Invalid Request',
              ),
              'id' => NULL,
            ),
             'parseError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32700,
                'message' => 'Parse error',
              ),
              'id' => NULL,
            ),
             'methodNotFound' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32601,
                'message' => 'Method not found',
              ),
              'id' => 1,
            ),
             'internalError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32603,
                'message' => 'Internal error',
              ),
              'id' => 0,
            ),
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
             'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
          )),
          'request' => 
          Phalcon\Http\Request::__set_state(array(
             '_dependencyInjector' => NULL,
             '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
             '_filter' => NULL,
             '_putCache' => NULL,
             '_httpMethodParameterOverride' => false,
             '_strictHostCheck' => false,
          )),
          'logger' => 
          Phalcon\Logger\Adapter\File::__set_state(array(
             '_transaction' => false,
             '_queue' => 
            array (
            ),
             '_formatter' => 
            Phalcon\Logger\Formatter\Line::__set_state(array(
               '_dateFormat' => 'D, d M y H:i:s O',
               '_format' => '[%date%][%type%] %message%',
            )),
             '_logLevel' => 9,
             '_fileHandler' => NULL,
             '_path' => '/var/www/dev/app/../logs/debug.log',
             '_options' => NULL,
          )),
          'modelsManager' => NULL,
          'modelsMetadata' => 
          Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
             '_dependencyInjector' => NULL,
             '_strategy' => 
            Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
            )),
             '_columnMap' => 
            array (
              'user' => 
              array (
                0 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
                1 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
              ),
            ),
             '_metaData' => 
            array (
              'user-user' => 
              array (
                0 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                  4 => 'superuser',
                ),
                1 => 
                array (
                  0 => 'id',
                ),
                2 => 
                array (
                  0 => 'name',
                  1 => 'gecos',
                  2 => 'password',
                  3 => 'superuser',
                ),
                3 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                ),
                4 => 
                array (
                  'id' => 0,
                  'name' => 6,
                  'gecos' => 6,
                  'password' => 6,
                  'superuser' => 8,
                ),
                5 => 
                array (
                  'id' => true,
                ),
                8 => 'id',
                9 => 
                array (
                  'id' => 1,
                  'name' => 2,
                  'gecos' => 2,
                  'password' => 2,
                  'superuser' => 5,
                ),
                10 => 
                array (
                ),
                11 => 
                array (
                ),
                12 => 
                array (
                  'superuser' => NULL,
                ),
                13 => 
                array (
                ),
              ),
            ),
          )),
          'db' => 
          Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
             '_eventsManager' => NULL,
             '_descriptor' => 
            array (
              'host' => 'localhost',
              'username' => 'pgsql',
              'password' => 'secret',
              'dbname' => 'phalcon',
            ),
             '_dialect' => 
            Phalcon\Db\Dialect\Postgresql::__set_state(array(
               '_customFunctions' => NULL,
               '_escapeChar' => '"',
            )),
             '_connectionId' => 0,
             '_sqlStatement' => NULL,
             '_sqlVariables' => NULL,
             '_sqlBindTypes' => NULL,
             '_transactionLevel' => 0,
             '_transactionsWithSavepoints' => false,
             '_pdo' => 
            PDO::__set_state(array(
            )),
             '_affectedRows' => NULL,
             '_type' => 'pgsql',
             '_dialectType' => 'postgresql',
          )),
        ),
         '_freshInstance' => false,
         '_eventsManager' => NULL,
      )),
       '_eventsManager' => NULL,
       '_customEventsManager' => NULL,
       '_readConnectionServices' => NULL,
       '_writeConnectionServices' => NULL,
       '_aliases' => NULL,
       '_modelVisibility' => 
      array (
      ),
       '_hasMany' => NULL,
       '_hasManySingle' => NULL,
       '_hasOne' => NULL,
       '_hasOneSingle' => NULL,
       '_belongsTo' => NULL,
       '_belongsToSingle' => NULL,
       '_hasManyToMany' => NULL,
       '_hasManyToManySingle' => NULL,
       '_initialized' => 
      array (
        'user' => 
        User::__set_state(array(
           'id' => NULL,
           'name' => NULL,
           'password' => NULL,
           'gecos' => NULL,
           'superuser' => NULL,
           '_dependencyInjector' => 
          Phalcon\Di\FactoryDefault::__set_state(array(
             '_services' => 
            array (
              'router' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'router',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
              )),
              'dispatcher' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'dispatcher',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
              )),
              'url' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'url',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'modelsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'modelsMetadata' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsMetadata',
                 '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
              )),
              'response' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'response',
                 '_definition' => 'Phalcon\\Http\\Response',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'cookies' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'cookies',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'request' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'request',
                 '_definition' => 'Phalcon\\Http\\Request',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
              )),
              'filter' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'filter',
                 '_definition' => 'Phalcon\\Filter',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'escaper' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'escaper',
                 '_definition' => 'Phalcon\\Escaper',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'security' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'security',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'crypt' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'crypt',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'annotations' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'annotations',
                 '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flash' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flash',
                 '_definition' => 'Phalcon\\Flash\\Direct',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flashSession' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flashSession',
                 '_definition' => 'Phalcon\\Flash\\Session',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'tag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'tag',
                 '_definition' => 'Phalcon\\Tag',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'session' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'session',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'sessionBag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'sessionBag',
                 '_definition' => 'Phalcon\\Session\\Bag',
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'eventsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'eventsManager',
                 '_definition' => 'Phalcon\\Events\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'transactionManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'transactionManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'assets' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'assets',
                 '_definition' => 'Phalcon\\Assets\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'config' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'config',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
              )),
              'logger' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'logger',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'viewCache' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'viewCache',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'view' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'view',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
              )),
              'db' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'db',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
            ),
             '_sharedInstances' => 
            array (
              'config' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
              'router' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
              'view' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
              'dispatcher' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
              'ApiUsersController' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
              'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
              'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
              'modelsManager' => NULL,
              'modelsMetadata' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
              'db' => 
              Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                 '_eventsManager' => NULL,
                 '_descriptor' => 
                array (
                  'host' => 'localhost',
                  'username' => 'pgsql',
                  'password' => 'secret',
                  'dbname' => 'phalcon',
                ),
                 '_dialect' => 
                Phalcon\Db\Dialect\Postgresql::__set_state(array(
                   '_customFunctions' => NULL,
                   '_escapeChar' => '"',
                )),
                 '_connectionId' => 0,
                 '_sqlStatement' => NULL,
                 '_sqlVariables' => NULL,
                 '_sqlBindTypes' => NULL,
                 '_transactionLevel' => 0,
                 '_transactionsWithSavepoints' => false,
                 '_pdo' => 
                PDO::__set_state(array(
                )),
                 '_affectedRows' => NULL,
                 '_type' => 'pgsql',
                 '_dialectType' => 'postgresql',
              )),
            ),
             '_freshInstance' => false,
             '_eventsManager' => NULL,
          )),
           '_modelsManager' => NULL,
           '_modelsMetaData' => NULL,
           '_errorMessages' => NULL,
           '_operationMade' => 0,
           '_dirtyState' => 1,
           '_transaction' => NULL,
           '_uniqueKey' => NULL,
           '_uniqueParams' => NULL,
           '_uniqueTypes' => NULL,
           '_skipped' => NULL,
           '_related' => NULL,
           '_snapshot' => NULL,
           '_oldSnapshot' => 
          array (
          ),
        )),
      ),
       '_prefix' => '',
       '_sources' => 
      array (
        'user' => 'user',
      ),
       '_schemas' => NULL,
       '_behaviors' => NULL,
       '_lastInitialized' => 
      User::__set_state(array(
         'id' => NULL,
         'name' => NULL,
         'password' => NULL,
         'gecos' => NULL,
         'superuser' => NULL,
         '_dependencyInjector' => 
        Phalcon\Di\FactoryDefault::__set_state(array(
           '_services' => 
          array (
            'router' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'router',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
            )),
            'dispatcher' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'dispatcher',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
            )),
            'url' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'url',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'modelsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'modelsMetadata' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsMetadata',
               '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
            )),
            'response' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'response',
               '_definition' => 'Phalcon\\Http\\Response',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'cookies' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'cookies',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'request' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'request',
               '_definition' => 'Phalcon\\Http\\Request',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
            )),
            'filter' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'filter',
               '_definition' => 'Phalcon\\Filter',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'escaper' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'escaper',
               '_definition' => 'Phalcon\\Escaper',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'security' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'security',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'crypt' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'crypt',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'annotations' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'annotations',
               '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flash' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flash',
               '_definition' => 'Phalcon\\Flash\\Direct',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flashSession' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flashSession',
               '_definition' => 'Phalcon\\Flash\\Session',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'tag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'tag',
               '_definition' => 'Phalcon\\Tag',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'session' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'session',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'sessionBag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'sessionBag',
               '_definition' => 'Phalcon\\Session\\Bag',
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'eventsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'eventsManager',
               '_definition' => 'Phalcon\\Events\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'transactionManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'transactionManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'assets' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'assets',
               '_definition' => 'Phalcon\\Assets\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'config' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'config',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
            )),
            'logger' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'logger',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'viewCache' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'viewCache',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'view' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'view',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
            )),
            'db' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'db',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
          ),
           '_sharedInstances' => 
          array (
            'config' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
            'router' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
            'view' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
            'dispatcher' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
            'ApiUsersController' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
            'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"create","params":{"name":"qwerty","password":"12345","gecos":"212121","superuser":true},"id":"7671d871-7b3c-4e5f-85ec-a24ed3ae2126"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
            'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
            'modelsManager' => NULL,
            'modelsMetadata' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
            'db' => 
            Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
               '_eventsManager' => NULL,
               '_descriptor' => 
              array (
                'host' => 'localhost',
                'username' => 'pgsql',
                'password' => 'secret',
                'dbname' => 'phalcon',
              ),
               '_dialect' => 
              Phalcon\Db\Dialect\Postgresql::__set_state(array(
                 '_customFunctions' => NULL,
                 '_escapeChar' => '"',
              )),
               '_connectionId' => 0,
               '_sqlStatement' => NULL,
               '_sqlVariables' => NULL,
               '_sqlBindTypes' => NULL,
               '_transactionLevel' => 0,
               '_transactionsWithSavepoints' => false,
               '_pdo' => 
              PDO::__set_state(array(
              )),
               '_affectedRows' => NULL,
               '_type' => 'pgsql',
               '_dialectType' => 'postgresql',
            )),
          ),
           '_freshInstance' => false,
           '_eventsManager' => NULL,
        )),
         '_modelsManager' => NULL,
         '_modelsMetaData' => NULL,
         '_errorMessages' => NULL,
         '_operationMade' => 0,
         '_dirtyState' => 1,
         '_transaction' => NULL,
         '_uniqueKey' => NULL,
         '_uniqueParams' => NULL,
         '_uniqueTypes' => NULL,
         '_skipped' => NULL,
         '_related' => NULL,
         '_snapshot' => NULL,
         '_oldSnapshot' => 
        array (
        ),
      )),
       '_lastQuery' => NULL,
       '_reusable' => NULL,
       '_keepSnapshots' => NULL,
       '_dynamicUpdate' => NULL,
       '_namespaceAliases' => NULL,
    )),
     '_modelsMetaData' => NULL,
     '_errorMessages' => NULL,
     '_operationMade' => 0,
     '_dirtyState' => 0,
     '_transaction' => NULL,
     '_uniqueKey' => NULL,
     '_uniqueParams' => NULL,
     '_uniqueTypes' => NULL,
     '_skipped' => NULL,
     '_related' => NULL,
     '_snapshot' => NULL,
     '_oldSnapshot' => 
    array (
    ),
  )),
)
[Mon, 17 Dec 18 23:28:51 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
     'id' => -1,
  )),
   'id' => '585cc303-8b7c-43d6-9827-f947faf74822',
))
[Mon, 17 Dec 18 23:28:51 +0200][DEBUG] array (
  'result' => 
  array (
    0 => 
    Phalcon\Mvc\Model\Row::__set_state(array(
       'id' => 1,
       'name' => 'qwerty',
       'gecos' => 'Loppolo Kuppolo',
       'superuser' => true,
    )),
  ),
)
[Mon, 17 Dec 18 23:28:52 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
   'id' => 'd30612a3-f02c-476d-8929-65e82039b5eb',
))
[Mon, 17 Dec 18 23:28:52 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Resultset\Simple::__set_state(array(
     '_result' => 
    Phalcon\Db\Result\Pdo::__set_state(array(
       '_connection' => 
      Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
         '_eventsManager' => NULL,
         '_descriptor' => 
        array (
          'host' => 'localhost',
          'username' => 'pgsql',
          'password' => 'secret',
          'dbname' => 'phalcon',
        ),
         '_dialect' => 
        Phalcon\Db\Dialect\Postgresql::__set_state(array(
           '_customFunctions' => NULL,
           '_escapeChar' => '"',
        )),
         '_connectionId' => 0,
         '_sqlStatement' => NULL,
         '_sqlVariables' => NULL,
         '_sqlBindTypes' => NULL,
         '_transactionLevel' => 0,
         '_transactionsWithSavepoints' => false,
         '_pdo' => 
        PDO::__set_state(array(
        )),
         '_affectedRows' => NULL,
         '_type' => 'pgsql',
         '_dialectType' => 'postgresql',
      )),
       '_result' => NULL,
       '_fetchMode' => 2,
       '_pdoStatement' => 
      PDOStatement::__set_state(array(
         'queryString' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
      )),
       '_sqlStatement' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
       '_bindParams' => NULL,
       '_bindTypes' => NULL,
       '_rowCount' => 1,
    )),
     '_cache' => NULL,
     '_isFresh' => true,
     '_pointer' => 0,
     '_count' => 1,
     '_activeRow' => NULL,
     '_rows' => 
    array (
      0 => 
      array (
        'id' => 1,
        'name' => 'qwerty',
        'gecos' => 'Loppolo Kuppolo',
        'password' => '12345',
        'superuser' => true,
      ),
    ),
     '_row' => NULL,
     '_errorMessages' => NULL,
     '_hydrateMode' => 0,
     '_model' => 
    User::__set_state(array(
       'id' => NULL,
       'name' => NULL,
       'password' => NULL,
       'gecos' => NULL,
       'superuser' => NULL,
       '_dependencyInjector' => 
      Phalcon\Di\FactoryDefault::__set_state(array(
         '_services' => 
        array (
          'router' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'router',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
          )),
          'dispatcher' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'dispatcher',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
          )),
          'url' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'url',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\Manager::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_customEventsManager' => NULL,
               '_readConnectionServices' => NULL,
               '_writeConnectionServices' => NULL,
               '_aliases' => NULL,
               '_modelVisibility' => 
              array (
              ),
               '_hasMany' => NULL,
               '_hasManySingle' => NULL,
               '_hasOne' => NULL,
               '_hasOneSingle' => NULL,
               '_belongsTo' => NULL,
               '_belongsToSingle' => NULL,
               '_hasManyToMany' => NULL,
               '_hasManyToManySingle' => NULL,
               '_initialized' => 
              array (
                'user' => 
                User::__set_state(array(
                   'id' => NULL,
                   'name' => NULL,
                   'password' => NULL,
                   'gecos' => NULL,
                   'superuser' => NULL,
                   '_dependencyInjector' => NULL,
                   '_modelsManager' => NULL,
                   '_modelsMetaData' => NULL,
                   '_errorMessages' => NULL,
                   '_operationMade' => 0,
                   '_dirtyState' => 1,
                   '_transaction' => NULL,
                   '_uniqueKey' => NULL,
                   '_uniqueParams' => NULL,
                   '_uniqueTypes' => NULL,
                   '_skipped' => NULL,
                   '_related' => NULL,
                   '_snapshot' => NULL,
                   '_oldSnapshot' => 
                  array (
                  ),
                )),
              ),
               '_prefix' => '',
               '_sources' => 
              array (
                'user' => 'user',
              ),
               '_schemas' => NULL,
               '_behaviors' => NULL,
               '_lastInitialized' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
               '_lastQuery' => NULL,
               '_reusable' => NULL,
               '_keepSnapshots' => NULL,
               '_dynamicUpdate' => NULL,
               '_namespaceAliases' => NULL,
            )),
          )),
          'modelsMetadata' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsMetadata',
             '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
          )),
          'response' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'response',
             '_definition' => 'Phalcon\\Http\\Response',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'cookies' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'cookies',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'request' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'request',
             '_definition' => 'Phalcon\\Http\\Request',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
          )),
          'filter' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'filter',
             '_definition' => 'Phalcon\\Filter',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'escaper' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'escaper',
             '_definition' => 'Phalcon\\Escaper',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'security' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'security',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'crypt' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'crypt',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'annotations' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'annotations',
             '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flash' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flash',
             '_definition' => 'Phalcon\\Flash\\Direct',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flashSession' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flashSession',
             '_definition' => 'Phalcon\\Flash\\Session',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'tag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'tag',
             '_definition' => 'Phalcon\\Tag',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'session' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'session',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'sessionBag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'sessionBag',
             '_definition' => 'Phalcon\\Session\\Bag',
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'eventsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'eventsManager',
             '_definition' => 'Phalcon\\Events\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'transactionManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'transactionManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'assets' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'assets',
             '_definition' => 'Phalcon\\Assets\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'config' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'config',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
          )),
          'logger' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'logger',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
          'viewCache' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'viewCache',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'view' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'view',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
          )),
          'db' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'db',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
        ),
         '_sharedInstances' => 
        array (
          'config' => 
          Phalcon\Config\Adapter\Ini::__set_state(array(
             'database' => 
            Phalcon\Config::__set_state(array(
               'host' => 'localhost',
               'dbname' => 'phalcon',
               'username' => 'pgsql',
               'password' => 'secret',
            )),
             'application' => 
            Phalcon\Config::__set_state(array(
               'appDir' => '/var/www/dev/app/../app/',
               'controllersDir' => '/var/www/dev/app/../app/controllers/',
               'modelsDir' => '/var/www/dev/app/../app/models/',
               'migrationsDir' => '/var/www/dev/app/../app/migrations/',
               'viewsDir' => '/var/www/dev/app/../app/views/',
               'pluginsDir' => '/var/www/dev/app/../app/plugins/',
               'libraryDir' => '/var/www/dev/app/../app/library/',
               'utilsDir' => '/var/www/dev/app/../app/utils/',
               'logPath' => '/var/www/dev/app/../logs/debug.log',
               'cacheDir' => '/var/www/dev/app/../cache/',
               'dataDir' => '/var/www/dev/app/../data/',
            )),
          )),
          'router' => 
          Phalcon\Mvc\Router::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_uriSource' => NULL,
             '_namespace' => NULL,
             '_module' => NULL,
             '_controller' => 'api-users',
             '_action' => 'index',
             '_params' => 
            array (
            ),
             '_routes' => 
            array (
              0 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/',
                 '_compiledPattern' => '/',
                 '_paths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 0,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              1 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/login',
                 '_compiledPattern' => '/api/login',
                 '_paths' => 
                array (
                  'controller' => 'api-login',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 1,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              2 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
            ),
             '_matchedRoute' => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/users',
               '_compiledPattern' => '/api/users',
               '_paths' => 
              array (
                'controller' => 'api-users',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 2,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
             '_matches' => NULL,
             '_wasMatched' => true,
             '_defaultNamespace' => NULL,
             '_defaultModule' => NULL,
             '_defaultController' => 'index',
             '_defaultAction' => 'index',
             '_defaultParams' => 
            array (
            ),
             '_removeExtraSlashes' => true,
             '_notFoundPaths' => 
            array (
              'controller' => 'index',
              'action' => 'index',
            ),
             '_keyRouteNames' => 
            array (
            ),
             '_keyRouteIds' => 
            array (
            ),
          )),
          'view' => 
          Phalcon\Mvc\View::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_options' => 
            array (
            ),
             '_basePath' => '',
             '_content' => NULL,
             '_renderLevel' => 5,
             '_currentRenderLevel' => 0,
             '_disabledLevels' => NULL,
             '_viewParams' => 
            array (
            ),
             '_layout' => NULL,
             '_layoutsDir' => '',
             '_partialsDir' => '',
             '_viewsDirs' => '/var/www/dev/app/../app/views/',
             '_templatesBefore' => 
            array (
            ),
             '_templatesAfter' => 
            array (
            ),
             '_engines' => false,
             '_registeredEngines' => NULL,
             '_mainView' => 'index',
             '_controllerName' => NULL,
             '_actionName' => NULL,
             '_params' => NULL,
             '_pickView' => NULL,
             '_cache' => NULL,
             '_cacheLevel' => 0,
             '_activeRenderPaths' => NULL,
             '_disabled' => false,
          )),
          'dispatcher' => 
          Phalcon\Mvc\Dispatcher::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => 
            Phalcon\Events\Manager::__set_state(array(
               '_events' => 
              array (
                'dispatch:beforeExecuteRoute' => 
                array (
                  0 => 
                  SecurityPlugin::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                  )),
                ),
              ),
               '_collect' => false,
               '_enablePriorities' => false,
               '_responses' => NULL,
            )),
             '_activeHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_finished' => true,
             '_forwarded' => false,
             '_moduleName' => '',
             '_namespaceName' => NULL,
             '_handlerName' => 'api-users',
             '_actionName' => 'index',
             '_params' => 
            array (
            ),
             '_returnedValue' => NULL,
             '_lastHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_defaultNamespace' => NULL,
             '_actionSuffix' => 'Action',
             '_previousNamespaceName' => NULL,
             '_previousHandlerName' => NULL,
             '_previousActionName' => NULL,
             '_modelBinding' => false,
             '_modelBinder' => NULL,
             '_isControllerInitialize' => false,
             '_handlerSuffix' => 'Controller',
             '_defaultHandler' => 'index',
             '_defaultAction' => 'index',
          )),
          'ApiUsersController' => 
          ApiUsersController::__set_state(array(
             'invalidRequest' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32600,
                'message' => 'Invalid Request',
              ),
              'id' => NULL,
            ),
             'parseError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32700,
                'message' => 'Parse error',
              ),
              'id' => NULL,
            ),
             'methodNotFound' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32601,
                'message' => 'Method not found',
              ),
              'id' => 1,
            ),
             'internalError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32603,
                'message' => 'Internal error',
              ),
              'id' => 0,
            ),
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
             'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
          )),
          'request' => 
          Phalcon\Http\Request::__set_state(array(
             '_dependencyInjector' => NULL,
             '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
             '_filter' => NULL,
             '_putCache' => NULL,
             '_httpMethodParameterOverride' => false,
             '_strictHostCheck' => false,
          )),
          'logger' => 
          Phalcon\Logger\Adapter\File::__set_state(array(
             '_transaction' => false,
             '_queue' => 
            array (
            ),
             '_formatter' => 
            Phalcon\Logger\Formatter\Line::__set_state(array(
               '_dateFormat' => 'D, d M y H:i:s O',
               '_format' => '[%date%][%type%] %message%',
            )),
             '_logLevel' => 9,
             '_fileHandler' => NULL,
             '_path' => '/var/www/dev/app/../logs/debug.log',
             '_options' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Mvc\Model\Manager::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_customEventsManager' => NULL,
             '_readConnectionServices' => NULL,
             '_writeConnectionServices' => NULL,
             '_aliases' => NULL,
             '_modelVisibility' => 
            array (
            ),
             '_hasMany' => NULL,
             '_hasManySingle' => NULL,
             '_hasOne' => NULL,
             '_hasOneSingle' => NULL,
             '_belongsTo' => NULL,
             '_belongsToSingle' => NULL,
             '_hasManyToMany' => NULL,
             '_hasManyToManySingle' => NULL,
             '_initialized' => 
            array (
              'user' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
            ),
             '_prefix' => '',
             '_sources' => 
            array (
              'user' => 'user',
            ),
             '_schemas' => NULL,
             '_behaviors' => NULL,
             '_lastInitialized' => 
            User::__set_state(array(
               'id' => NULL,
               'name' => NULL,
               'password' => NULL,
               'gecos' => NULL,
               'superuser' => NULL,
               '_dependencyInjector' => NULL,
               '_modelsManager' => NULL,
               '_modelsMetaData' => NULL,
               '_errorMessages' => NULL,
               '_operationMade' => 0,
               '_dirtyState' => 1,
               '_transaction' => NULL,
               '_uniqueKey' => NULL,
               '_uniqueParams' => NULL,
               '_uniqueTypes' => NULL,
               '_skipped' => NULL,
               '_related' => NULL,
               '_snapshot' => NULL,
               '_oldSnapshot' => 
              array (
              ),
            )),
             '_lastQuery' => NULL,
             '_reusable' => NULL,
             '_keepSnapshots' => NULL,
             '_dynamicUpdate' => NULL,
             '_namespaceAliases' => NULL,
          )),
          'modelsMetadata' => 
          Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
             '_dependencyInjector' => NULL,
             '_strategy' => 
            Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
            )),
             '_columnMap' => 
            array (
              'user' => 
              array (
                0 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
                1 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
              ),
            ),
             '_metaData' => 
            array (
              'user-user' => 
              array (
                0 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                  4 => 'superuser',
                ),
                1 => 
                array (
                  0 => 'id',
                ),
                2 => 
                array (
                  0 => 'name',
                  1 => 'gecos',
                  2 => 'password',
                  3 => 'superuser',
                ),
                3 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                ),
                4 => 
                array (
                  'id' => 0,
                  'name' => 6,
                  'gecos' => 6,
                  'password' => 6,
                  'superuser' => 8,
                ),
                5 => 
                array (
                  'id' => true,
                ),
                8 => 'id',
                9 => 
                array (
                  'id' => 1,
                  'name' => 2,
                  'gecos' => 2,
                  'password' => 2,
                  'superuser' => 5,
                ),
                10 => 
                array (
                ),
                11 => 
                array (
                ),
                12 => 
                array (
                  'superuser' => NULL,
                ),
                13 => 
                array (
                ),
              ),
            ),
          )),
          'db' => 
          Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
             '_eventsManager' => NULL,
             '_descriptor' => 
            array (
              'host' => 'localhost',
              'username' => 'pgsql',
              'password' => 'secret',
              'dbname' => 'phalcon',
            ),
             '_dialect' => 
            Phalcon\Db\Dialect\Postgresql::__set_state(array(
               '_customFunctions' => NULL,
               '_escapeChar' => '"',
            )),
             '_connectionId' => 0,
             '_sqlStatement' => NULL,
             '_sqlVariables' => NULL,
             '_sqlBindTypes' => NULL,
             '_transactionLevel' => 0,
             '_transactionsWithSavepoints' => false,
             '_pdo' => 
            PDO::__set_state(array(
            )),
             '_affectedRows' => NULL,
             '_type' => 'pgsql',
             '_dialectType' => 'postgresql',
          )),
        ),
         '_freshInstance' => false,
         '_eventsManager' => NULL,
      )),
       '_modelsManager' => 
      Phalcon\Mvc\Model\Manager::__set_state(array(
         '_dependencyInjector' => 
        Phalcon\Di\FactoryDefault::__set_state(array(
           '_services' => 
          array (
            'router' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'router',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
            )),
            'dispatcher' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'dispatcher',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
            )),
            'url' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'url',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'modelsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'modelsMetadata' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsMetadata',
               '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
            )),
            'response' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'response',
               '_definition' => 'Phalcon\\Http\\Response',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'cookies' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'cookies',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'request' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'request',
               '_definition' => 'Phalcon\\Http\\Request',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
            )),
            'filter' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'filter',
               '_definition' => 'Phalcon\\Filter',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'escaper' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'escaper',
               '_definition' => 'Phalcon\\Escaper',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'security' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'security',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'crypt' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'crypt',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'annotations' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'annotations',
               '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flash' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flash',
               '_definition' => 'Phalcon\\Flash\\Direct',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flashSession' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flashSession',
               '_definition' => 'Phalcon\\Flash\\Session',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'tag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'tag',
               '_definition' => 'Phalcon\\Tag',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'session' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'session',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'sessionBag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'sessionBag',
               '_definition' => 'Phalcon\\Session\\Bag',
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'eventsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'eventsManager',
               '_definition' => 'Phalcon\\Events\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'transactionManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'transactionManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'assets' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'assets',
               '_definition' => 'Phalcon\\Assets\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'config' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'config',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
            )),
            'logger' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'logger',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'viewCache' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'viewCache',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'view' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'view',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
            )),
            'db' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'db',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
          ),
           '_sharedInstances' => 
          array (
            'config' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
            'router' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
            'view' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
            'dispatcher' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
            'ApiUsersController' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
            'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
            'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
            'modelsManager' => NULL,
            'modelsMetadata' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
            'db' => 
            Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
               '_eventsManager' => NULL,
               '_descriptor' => 
              array (
                'host' => 'localhost',
                'username' => 'pgsql',
                'password' => 'secret',
                'dbname' => 'phalcon',
              ),
               '_dialect' => 
              Phalcon\Db\Dialect\Postgresql::__set_state(array(
                 '_customFunctions' => NULL,
                 '_escapeChar' => '"',
              )),
               '_connectionId' => 0,
               '_sqlStatement' => NULL,
               '_sqlVariables' => NULL,
               '_sqlBindTypes' => NULL,
               '_transactionLevel' => 0,
               '_transactionsWithSavepoints' => false,
               '_pdo' => 
              PDO::__set_state(array(
              )),
               '_affectedRows' => NULL,
               '_type' => 'pgsql',
               '_dialectType' => 'postgresql',
            )),
          ),
           '_freshInstance' => false,
           '_eventsManager' => NULL,
        )),
         '_eventsManager' => NULL,
         '_customEventsManager' => NULL,
         '_readConnectionServices' => NULL,
         '_writeConnectionServices' => NULL,
         '_aliases' => NULL,
         '_modelVisibility' => 
        array (
        ),
         '_hasMany' => NULL,
         '_hasManySingle' => NULL,
         '_hasOne' => NULL,
         '_hasOneSingle' => NULL,
         '_belongsTo' => NULL,
         '_belongsToSingle' => NULL,
         '_hasManyToMany' => NULL,
         '_hasManyToManySingle' => NULL,
         '_initialized' => 
        array (
          'user' => 
          User::__set_state(array(
             'id' => NULL,
             'name' => NULL,
             'password' => NULL,
             'gecos' => NULL,
             'superuser' => NULL,
             '_dependencyInjector' => 
            Phalcon\Di\FactoryDefault::__set_state(array(
               '_services' => 
              array (
                'router' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'router',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Router::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_uriSource' => NULL,
                     '_namespace' => NULL,
                     '_module' => NULL,
                     '_controller' => 'api-users',
                     '_action' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_routes' => 
                    array (
                      0 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/',
                         '_compiledPattern' => '/',
                         '_paths' => 
                        array (
                          'controller' => 'index',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 0,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      1 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/login',
                         '_compiledPattern' => '/api/login',
                         '_paths' => 
                        array (
                          'controller' => 'api-login',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 1,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      2 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/users',
                         '_compiledPattern' => '/api/users',
                         '_paths' => 
                        array (
                          'controller' => 'api-users',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 2,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                    ),
                     '_matchedRoute' => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                     '_matches' => NULL,
                     '_wasMatched' => true,
                     '_defaultNamespace' => NULL,
                     '_defaultModule' => NULL,
                     '_defaultController' => 'index',
                     '_defaultAction' => 'index',
                     '_defaultParams' => 
                    array (
                    ),
                     '_removeExtraSlashes' => true,
                     '_notFoundPaths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_keyRouteNames' => 
                    array (
                    ),
                     '_keyRouteIds' => 
                    array (
                    ),
                  )),
                )),
                'dispatcher' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'dispatcher',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Dispatcher::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => 
                    Phalcon\Events\Manager::__set_state(array(
                       '_events' => 
                      array (
                        'dispatch:beforeExecuteRoute' => 
                        array (
                          0 => 
                          SecurityPlugin::__set_state(array(
                             '_dependencyInjector' => NULL,
                             '_eventsManager' => NULL,
                          )),
                        ),
                      ),
                       '_collect' => false,
                       '_enablePriorities' => false,
                       '_responses' => NULL,
                    )),
                     '_activeHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_finished' => true,
                     '_forwarded' => false,
                     '_moduleName' => '',
                     '_namespaceName' => NULL,
                     '_handlerName' => 'api-users',
                     '_actionName' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_returnedValue' => NULL,
                     '_lastHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_defaultNamespace' => NULL,
                     '_actionSuffix' => 'Action',
                     '_previousNamespaceName' => NULL,
                     '_previousHandlerName' => NULL,
                     '_previousActionName' => NULL,
                     '_modelBinding' => false,
                     '_modelBinder' => NULL,
                     '_isControllerInitialize' => false,
                     '_handlerSuffix' => 'Controller',
                     '_defaultHandler' => 'index',
                     '_defaultAction' => 'index',
                  )),
                )),
                'url' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'url',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'modelsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'modelsMetadata' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsMetadata',
                   '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_strategy' => 
                    Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                    )),
                     '_columnMap' => 
                    array (
                      'user' => 
                      array (
                        0 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                        1 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                      ),
                    ),
                     '_metaData' => 
                    array (
                      'user-user' => 
                      array (
                        0 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                          4 => 'superuser',
                        ),
                        1 => 
                        array (
                          0 => 'id',
                        ),
                        2 => 
                        array (
                          0 => 'name',
                          1 => 'gecos',
                          2 => 'password',
                          3 => 'superuser',
                        ),
                        3 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                        ),
                        4 => 
                        array (
                          'id' => 0,
                          'name' => 6,
                          'gecos' => 6,
                          'password' => 6,
                          'superuser' => 8,
                        ),
                        5 => 
                        array (
                          'id' => true,
                        ),
                        8 => 'id',
                        9 => 
                        array (
                          'id' => 1,
                          'name' => 2,
                          'gecos' => 2,
                          'password' => 2,
                          'superuser' => 5,
                        ),
                        10 => 
                        array (
                        ),
                        11 => 
                        array (
                        ),
                        12 => 
                        array (
                          'superuser' => NULL,
                        ),
                        13 => 
                        array (
                        ),
                      ),
                    ),
                  )),
                )),
                'response' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'response',
                   '_definition' => 'Phalcon\\Http\\Response',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'cookies' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'cookies',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'request' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'request',
                   '_definition' => 'Phalcon\\Http\\Request',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                )),
                'filter' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'filter',
                   '_definition' => 'Phalcon\\Filter',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'escaper' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'escaper',
                   '_definition' => 'Phalcon\\Escaper',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'security' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'security',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'crypt' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'crypt',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'annotations' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'annotations',
                   '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flash' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flash',
                   '_definition' => 'Phalcon\\Flash\\Direct',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flashSession' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flashSession',
                   '_definition' => 'Phalcon\\Flash\\Session',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'tag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'tag',
                   '_definition' => 'Phalcon\\Tag',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'session' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'session',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'sessionBag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'sessionBag',
                   '_definition' => 'Phalcon\\Session\\Bag',
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'eventsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'eventsManager',
                   '_definition' => 'Phalcon\\Events\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'transactionManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'transactionManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'assets' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'assets',
                   '_definition' => 'Phalcon\\Assets\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'config' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'config',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Config\Adapter\Ini::__set_state(array(
                     'database' => 
                    Phalcon\Config::__set_state(array(
                       'host' => 'localhost',
                       'dbname' => 'phalcon',
                       'username' => 'pgsql',
                       'password' => 'secret',
                    )),
                     'application' => 
                    Phalcon\Config::__set_state(array(
                       'appDir' => '/var/www/dev/app/../app/',
                       'controllersDir' => '/var/www/dev/app/../app/controllers/',
                       'modelsDir' => '/var/www/dev/app/../app/models/',
                       'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                       'viewsDir' => '/var/www/dev/app/../app/views/',
                       'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                       'libraryDir' => '/var/www/dev/app/../app/library/',
                       'utilsDir' => '/var/www/dev/app/../app/utils/',
                       'logPath' => '/var/www/dev/app/../logs/debug.log',
                       'cacheDir' => '/var/www/dev/app/../cache/',
                       'dataDir' => '/var/www/dev/app/../data/',
                    )),
                  )),
                )),
                'logger' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'logger',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'viewCache' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'viewCache',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'view' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'view',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\View::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_options' => 
                    array (
                    ),
                     '_basePath' => '',
                     '_content' => NULL,
                     '_renderLevel' => 5,
                     '_currentRenderLevel' => 0,
                     '_disabledLevels' => NULL,
                     '_viewParams' => 
                    array (
                    ),
                     '_layout' => NULL,
                     '_layoutsDir' => '',
                     '_partialsDir' => '',
                     '_viewsDirs' => '/var/www/dev/app/../app/views/',
                     '_templatesBefore' => 
                    array (
                    ),
                     '_templatesAfter' => 
                    array (
                    ),
                     '_engines' => false,
                     '_registeredEngines' => NULL,
                     '_mainView' => 'index',
                     '_controllerName' => NULL,
                     '_actionName' => NULL,
                     '_params' => NULL,
                     '_pickView' => NULL,
                     '_cache' => NULL,
                     '_cacheLevel' => 0,
                     '_activeRenderPaths' => NULL,
                     '_disabled' => false,
                  )),
                )),
                'db' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'db',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
              ),
               '_sharedInstances' => 
              array (
                'config' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
                'router' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
                'view' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
                'dispatcher' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
                'ApiUsersController' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
                'modelsManager' => NULL,
                'modelsMetadata' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
                'db' => 
                Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                   '_eventsManager' => NULL,
                   '_descriptor' => 
                  array (
                    'host' => 'localhost',
                    'username' => 'pgsql',
                    'password' => 'secret',
                    'dbname' => 'phalcon',
                  ),
                   '_dialect' => 
                  Phalcon\Db\Dialect\Postgresql::__set_state(array(
                     '_customFunctions' => NULL,
                     '_escapeChar' => '"',
                  )),
                   '_connectionId' => 0,
                   '_sqlStatement' => NULL,
                   '_sqlVariables' => NULL,
                   '_sqlBindTypes' => NULL,
                   '_transactionLevel' => 0,
                   '_transactionsWithSavepoints' => false,
                   '_pdo' => 
                  PDO::__set_state(array(
                  )),
                   '_affectedRows' => NULL,
                   '_type' => 'pgsql',
                   '_dialectType' => 'postgresql',
                )),
              ),
               '_freshInstance' => false,
               '_eventsManager' => NULL,
            )),
             '_modelsManager' => NULL,
             '_modelsMetaData' => NULL,
             '_errorMessages' => NULL,
             '_operationMade' => 0,
             '_dirtyState' => 1,
             '_transaction' => NULL,
             '_uniqueKey' => NULL,
             '_uniqueParams' => NULL,
             '_uniqueTypes' => NULL,
             '_skipped' => NULL,
             '_related' => NULL,
             '_snapshot' => NULL,
             '_oldSnapshot' => 
            array (
            ),
          )),
        ),
         '_prefix' => '',
         '_sources' => 
        array (
          'user' => 'user',
        ),
         '_schemas' => NULL,
         '_behaviors' => NULL,
         '_lastInitialized' => 
        User::__set_state(array(
           'id' => NULL,
           'name' => NULL,
           'password' => NULL,
           'gecos' => NULL,
           'superuser' => NULL,
           '_dependencyInjector' => 
          Phalcon\Di\FactoryDefault::__set_state(array(
             '_services' => 
            array (
              'router' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'router',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
              )),
              'dispatcher' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'dispatcher',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
              )),
              'url' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'url',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'modelsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'modelsMetadata' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsMetadata',
                 '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
              )),
              'response' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'response',
                 '_definition' => 'Phalcon\\Http\\Response',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'cookies' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'cookies',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'request' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'request',
                 '_definition' => 'Phalcon\\Http\\Request',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
              )),
              'filter' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'filter',
                 '_definition' => 'Phalcon\\Filter',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'escaper' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'escaper',
                 '_definition' => 'Phalcon\\Escaper',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'security' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'security',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'crypt' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'crypt',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'annotations' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'annotations',
                 '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flash' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flash',
                 '_definition' => 'Phalcon\\Flash\\Direct',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flashSession' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flashSession',
                 '_definition' => 'Phalcon\\Flash\\Session',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'tag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'tag',
                 '_definition' => 'Phalcon\\Tag',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'session' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'session',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'sessionBag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'sessionBag',
                 '_definition' => 'Phalcon\\Session\\Bag',
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'eventsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'eventsManager',
                 '_definition' => 'Phalcon\\Events\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'transactionManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'transactionManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'assets' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'assets',
                 '_definition' => 'Phalcon\\Assets\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'config' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'config',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
              )),
              'logger' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'logger',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'viewCache' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'viewCache',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'view' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'view',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
              )),
              'db' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'db',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
            ),
             '_sharedInstances' => 
            array (
              'config' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
              'router' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
              'view' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
              'dispatcher' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
              'ApiUsersController' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
              'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"d30612a3-f02c-476d-8929-65e82039b5eb"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
              'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
              'modelsManager' => NULL,
              'modelsMetadata' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
              'db' => 
              Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                 '_eventsManager' => NULL,
                 '_descriptor' => 
                array (
                  'host' => 'localhost',
                  'username' => 'pgsql',
                  'password' => 'secret',
                  'dbname' => 'phalcon',
                ),
                 '_dialect' => 
                Phalcon\Db\Dialect\Postgresql::__set_state(array(
                   '_customFunctions' => NULL,
                   '_escapeChar' => '"',
                )),
                 '_connectionId' => 0,
                 '_sqlStatement' => NULL,
                 '_sqlVariables' => NULL,
                 '_sqlBindTypes' => NULL,
                 '_transactionLevel' => 0,
                 '_transactionsWithSavepoints' => false,
                 '_pdo' => 
                PDO::__set_state(array(
                )),
                 '_affectedRows' => NULL,
                 '_type' => 'pgsql',
                 '_dialectType' => 'postgresql',
              )),
            ),
             '_freshInstance' => false,
             '_eventsManager' => NULL,
          )),
           '_modelsManager' => NULL,
           '_modelsMetaData' => NULL,
           '_errorMessages' => NULL,
           '_operationMade' => 0,
           '_dirtyState' => 1,
           '_transaction' => NULL,
           '_uniqueKey' => NULL,
           '_uniqueParams' => NULL,
           '_uniqueTypes' => NULL,
           '_skipped' => NULL,
           '_related' => NULL,
           '_snapshot' => NULL,
           '_oldSnapshot' => 
          array (
          ),
        )),
         '_lastQuery' => NULL,
         '_reusable' => NULL,
         '_keepSnapshots' => NULL,
         '_dynamicUpdate' => NULL,
         '_namespaceAliases' => NULL,
      )),
       '_modelsMetaData' => NULL,
       '_errorMessages' => NULL,
       '_operationMade' => 0,
       '_dirtyState' => 1,
       '_transaction' => NULL,
       '_uniqueKey' => NULL,
       '_uniqueParams' => NULL,
       '_uniqueTypes' => NULL,
       '_skipped' => NULL,
       '_related' => NULL,
       '_snapshot' => NULL,
       '_oldSnapshot' => 
      array (
      ),
    )),
     '_columnMap' => 
    array (
      'id' => 'id',
      'name' => 'name',
      'password' => 'password',
      'gecos' => 'gecos',
      'superuser' => 'superuser',
    ),
     '_keepSnapshots' => false,
  )),
)
[Mon, 17 Dec 18 23:29:01 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'update',
   'params' => 
  stdClass::__set_state(array(
     'id' => 1,
     'name' => 'qwerty',
     'password' => '12345',
     'gecos' => 'Loppolo Kuppolo 2',
     'superuser' => true,
  )),
   'id' => '5a3d9341-8fed-40f3-9768-9da437c38e35',
))
[Mon, 17 Dec 18 23:29:01 +0200][DEBUG] array (
  'result' => true,
)
[Mon, 17 Dec 18 23:29:01 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
   'id' => 'de204048-2301-432d-a444-00cafd506942',
))
[Mon, 17 Dec 18 23:29:01 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Resultset\Simple::__set_state(array(
     '_result' => 
    Phalcon\Db\Result\Pdo::__set_state(array(
       '_connection' => 
      Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
         '_eventsManager' => NULL,
         '_descriptor' => 
        array (
          'host' => 'localhost',
          'username' => 'pgsql',
          'password' => 'secret',
          'dbname' => 'phalcon',
        ),
         '_dialect' => 
        Phalcon\Db\Dialect\Postgresql::__set_state(array(
           '_customFunctions' => NULL,
           '_escapeChar' => '"',
        )),
         '_connectionId' => 0,
         '_sqlStatement' => NULL,
         '_sqlVariables' => NULL,
         '_sqlBindTypes' => NULL,
         '_transactionLevel' => 0,
         '_transactionsWithSavepoints' => false,
         '_pdo' => 
        PDO::__set_state(array(
        )),
         '_affectedRows' => NULL,
         '_type' => 'pgsql',
         '_dialectType' => 'postgresql',
      )),
       '_result' => NULL,
       '_fetchMode' => 2,
       '_pdoStatement' => 
      PDOStatement::__set_state(array(
         'queryString' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
      )),
       '_sqlStatement' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
       '_bindParams' => NULL,
       '_bindTypes' => NULL,
       '_rowCount' => 1,
    )),
     '_cache' => NULL,
     '_isFresh' => true,
     '_pointer' => 0,
     '_count' => 1,
     '_activeRow' => NULL,
     '_rows' => 
    array (
      0 => 
      array (
        'id' => 1,
        'name' => 'qwerty',
        'gecos' => 'Loppolo Kuppolo 2',
        'password' => '12345',
        'superuser' => true,
      ),
    ),
     '_row' => NULL,
     '_errorMessages' => NULL,
     '_hydrateMode' => 0,
     '_model' => 
    User::__set_state(array(
       'id' => NULL,
       'name' => NULL,
       'password' => NULL,
       'gecos' => NULL,
       'superuser' => NULL,
       '_dependencyInjector' => 
      Phalcon\Di\FactoryDefault::__set_state(array(
         '_services' => 
        array (
          'router' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'router',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
          )),
          'dispatcher' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'dispatcher',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
          )),
          'url' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'url',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\Manager::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_customEventsManager' => NULL,
               '_readConnectionServices' => NULL,
               '_writeConnectionServices' => NULL,
               '_aliases' => NULL,
               '_modelVisibility' => 
              array (
              ),
               '_hasMany' => NULL,
               '_hasManySingle' => NULL,
               '_hasOne' => NULL,
               '_hasOneSingle' => NULL,
               '_belongsTo' => NULL,
               '_belongsToSingle' => NULL,
               '_hasManyToMany' => NULL,
               '_hasManyToManySingle' => NULL,
               '_initialized' => 
              array (
                'user' => 
                User::__set_state(array(
                   'id' => NULL,
                   'name' => NULL,
                   'password' => NULL,
                   'gecos' => NULL,
                   'superuser' => NULL,
                   '_dependencyInjector' => NULL,
                   '_modelsManager' => NULL,
                   '_modelsMetaData' => NULL,
                   '_errorMessages' => NULL,
                   '_operationMade' => 0,
                   '_dirtyState' => 1,
                   '_transaction' => NULL,
                   '_uniqueKey' => NULL,
                   '_uniqueParams' => NULL,
                   '_uniqueTypes' => NULL,
                   '_skipped' => NULL,
                   '_related' => NULL,
                   '_snapshot' => NULL,
                   '_oldSnapshot' => 
                  array (
                  ),
                )),
              ),
               '_prefix' => '',
               '_sources' => 
              array (
                'user' => 'user',
              ),
               '_schemas' => NULL,
               '_behaviors' => NULL,
               '_lastInitialized' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
               '_lastQuery' => NULL,
               '_reusable' => NULL,
               '_keepSnapshots' => NULL,
               '_dynamicUpdate' => NULL,
               '_namespaceAliases' => NULL,
            )),
          )),
          'modelsMetadata' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsMetadata',
             '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
          )),
          'response' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'response',
             '_definition' => 'Phalcon\\Http\\Response',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'cookies' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'cookies',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'request' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'request',
             '_definition' => 'Phalcon\\Http\\Request',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
          )),
          'filter' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'filter',
             '_definition' => 'Phalcon\\Filter',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'escaper' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'escaper',
             '_definition' => 'Phalcon\\Escaper',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'security' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'security',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'crypt' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'crypt',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'annotations' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'annotations',
             '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flash' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flash',
             '_definition' => 'Phalcon\\Flash\\Direct',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flashSession' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flashSession',
             '_definition' => 'Phalcon\\Flash\\Session',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'tag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'tag',
             '_definition' => 'Phalcon\\Tag',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'session' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'session',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'sessionBag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'sessionBag',
             '_definition' => 'Phalcon\\Session\\Bag',
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'eventsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'eventsManager',
             '_definition' => 'Phalcon\\Events\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'transactionManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'transactionManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'assets' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'assets',
             '_definition' => 'Phalcon\\Assets\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'config' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'config',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
          )),
          'logger' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'logger',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
          'viewCache' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'viewCache',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'view' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'view',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
          )),
          'db' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'db',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
        ),
         '_sharedInstances' => 
        array (
          'config' => 
          Phalcon\Config\Adapter\Ini::__set_state(array(
             'database' => 
            Phalcon\Config::__set_state(array(
               'host' => 'localhost',
               'dbname' => 'phalcon',
               'username' => 'pgsql',
               'password' => 'secret',
            )),
             'application' => 
            Phalcon\Config::__set_state(array(
               'appDir' => '/var/www/dev/app/../app/',
               'controllersDir' => '/var/www/dev/app/../app/controllers/',
               'modelsDir' => '/var/www/dev/app/../app/models/',
               'migrationsDir' => '/var/www/dev/app/../app/migrations/',
               'viewsDir' => '/var/www/dev/app/../app/views/',
               'pluginsDir' => '/var/www/dev/app/../app/plugins/',
               'libraryDir' => '/var/www/dev/app/../app/library/',
               'utilsDir' => '/var/www/dev/app/../app/utils/',
               'logPath' => '/var/www/dev/app/../logs/debug.log',
               'cacheDir' => '/var/www/dev/app/../cache/',
               'dataDir' => '/var/www/dev/app/../data/',
            )),
          )),
          'router' => 
          Phalcon\Mvc\Router::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_uriSource' => NULL,
             '_namespace' => NULL,
             '_module' => NULL,
             '_controller' => 'api-users',
             '_action' => 'index',
             '_params' => 
            array (
            ),
             '_routes' => 
            array (
              0 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/',
                 '_compiledPattern' => '/',
                 '_paths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 0,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              1 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/login',
                 '_compiledPattern' => '/api/login',
                 '_paths' => 
                array (
                  'controller' => 'api-login',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 1,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              2 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
            ),
             '_matchedRoute' => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/users',
               '_compiledPattern' => '/api/users',
               '_paths' => 
              array (
                'controller' => 'api-users',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 2,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
             '_matches' => NULL,
             '_wasMatched' => true,
             '_defaultNamespace' => NULL,
             '_defaultModule' => NULL,
             '_defaultController' => 'index',
             '_defaultAction' => 'index',
             '_defaultParams' => 
            array (
            ),
             '_removeExtraSlashes' => true,
             '_notFoundPaths' => 
            array (
              'controller' => 'index',
              'action' => 'index',
            ),
             '_keyRouteNames' => 
            array (
            ),
             '_keyRouteIds' => 
            array (
            ),
          )),
          'view' => 
          Phalcon\Mvc\View::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_options' => 
            array (
            ),
             '_basePath' => '',
             '_content' => NULL,
             '_renderLevel' => 5,
             '_currentRenderLevel' => 0,
             '_disabledLevels' => NULL,
             '_viewParams' => 
            array (
            ),
             '_layout' => NULL,
             '_layoutsDir' => '',
             '_partialsDir' => '',
             '_viewsDirs' => '/var/www/dev/app/../app/views/',
             '_templatesBefore' => 
            array (
            ),
             '_templatesAfter' => 
            array (
            ),
             '_engines' => false,
             '_registeredEngines' => NULL,
             '_mainView' => 'index',
             '_controllerName' => NULL,
             '_actionName' => NULL,
             '_params' => NULL,
             '_pickView' => NULL,
             '_cache' => NULL,
             '_cacheLevel' => 0,
             '_activeRenderPaths' => NULL,
             '_disabled' => false,
          )),
          'dispatcher' => 
          Phalcon\Mvc\Dispatcher::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => 
            Phalcon\Events\Manager::__set_state(array(
               '_events' => 
              array (
                'dispatch:beforeExecuteRoute' => 
                array (
                  0 => 
                  SecurityPlugin::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                  )),
                ),
              ),
               '_collect' => false,
               '_enablePriorities' => false,
               '_responses' => NULL,
            )),
             '_activeHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_finished' => true,
             '_forwarded' => false,
             '_moduleName' => '',
             '_namespaceName' => NULL,
             '_handlerName' => 'api-users',
             '_actionName' => 'index',
             '_params' => 
            array (
            ),
             '_returnedValue' => NULL,
             '_lastHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_defaultNamespace' => NULL,
             '_actionSuffix' => 'Action',
             '_previousNamespaceName' => NULL,
             '_previousHandlerName' => NULL,
             '_previousActionName' => NULL,
             '_modelBinding' => false,
             '_modelBinder' => NULL,
             '_isControllerInitialize' => false,
             '_handlerSuffix' => 'Controller',
             '_defaultHandler' => 'index',
             '_defaultAction' => 'index',
          )),
          'ApiUsersController' => 
          ApiUsersController::__set_state(array(
             'invalidRequest' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32600,
                'message' => 'Invalid Request',
              ),
              'id' => NULL,
            ),
             'parseError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32700,
                'message' => 'Parse error',
              ),
              'id' => NULL,
            ),
             'methodNotFound' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32601,
                'message' => 'Method not found',
              ),
              'id' => 1,
            ),
             'internalError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32603,
                'message' => 'Internal error',
              ),
              'id' => 0,
            ),
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
             'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
          )),
          'request' => 
          Phalcon\Http\Request::__set_state(array(
             '_dependencyInjector' => NULL,
             '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
             '_filter' => NULL,
             '_putCache' => NULL,
             '_httpMethodParameterOverride' => false,
             '_strictHostCheck' => false,
          )),
          'logger' => 
          Phalcon\Logger\Adapter\File::__set_state(array(
             '_transaction' => false,
             '_queue' => 
            array (
            ),
             '_formatter' => 
            Phalcon\Logger\Formatter\Line::__set_state(array(
               '_dateFormat' => 'D, d M y H:i:s O',
               '_format' => '[%date%][%type%] %message%',
            )),
             '_logLevel' => 9,
             '_fileHandler' => NULL,
             '_path' => '/var/www/dev/app/../logs/debug.log',
             '_options' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Mvc\Model\Manager::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_customEventsManager' => NULL,
             '_readConnectionServices' => NULL,
             '_writeConnectionServices' => NULL,
             '_aliases' => NULL,
             '_modelVisibility' => 
            array (
            ),
             '_hasMany' => NULL,
             '_hasManySingle' => NULL,
             '_hasOne' => NULL,
             '_hasOneSingle' => NULL,
             '_belongsTo' => NULL,
             '_belongsToSingle' => NULL,
             '_hasManyToMany' => NULL,
             '_hasManyToManySingle' => NULL,
             '_initialized' => 
            array (
              'user' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
            ),
             '_prefix' => '',
             '_sources' => 
            array (
              'user' => 'user',
            ),
             '_schemas' => NULL,
             '_behaviors' => NULL,
             '_lastInitialized' => 
            User::__set_state(array(
               'id' => NULL,
               'name' => NULL,
               'password' => NULL,
               'gecos' => NULL,
               'superuser' => NULL,
               '_dependencyInjector' => NULL,
               '_modelsManager' => NULL,
               '_modelsMetaData' => NULL,
               '_errorMessages' => NULL,
               '_operationMade' => 0,
               '_dirtyState' => 1,
               '_transaction' => NULL,
               '_uniqueKey' => NULL,
               '_uniqueParams' => NULL,
               '_uniqueTypes' => NULL,
               '_skipped' => NULL,
               '_related' => NULL,
               '_snapshot' => NULL,
               '_oldSnapshot' => 
              array (
              ),
            )),
             '_lastQuery' => NULL,
             '_reusable' => NULL,
             '_keepSnapshots' => NULL,
             '_dynamicUpdate' => NULL,
             '_namespaceAliases' => NULL,
          )),
          'modelsMetadata' => 
          Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
             '_dependencyInjector' => NULL,
             '_strategy' => 
            Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
            )),
             '_columnMap' => 
            array (
              'user' => 
              array (
                0 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
                1 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
              ),
            ),
             '_metaData' => 
            array (
              'user-user' => 
              array (
                0 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                  4 => 'superuser',
                ),
                1 => 
                array (
                  0 => 'id',
                ),
                2 => 
                array (
                  0 => 'name',
                  1 => 'gecos',
                  2 => 'password',
                  3 => 'superuser',
                ),
                3 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                ),
                4 => 
                array (
                  'id' => 0,
                  'name' => 6,
                  'gecos' => 6,
                  'password' => 6,
                  'superuser' => 8,
                ),
                5 => 
                array (
                  'id' => true,
                ),
                8 => 'id',
                9 => 
                array (
                  'id' => 1,
                  'name' => 2,
                  'gecos' => 2,
                  'password' => 2,
                  'superuser' => 5,
                ),
                10 => 
                array (
                ),
                11 => 
                array (
                ),
                12 => 
                array (
                  'superuser' => NULL,
                ),
                13 => 
                array (
                ),
              ),
            ),
          )),
          'db' => 
          Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
             '_eventsManager' => NULL,
             '_descriptor' => 
            array (
              'host' => 'localhost',
              'username' => 'pgsql',
              'password' => 'secret',
              'dbname' => 'phalcon',
            ),
             '_dialect' => 
            Phalcon\Db\Dialect\Postgresql::__set_state(array(
               '_customFunctions' => NULL,
               '_escapeChar' => '"',
            )),
             '_connectionId' => 0,
             '_sqlStatement' => NULL,
             '_sqlVariables' => NULL,
             '_sqlBindTypes' => NULL,
             '_transactionLevel' => 0,
             '_transactionsWithSavepoints' => false,
             '_pdo' => 
            PDO::__set_state(array(
            )),
             '_affectedRows' => NULL,
             '_type' => 'pgsql',
             '_dialectType' => 'postgresql',
          )),
        ),
         '_freshInstance' => false,
         '_eventsManager' => NULL,
      )),
       '_modelsManager' => 
      Phalcon\Mvc\Model\Manager::__set_state(array(
         '_dependencyInjector' => 
        Phalcon\Di\FactoryDefault::__set_state(array(
           '_services' => 
          array (
            'router' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'router',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
            )),
            'dispatcher' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'dispatcher',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
            )),
            'url' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'url',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'modelsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'modelsMetadata' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsMetadata',
               '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
            )),
            'response' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'response',
               '_definition' => 'Phalcon\\Http\\Response',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'cookies' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'cookies',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'request' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'request',
               '_definition' => 'Phalcon\\Http\\Request',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
            )),
            'filter' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'filter',
               '_definition' => 'Phalcon\\Filter',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'escaper' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'escaper',
               '_definition' => 'Phalcon\\Escaper',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'security' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'security',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'crypt' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'crypt',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'annotations' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'annotations',
               '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flash' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flash',
               '_definition' => 'Phalcon\\Flash\\Direct',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flashSession' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flashSession',
               '_definition' => 'Phalcon\\Flash\\Session',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'tag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'tag',
               '_definition' => 'Phalcon\\Tag',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'session' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'session',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'sessionBag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'sessionBag',
               '_definition' => 'Phalcon\\Session\\Bag',
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'eventsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'eventsManager',
               '_definition' => 'Phalcon\\Events\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'transactionManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'transactionManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'assets' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'assets',
               '_definition' => 'Phalcon\\Assets\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'config' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'config',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
            )),
            'logger' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'logger',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'viewCache' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'viewCache',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'view' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'view',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
            )),
            'db' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'db',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
          ),
           '_sharedInstances' => 
          array (
            'config' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
            'router' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
            'view' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
            'dispatcher' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
            'ApiUsersController' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
            'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
            'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
            'modelsManager' => NULL,
            'modelsMetadata' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
            'db' => 
            Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
               '_eventsManager' => NULL,
               '_descriptor' => 
              array (
                'host' => 'localhost',
                'username' => 'pgsql',
                'password' => 'secret',
                'dbname' => 'phalcon',
              ),
               '_dialect' => 
              Phalcon\Db\Dialect\Postgresql::__set_state(array(
                 '_customFunctions' => NULL,
                 '_escapeChar' => '"',
              )),
               '_connectionId' => 0,
               '_sqlStatement' => NULL,
               '_sqlVariables' => NULL,
               '_sqlBindTypes' => NULL,
               '_transactionLevel' => 0,
               '_transactionsWithSavepoints' => false,
               '_pdo' => 
              PDO::__set_state(array(
              )),
               '_affectedRows' => NULL,
               '_type' => 'pgsql',
               '_dialectType' => 'postgresql',
            )),
          ),
           '_freshInstance' => false,
           '_eventsManager' => NULL,
        )),
         '_eventsManager' => NULL,
         '_customEventsManager' => NULL,
         '_readConnectionServices' => NULL,
         '_writeConnectionServices' => NULL,
         '_aliases' => NULL,
         '_modelVisibility' => 
        array (
        ),
         '_hasMany' => NULL,
         '_hasManySingle' => NULL,
         '_hasOne' => NULL,
         '_hasOneSingle' => NULL,
         '_belongsTo' => NULL,
         '_belongsToSingle' => NULL,
         '_hasManyToMany' => NULL,
         '_hasManyToManySingle' => NULL,
         '_initialized' => 
        array (
          'user' => 
          User::__set_state(array(
             'id' => NULL,
             'name' => NULL,
             'password' => NULL,
             'gecos' => NULL,
             'superuser' => NULL,
             '_dependencyInjector' => 
            Phalcon\Di\FactoryDefault::__set_state(array(
               '_services' => 
              array (
                'router' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'router',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Router::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_uriSource' => NULL,
                     '_namespace' => NULL,
                     '_module' => NULL,
                     '_controller' => 'api-users',
                     '_action' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_routes' => 
                    array (
                      0 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/',
                         '_compiledPattern' => '/',
                         '_paths' => 
                        array (
                          'controller' => 'index',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 0,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      1 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/login',
                         '_compiledPattern' => '/api/login',
                         '_paths' => 
                        array (
                          'controller' => 'api-login',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 1,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      2 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/users',
                         '_compiledPattern' => '/api/users',
                         '_paths' => 
                        array (
                          'controller' => 'api-users',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 2,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                    ),
                     '_matchedRoute' => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                     '_matches' => NULL,
                     '_wasMatched' => true,
                     '_defaultNamespace' => NULL,
                     '_defaultModule' => NULL,
                     '_defaultController' => 'index',
                     '_defaultAction' => 'index',
                     '_defaultParams' => 
                    array (
                    ),
                     '_removeExtraSlashes' => true,
                     '_notFoundPaths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_keyRouteNames' => 
                    array (
                    ),
                     '_keyRouteIds' => 
                    array (
                    ),
                  )),
                )),
                'dispatcher' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'dispatcher',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Dispatcher::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => 
                    Phalcon\Events\Manager::__set_state(array(
                       '_events' => 
                      array (
                        'dispatch:beforeExecuteRoute' => 
                        array (
                          0 => 
                          SecurityPlugin::__set_state(array(
                             '_dependencyInjector' => NULL,
                             '_eventsManager' => NULL,
                          )),
                        ),
                      ),
                       '_collect' => false,
                       '_enablePriorities' => false,
                       '_responses' => NULL,
                    )),
                     '_activeHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_finished' => true,
                     '_forwarded' => false,
                     '_moduleName' => '',
                     '_namespaceName' => NULL,
                     '_handlerName' => 'api-users',
                     '_actionName' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_returnedValue' => NULL,
                     '_lastHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_defaultNamespace' => NULL,
                     '_actionSuffix' => 'Action',
                     '_previousNamespaceName' => NULL,
                     '_previousHandlerName' => NULL,
                     '_previousActionName' => NULL,
                     '_modelBinding' => false,
                     '_modelBinder' => NULL,
                     '_isControllerInitialize' => false,
                     '_handlerSuffix' => 'Controller',
                     '_defaultHandler' => 'index',
                     '_defaultAction' => 'index',
                  )),
                )),
                'url' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'url',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'modelsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'modelsMetadata' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsMetadata',
                   '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_strategy' => 
                    Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                    )),
                     '_columnMap' => 
                    array (
                      'user' => 
                      array (
                        0 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                        1 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                      ),
                    ),
                     '_metaData' => 
                    array (
                      'user-user' => 
                      array (
                        0 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                          4 => 'superuser',
                        ),
                        1 => 
                        array (
                          0 => 'id',
                        ),
                        2 => 
                        array (
                          0 => 'name',
                          1 => 'gecos',
                          2 => 'password',
                          3 => 'superuser',
                        ),
                        3 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                        ),
                        4 => 
                        array (
                          'id' => 0,
                          'name' => 6,
                          'gecos' => 6,
                          'password' => 6,
                          'superuser' => 8,
                        ),
                        5 => 
                        array (
                          'id' => true,
                        ),
                        8 => 'id',
                        9 => 
                        array (
                          'id' => 1,
                          'name' => 2,
                          'gecos' => 2,
                          'password' => 2,
                          'superuser' => 5,
                        ),
                        10 => 
                        array (
                        ),
                        11 => 
                        array (
                        ),
                        12 => 
                        array (
                          'superuser' => NULL,
                        ),
                        13 => 
                        array (
                        ),
                      ),
                    ),
                  )),
                )),
                'response' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'response',
                   '_definition' => 'Phalcon\\Http\\Response',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'cookies' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'cookies',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'request' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'request',
                   '_definition' => 'Phalcon\\Http\\Request',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                )),
                'filter' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'filter',
                   '_definition' => 'Phalcon\\Filter',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'escaper' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'escaper',
                   '_definition' => 'Phalcon\\Escaper',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'security' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'security',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'crypt' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'crypt',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'annotations' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'annotations',
                   '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flash' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flash',
                   '_definition' => 'Phalcon\\Flash\\Direct',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flashSession' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flashSession',
                   '_definition' => 'Phalcon\\Flash\\Session',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'tag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'tag',
                   '_definition' => 'Phalcon\\Tag',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'session' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'session',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'sessionBag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'sessionBag',
                   '_definition' => 'Phalcon\\Session\\Bag',
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'eventsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'eventsManager',
                   '_definition' => 'Phalcon\\Events\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'transactionManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'transactionManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'assets' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'assets',
                   '_definition' => 'Phalcon\\Assets\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'config' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'config',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Config\Adapter\Ini::__set_state(array(
                     'database' => 
                    Phalcon\Config::__set_state(array(
                       'host' => 'localhost',
                       'dbname' => 'phalcon',
                       'username' => 'pgsql',
                       'password' => 'secret',
                    )),
                     'application' => 
                    Phalcon\Config::__set_state(array(
                       'appDir' => '/var/www/dev/app/../app/',
                       'controllersDir' => '/var/www/dev/app/../app/controllers/',
                       'modelsDir' => '/var/www/dev/app/../app/models/',
                       'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                       'viewsDir' => '/var/www/dev/app/../app/views/',
                       'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                       'libraryDir' => '/var/www/dev/app/../app/library/',
                       'utilsDir' => '/var/www/dev/app/../app/utils/',
                       'logPath' => '/var/www/dev/app/../logs/debug.log',
                       'cacheDir' => '/var/www/dev/app/../cache/',
                       'dataDir' => '/var/www/dev/app/../data/',
                    )),
                  )),
                )),
                'logger' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'logger',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'viewCache' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'viewCache',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'view' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'view',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\View::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_options' => 
                    array (
                    ),
                     '_basePath' => '',
                     '_content' => NULL,
                     '_renderLevel' => 5,
                     '_currentRenderLevel' => 0,
                     '_disabledLevels' => NULL,
                     '_viewParams' => 
                    array (
                    ),
                     '_layout' => NULL,
                     '_layoutsDir' => '',
                     '_partialsDir' => '',
                     '_viewsDirs' => '/var/www/dev/app/../app/views/',
                     '_templatesBefore' => 
                    array (
                    ),
                     '_templatesAfter' => 
                    array (
                    ),
                     '_engines' => false,
                     '_registeredEngines' => NULL,
                     '_mainView' => 'index',
                     '_controllerName' => NULL,
                     '_actionName' => NULL,
                     '_params' => NULL,
                     '_pickView' => NULL,
                     '_cache' => NULL,
                     '_cacheLevel' => 0,
                     '_activeRenderPaths' => NULL,
                     '_disabled' => false,
                  )),
                )),
                'db' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'db',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
              ),
               '_sharedInstances' => 
              array (
                'config' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
                'router' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
                'view' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
                'dispatcher' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
                'ApiUsersController' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
                'modelsManager' => NULL,
                'modelsMetadata' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
                'db' => 
                Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                   '_eventsManager' => NULL,
                   '_descriptor' => 
                  array (
                    'host' => 'localhost',
                    'username' => 'pgsql',
                    'password' => 'secret',
                    'dbname' => 'phalcon',
                  ),
                   '_dialect' => 
                  Phalcon\Db\Dialect\Postgresql::__set_state(array(
                     '_customFunctions' => NULL,
                     '_escapeChar' => '"',
                  )),
                   '_connectionId' => 0,
                   '_sqlStatement' => NULL,
                   '_sqlVariables' => NULL,
                   '_sqlBindTypes' => NULL,
                   '_transactionLevel' => 0,
                   '_transactionsWithSavepoints' => false,
                   '_pdo' => 
                  PDO::__set_state(array(
                  )),
                   '_affectedRows' => NULL,
                   '_type' => 'pgsql',
                   '_dialectType' => 'postgresql',
                )),
              ),
               '_freshInstance' => false,
               '_eventsManager' => NULL,
            )),
             '_modelsManager' => NULL,
             '_modelsMetaData' => NULL,
             '_errorMessages' => NULL,
             '_operationMade' => 0,
             '_dirtyState' => 1,
             '_transaction' => NULL,
             '_uniqueKey' => NULL,
             '_uniqueParams' => NULL,
             '_uniqueTypes' => NULL,
             '_skipped' => NULL,
             '_related' => NULL,
             '_snapshot' => NULL,
             '_oldSnapshot' => 
            array (
            ),
          )),
        ),
         '_prefix' => '',
         '_sources' => 
        array (
          'user' => 'user',
        ),
         '_schemas' => NULL,
         '_behaviors' => NULL,
         '_lastInitialized' => 
        User::__set_state(array(
           'id' => NULL,
           'name' => NULL,
           'password' => NULL,
           'gecos' => NULL,
           'superuser' => NULL,
           '_dependencyInjector' => 
          Phalcon\Di\FactoryDefault::__set_state(array(
             '_services' => 
            array (
              'router' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'router',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
              )),
              'dispatcher' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'dispatcher',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
              )),
              'url' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'url',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'modelsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'modelsMetadata' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsMetadata',
                 '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
              )),
              'response' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'response',
                 '_definition' => 'Phalcon\\Http\\Response',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'cookies' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'cookies',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'request' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'request',
                 '_definition' => 'Phalcon\\Http\\Request',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
              )),
              'filter' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'filter',
                 '_definition' => 'Phalcon\\Filter',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'escaper' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'escaper',
                 '_definition' => 'Phalcon\\Escaper',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'security' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'security',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'crypt' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'crypt',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'annotations' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'annotations',
                 '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flash' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flash',
                 '_definition' => 'Phalcon\\Flash\\Direct',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flashSession' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flashSession',
                 '_definition' => 'Phalcon\\Flash\\Session',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'tag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'tag',
                 '_definition' => 'Phalcon\\Tag',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'session' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'session',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'sessionBag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'sessionBag',
                 '_definition' => 'Phalcon\\Session\\Bag',
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'eventsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'eventsManager',
                 '_definition' => 'Phalcon\\Events\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'transactionManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'transactionManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'assets' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'assets',
                 '_definition' => 'Phalcon\\Assets\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'config' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'config',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
              )),
              'logger' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'logger',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'viewCache' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'viewCache',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'view' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'view',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
              )),
              'db' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'db',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
            ),
             '_sharedInstances' => 
            array (
              'config' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
              'router' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
              'view' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
              'dispatcher' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
              'ApiUsersController' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
              'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"de204048-2301-432d-a444-00cafd506942"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
              'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
              'modelsManager' => NULL,
              'modelsMetadata' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
              'db' => 
              Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                 '_eventsManager' => NULL,
                 '_descriptor' => 
                array (
                  'host' => 'localhost',
                  'username' => 'pgsql',
                  'password' => 'secret',
                  'dbname' => 'phalcon',
                ),
                 '_dialect' => 
                Phalcon\Db\Dialect\Postgresql::__set_state(array(
                   '_customFunctions' => NULL,
                   '_escapeChar' => '"',
                )),
                 '_connectionId' => 0,
                 '_sqlStatement' => NULL,
                 '_sqlVariables' => NULL,
                 '_sqlBindTypes' => NULL,
                 '_transactionLevel' => 0,
                 '_transactionsWithSavepoints' => false,
                 '_pdo' => 
                PDO::__set_state(array(
                )),
                 '_affectedRows' => NULL,
                 '_type' => 'pgsql',
                 '_dialectType' => 'postgresql',
              )),
            ),
             '_freshInstance' => false,
             '_eventsManager' => NULL,
          )),
           '_modelsManager' => NULL,
           '_modelsMetaData' => NULL,
           '_errorMessages' => NULL,
           '_operationMade' => 0,
           '_dirtyState' => 1,
           '_transaction' => NULL,
           '_uniqueKey' => NULL,
           '_uniqueParams' => NULL,
           '_uniqueTypes' => NULL,
           '_skipped' => NULL,
           '_related' => NULL,
           '_snapshot' => NULL,
           '_oldSnapshot' => 
          array (
          ),
        )),
         '_lastQuery' => NULL,
         '_reusable' => NULL,
         '_keepSnapshots' => NULL,
         '_dynamicUpdate' => NULL,
         '_namespaceAliases' => NULL,
      )),
       '_modelsMetaData' => NULL,
       '_errorMessages' => NULL,
       '_operationMade' => 0,
       '_dirtyState' => 1,
       '_transaction' => NULL,
       '_uniqueKey' => NULL,
       '_uniqueParams' => NULL,
       '_uniqueTypes' => NULL,
       '_skipped' => NULL,
       '_related' => NULL,
       '_snapshot' => NULL,
       '_oldSnapshot' => 
      array (
      ),
    )),
     '_columnMap' => 
    array (
      'id' => 'id',
      'name' => 'name',
      'password' => 'password',
      'gecos' => 'gecos',
      'superuser' => 'superuser',
    ),
     '_keepSnapshots' => false,
  )),
)
[Mon, 17 Dec 18 23:30:41 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'create',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qasert',
     'password' => '21212',
     'gecos' => '1132312',
     'superuser' => false,
  )),
   'id' => '6f96c893-d32d-4496-b6a0-5c68b9dceef9',
))
[Mon, 17 Dec 18 23:30:41 +0200][DEBUG] array (
  'result' => true,
)
[Mon, 17 Dec 18 23:30:41 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
   'id' => 'a5dabf40-7cbc-44d5-8efd-ede7dbfe151b',
))
[Mon, 17 Dec 18 23:30:41 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Resultset\Simple::__set_state(array(
     '_result' => 
    Phalcon\Db\Result\Pdo::__set_state(array(
       '_connection' => 
      Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
         '_eventsManager' => NULL,
         '_descriptor' => 
        array (
          'host' => 'localhost',
          'username' => 'pgsql',
          'password' => 'secret',
          'dbname' => 'phalcon',
        ),
         '_dialect' => 
        Phalcon\Db\Dialect\Postgresql::__set_state(array(
           '_customFunctions' => NULL,
           '_escapeChar' => '"',
        )),
         '_connectionId' => 0,
         '_sqlStatement' => NULL,
         '_sqlVariables' => NULL,
         '_sqlBindTypes' => NULL,
         '_transactionLevel' => 0,
         '_transactionsWithSavepoints' => false,
         '_pdo' => 
        PDO::__set_state(array(
        )),
         '_affectedRows' => NULL,
         '_type' => 'pgsql',
         '_dialectType' => 'postgresql',
      )),
       '_result' => NULL,
       '_fetchMode' => 2,
       '_pdoStatement' => 
      PDOStatement::__set_state(array(
         'queryString' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
      )),
       '_sqlStatement' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
       '_bindParams' => NULL,
       '_bindTypes' => NULL,
       '_rowCount' => 2,
    )),
     '_cache' => NULL,
     '_isFresh' => true,
     '_pointer' => 0,
     '_count' => 2,
     '_activeRow' => NULL,
     '_rows' => 
    array (
      0 => 
      array (
        'id' => 1,
        'name' => 'qwerty',
        'gecos' => 'Loppolo Kuppolo 2',
        'password' => '12345',
        'superuser' => true,
      ),
      1 => 
      array (
        'id' => 2,
        'name' => 'qasert',
        'gecos' => '1132312',
        'password' => '21212',
        'superuser' => false,
      ),
    ),
     '_row' => NULL,
     '_errorMessages' => NULL,
     '_hydrateMode' => 0,
     '_model' => 
    User::__set_state(array(
       'id' => NULL,
       'name' => NULL,
       'password' => NULL,
       'gecos' => NULL,
       'superuser' => NULL,
       '_dependencyInjector' => 
      Phalcon\Di\FactoryDefault::__set_state(array(
         '_services' => 
        array (
          'router' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'router',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
          )),
          'dispatcher' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'dispatcher',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
          )),
          'url' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'url',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\Manager::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_customEventsManager' => NULL,
               '_readConnectionServices' => NULL,
               '_writeConnectionServices' => NULL,
               '_aliases' => NULL,
               '_modelVisibility' => 
              array (
              ),
               '_hasMany' => NULL,
               '_hasManySingle' => NULL,
               '_hasOne' => NULL,
               '_hasOneSingle' => NULL,
               '_belongsTo' => NULL,
               '_belongsToSingle' => NULL,
               '_hasManyToMany' => NULL,
               '_hasManyToManySingle' => NULL,
               '_initialized' => 
              array (
                'user' => 
                User::__set_state(array(
                   'id' => NULL,
                   'name' => NULL,
                   'password' => NULL,
                   'gecos' => NULL,
                   'superuser' => NULL,
                   '_dependencyInjector' => NULL,
                   '_modelsManager' => NULL,
                   '_modelsMetaData' => NULL,
                   '_errorMessages' => NULL,
                   '_operationMade' => 0,
                   '_dirtyState' => 1,
                   '_transaction' => NULL,
                   '_uniqueKey' => NULL,
                   '_uniqueParams' => NULL,
                   '_uniqueTypes' => NULL,
                   '_skipped' => NULL,
                   '_related' => NULL,
                   '_snapshot' => NULL,
                   '_oldSnapshot' => 
                  array (
                  ),
                )),
              ),
               '_prefix' => '',
               '_sources' => 
              array (
                'user' => 'user',
              ),
               '_schemas' => NULL,
               '_behaviors' => NULL,
               '_lastInitialized' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
               '_lastQuery' => NULL,
               '_reusable' => NULL,
               '_keepSnapshots' => NULL,
               '_dynamicUpdate' => NULL,
               '_namespaceAliases' => NULL,
            )),
          )),
          'modelsMetadata' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsMetadata',
             '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
          )),
          'response' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'response',
             '_definition' => 'Phalcon\\Http\\Response',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'cookies' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'cookies',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'request' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'request',
             '_definition' => 'Phalcon\\Http\\Request',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
          )),
          'filter' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'filter',
             '_definition' => 'Phalcon\\Filter',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'escaper' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'escaper',
             '_definition' => 'Phalcon\\Escaper',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'security' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'security',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'crypt' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'crypt',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'annotations' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'annotations',
             '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flash' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flash',
             '_definition' => 'Phalcon\\Flash\\Direct',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flashSession' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flashSession',
             '_definition' => 'Phalcon\\Flash\\Session',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'tag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'tag',
             '_definition' => 'Phalcon\\Tag',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'session' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'session',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'sessionBag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'sessionBag',
             '_definition' => 'Phalcon\\Session\\Bag',
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'eventsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'eventsManager',
             '_definition' => 'Phalcon\\Events\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'transactionManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'transactionManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'assets' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'assets',
             '_definition' => 'Phalcon\\Assets\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'config' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'config',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
          )),
          'logger' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'logger',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
          'viewCache' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'viewCache',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'view' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'view',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
          )),
          'db' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'db',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
        ),
         '_sharedInstances' => 
        array (
          'config' => 
          Phalcon\Config\Adapter\Ini::__set_state(array(
             'database' => 
            Phalcon\Config::__set_state(array(
               'host' => 'localhost',
               'dbname' => 'phalcon',
               'username' => 'pgsql',
               'password' => 'secret',
            )),
             'application' => 
            Phalcon\Config::__set_state(array(
               'appDir' => '/var/www/dev/app/../app/',
               'controllersDir' => '/var/www/dev/app/../app/controllers/',
               'modelsDir' => '/var/www/dev/app/../app/models/',
               'migrationsDir' => '/var/www/dev/app/../app/migrations/',
               'viewsDir' => '/var/www/dev/app/../app/views/',
               'pluginsDir' => '/var/www/dev/app/../app/plugins/',
               'libraryDir' => '/var/www/dev/app/../app/library/',
               'utilsDir' => '/var/www/dev/app/../app/utils/',
               'logPath' => '/var/www/dev/app/../logs/debug.log',
               'cacheDir' => '/var/www/dev/app/../cache/',
               'dataDir' => '/var/www/dev/app/../data/',
            )),
          )),
          'router' => 
          Phalcon\Mvc\Router::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_uriSource' => NULL,
             '_namespace' => NULL,
             '_module' => NULL,
             '_controller' => 'api-users',
             '_action' => 'index',
             '_params' => 
            array (
            ),
             '_routes' => 
            array (
              0 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/',
                 '_compiledPattern' => '/',
                 '_paths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 0,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              1 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/login',
                 '_compiledPattern' => '/api/login',
                 '_paths' => 
                array (
                  'controller' => 'api-login',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 1,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              2 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
            ),
             '_matchedRoute' => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/users',
               '_compiledPattern' => '/api/users',
               '_paths' => 
              array (
                'controller' => 'api-users',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 2,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
             '_matches' => NULL,
             '_wasMatched' => true,
             '_defaultNamespace' => NULL,
             '_defaultModule' => NULL,
             '_defaultController' => 'index',
             '_defaultAction' => 'index',
             '_defaultParams' => 
            array (
            ),
             '_removeExtraSlashes' => true,
             '_notFoundPaths' => 
            array (
              'controller' => 'index',
              'action' => 'index',
            ),
             '_keyRouteNames' => 
            array (
            ),
             '_keyRouteIds' => 
            array (
            ),
          )),
          'view' => 
          Phalcon\Mvc\View::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_options' => 
            array (
            ),
             '_basePath' => '',
             '_content' => NULL,
             '_renderLevel' => 5,
             '_currentRenderLevel' => 0,
             '_disabledLevels' => NULL,
             '_viewParams' => 
            array (
            ),
             '_layout' => NULL,
             '_layoutsDir' => '',
             '_partialsDir' => '',
             '_viewsDirs' => '/var/www/dev/app/../app/views/',
             '_templatesBefore' => 
            array (
            ),
             '_templatesAfter' => 
            array (
            ),
             '_engines' => false,
             '_registeredEngines' => NULL,
             '_mainView' => 'index',
             '_controllerName' => NULL,
             '_actionName' => NULL,
             '_params' => NULL,
             '_pickView' => NULL,
             '_cache' => NULL,
             '_cacheLevel' => 0,
             '_activeRenderPaths' => NULL,
             '_disabled' => false,
          )),
          'dispatcher' => 
          Phalcon\Mvc\Dispatcher::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => 
            Phalcon\Events\Manager::__set_state(array(
               '_events' => 
              array (
                'dispatch:beforeExecuteRoute' => 
                array (
                  0 => 
                  SecurityPlugin::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                  )),
                ),
              ),
               '_collect' => false,
               '_enablePriorities' => false,
               '_responses' => NULL,
            )),
             '_activeHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_finished' => true,
             '_forwarded' => false,
             '_moduleName' => '',
             '_namespaceName' => NULL,
             '_handlerName' => 'api-users',
             '_actionName' => 'index',
             '_params' => 
            array (
            ),
             '_returnedValue' => NULL,
             '_lastHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_defaultNamespace' => NULL,
             '_actionSuffix' => 'Action',
             '_previousNamespaceName' => NULL,
             '_previousHandlerName' => NULL,
             '_previousActionName' => NULL,
             '_modelBinding' => false,
             '_modelBinder' => NULL,
             '_isControllerInitialize' => false,
             '_handlerSuffix' => 'Controller',
             '_defaultHandler' => 'index',
             '_defaultAction' => 'index',
          )),
          'ApiUsersController' => 
          ApiUsersController::__set_state(array(
             'invalidRequest' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32600,
                'message' => 'Invalid Request',
              ),
              'id' => NULL,
            ),
             'parseError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32700,
                'message' => 'Parse error',
              ),
              'id' => NULL,
            ),
             'methodNotFound' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32601,
                'message' => 'Method not found',
              ),
              'id' => 1,
            ),
             'internalError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32603,
                'message' => 'Internal error',
              ),
              'id' => 0,
            ),
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
             'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
          )),
          'request' => 
          Phalcon\Http\Request::__set_state(array(
             '_dependencyInjector' => NULL,
             '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
             '_filter' => NULL,
             '_putCache' => NULL,
             '_httpMethodParameterOverride' => false,
             '_strictHostCheck' => false,
          )),
          'logger' => 
          Phalcon\Logger\Adapter\File::__set_state(array(
             '_transaction' => false,
             '_queue' => 
            array (
            ),
             '_formatter' => 
            Phalcon\Logger\Formatter\Line::__set_state(array(
               '_dateFormat' => 'D, d M y H:i:s O',
               '_format' => '[%date%][%type%] %message%',
            )),
             '_logLevel' => 9,
             '_fileHandler' => NULL,
             '_path' => '/var/www/dev/app/../logs/debug.log',
             '_options' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Mvc\Model\Manager::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_customEventsManager' => NULL,
             '_readConnectionServices' => NULL,
             '_writeConnectionServices' => NULL,
             '_aliases' => NULL,
             '_modelVisibility' => 
            array (
            ),
             '_hasMany' => NULL,
             '_hasManySingle' => NULL,
             '_hasOne' => NULL,
             '_hasOneSingle' => NULL,
             '_belongsTo' => NULL,
             '_belongsToSingle' => NULL,
             '_hasManyToMany' => NULL,
             '_hasManyToManySingle' => NULL,
             '_initialized' => 
            array (
              'user' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
            ),
             '_prefix' => '',
             '_sources' => 
            array (
              'user' => 'user',
            ),
             '_schemas' => NULL,
             '_behaviors' => NULL,
             '_lastInitialized' => 
            User::__set_state(array(
               'id' => NULL,
               'name' => NULL,
               'password' => NULL,
               'gecos' => NULL,
               'superuser' => NULL,
               '_dependencyInjector' => NULL,
               '_modelsManager' => NULL,
               '_modelsMetaData' => NULL,
               '_errorMessages' => NULL,
               '_operationMade' => 0,
               '_dirtyState' => 1,
               '_transaction' => NULL,
               '_uniqueKey' => NULL,
               '_uniqueParams' => NULL,
               '_uniqueTypes' => NULL,
               '_skipped' => NULL,
               '_related' => NULL,
               '_snapshot' => NULL,
               '_oldSnapshot' => 
              array (
              ),
            )),
             '_lastQuery' => NULL,
             '_reusable' => NULL,
             '_keepSnapshots' => NULL,
             '_dynamicUpdate' => NULL,
             '_namespaceAliases' => NULL,
          )),
          'modelsMetadata' => 
          Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
             '_dependencyInjector' => NULL,
             '_strategy' => 
            Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
            )),
             '_columnMap' => 
            array (
              'user' => 
              array (
                0 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
                1 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
              ),
            ),
             '_metaData' => 
            array (
              'user-user' => 
              array (
                0 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                  4 => 'superuser',
                ),
                1 => 
                array (
                  0 => 'id',
                ),
                2 => 
                array (
                  0 => 'name',
                  1 => 'gecos',
                  2 => 'password',
                  3 => 'superuser',
                ),
                3 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                ),
                4 => 
                array (
                  'id' => 0,
                  'name' => 6,
                  'gecos' => 6,
                  'password' => 6,
                  'superuser' => 8,
                ),
                5 => 
                array (
                  'id' => true,
                ),
                8 => 'id',
                9 => 
                array (
                  'id' => 1,
                  'name' => 2,
                  'gecos' => 2,
                  'password' => 2,
                  'superuser' => 5,
                ),
                10 => 
                array (
                ),
                11 => 
                array (
                ),
                12 => 
                array (
                  'superuser' => NULL,
                ),
                13 => 
                array (
                ),
              ),
            ),
          )),
          'db' => 
          Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
             '_eventsManager' => NULL,
             '_descriptor' => 
            array (
              'host' => 'localhost',
              'username' => 'pgsql',
              'password' => 'secret',
              'dbname' => 'phalcon',
            ),
             '_dialect' => 
            Phalcon\Db\Dialect\Postgresql::__set_state(array(
               '_customFunctions' => NULL,
               '_escapeChar' => '"',
            )),
             '_connectionId' => 0,
             '_sqlStatement' => NULL,
             '_sqlVariables' => NULL,
             '_sqlBindTypes' => NULL,
             '_transactionLevel' => 0,
             '_transactionsWithSavepoints' => false,
             '_pdo' => 
            PDO::__set_state(array(
            )),
             '_affectedRows' => NULL,
             '_type' => 'pgsql',
             '_dialectType' => 'postgresql',
          )),
        ),
         '_freshInstance' => false,
         '_eventsManager' => NULL,
      )),
       '_modelsManager' => 
      Phalcon\Mvc\Model\Manager::__set_state(array(
         '_dependencyInjector' => 
        Phalcon\Di\FactoryDefault::__set_state(array(
           '_services' => 
          array (
            'router' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'router',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
            )),
            'dispatcher' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'dispatcher',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
            )),
            'url' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'url',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'modelsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'modelsMetadata' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsMetadata',
               '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
            )),
            'response' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'response',
               '_definition' => 'Phalcon\\Http\\Response',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'cookies' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'cookies',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'request' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'request',
               '_definition' => 'Phalcon\\Http\\Request',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
            )),
            'filter' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'filter',
               '_definition' => 'Phalcon\\Filter',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'escaper' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'escaper',
               '_definition' => 'Phalcon\\Escaper',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'security' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'security',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'crypt' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'crypt',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'annotations' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'annotations',
               '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flash' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flash',
               '_definition' => 'Phalcon\\Flash\\Direct',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flashSession' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flashSession',
               '_definition' => 'Phalcon\\Flash\\Session',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'tag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'tag',
               '_definition' => 'Phalcon\\Tag',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'session' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'session',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'sessionBag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'sessionBag',
               '_definition' => 'Phalcon\\Session\\Bag',
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'eventsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'eventsManager',
               '_definition' => 'Phalcon\\Events\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'transactionManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'transactionManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'assets' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'assets',
               '_definition' => 'Phalcon\\Assets\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'config' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'config',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
            )),
            'logger' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'logger',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'viewCache' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'viewCache',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'view' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'view',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
            )),
            'db' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'db',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
          ),
           '_sharedInstances' => 
          array (
            'config' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
            'router' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
            'view' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
            'dispatcher' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
            'ApiUsersController' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
            'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
            'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
            'modelsManager' => NULL,
            'modelsMetadata' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
            'db' => 
            Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
               '_eventsManager' => NULL,
               '_descriptor' => 
              array (
                'host' => 'localhost',
                'username' => 'pgsql',
                'password' => 'secret',
                'dbname' => 'phalcon',
              ),
               '_dialect' => 
              Phalcon\Db\Dialect\Postgresql::__set_state(array(
                 '_customFunctions' => NULL,
                 '_escapeChar' => '"',
              )),
               '_connectionId' => 0,
               '_sqlStatement' => NULL,
               '_sqlVariables' => NULL,
               '_sqlBindTypes' => NULL,
               '_transactionLevel' => 0,
               '_transactionsWithSavepoints' => false,
               '_pdo' => 
              PDO::__set_state(array(
              )),
               '_affectedRows' => NULL,
               '_type' => 'pgsql',
               '_dialectType' => 'postgresql',
            )),
          ),
           '_freshInstance' => false,
           '_eventsManager' => NULL,
        )),
         '_eventsManager' => NULL,
         '_customEventsManager' => NULL,
         '_readConnectionServices' => NULL,
         '_writeConnectionServices' => NULL,
         '_aliases' => NULL,
         '_modelVisibility' => 
        array (
        ),
         '_hasMany' => NULL,
         '_hasManySingle' => NULL,
         '_hasOne' => NULL,
         '_hasOneSingle' => NULL,
         '_belongsTo' => NULL,
         '_belongsToSingle' => NULL,
         '_hasManyToMany' => NULL,
         '_hasManyToManySingle' => NULL,
         '_initialized' => 
        array (
          'user' => 
          User::__set_state(array(
             'id' => NULL,
             'name' => NULL,
             'password' => NULL,
             'gecos' => NULL,
             'superuser' => NULL,
             '_dependencyInjector' => 
            Phalcon\Di\FactoryDefault::__set_state(array(
               '_services' => 
              array (
                'router' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'router',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Router::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_uriSource' => NULL,
                     '_namespace' => NULL,
                     '_module' => NULL,
                     '_controller' => 'api-users',
                     '_action' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_routes' => 
                    array (
                      0 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/',
                         '_compiledPattern' => '/',
                         '_paths' => 
                        array (
                          'controller' => 'index',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 0,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      1 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/login',
                         '_compiledPattern' => '/api/login',
                         '_paths' => 
                        array (
                          'controller' => 'api-login',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 1,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      2 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/users',
                         '_compiledPattern' => '/api/users',
                         '_paths' => 
                        array (
                          'controller' => 'api-users',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 2,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                    ),
                     '_matchedRoute' => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                     '_matches' => NULL,
                     '_wasMatched' => true,
                     '_defaultNamespace' => NULL,
                     '_defaultModule' => NULL,
                     '_defaultController' => 'index',
                     '_defaultAction' => 'index',
                     '_defaultParams' => 
                    array (
                    ),
                     '_removeExtraSlashes' => true,
                     '_notFoundPaths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_keyRouteNames' => 
                    array (
                    ),
                     '_keyRouteIds' => 
                    array (
                    ),
                  )),
                )),
                'dispatcher' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'dispatcher',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Dispatcher::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => 
                    Phalcon\Events\Manager::__set_state(array(
                       '_events' => 
                      array (
                        'dispatch:beforeExecuteRoute' => 
                        array (
                          0 => 
                          SecurityPlugin::__set_state(array(
                             '_dependencyInjector' => NULL,
                             '_eventsManager' => NULL,
                          )),
                        ),
                      ),
                       '_collect' => false,
                       '_enablePriorities' => false,
                       '_responses' => NULL,
                    )),
                     '_activeHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_finished' => true,
                     '_forwarded' => false,
                     '_moduleName' => '',
                     '_namespaceName' => NULL,
                     '_handlerName' => 'api-users',
                     '_actionName' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_returnedValue' => NULL,
                     '_lastHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_defaultNamespace' => NULL,
                     '_actionSuffix' => 'Action',
                     '_previousNamespaceName' => NULL,
                     '_previousHandlerName' => NULL,
                     '_previousActionName' => NULL,
                     '_modelBinding' => false,
                     '_modelBinder' => NULL,
                     '_isControllerInitialize' => false,
                     '_handlerSuffix' => 'Controller',
                     '_defaultHandler' => 'index',
                     '_defaultAction' => 'index',
                  )),
                )),
                'url' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'url',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'modelsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'modelsMetadata' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsMetadata',
                   '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_strategy' => 
                    Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                    )),
                     '_columnMap' => 
                    array (
                      'user' => 
                      array (
                        0 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                        1 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                      ),
                    ),
                     '_metaData' => 
                    array (
                      'user-user' => 
                      array (
                        0 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                          4 => 'superuser',
                        ),
                        1 => 
                        array (
                          0 => 'id',
                        ),
                        2 => 
                        array (
                          0 => 'name',
                          1 => 'gecos',
                          2 => 'password',
                          3 => 'superuser',
                        ),
                        3 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                        ),
                        4 => 
                        array (
                          'id' => 0,
                          'name' => 6,
                          'gecos' => 6,
                          'password' => 6,
                          'superuser' => 8,
                        ),
                        5 => 
                        array (
                          'id' => true,
                        ),
                        8 => 'id',
                        9 => 
                        array (
                          'id' => 1,
                          'name' => 2,
                          'gecos' => 2,
                          'password' => 2,
                          'superuser' => 5,
                        ),
                        10 => 
                        array (
                        ),
                        11 => 
                        array (
                        ),
                        12 => 
                        array (
                          'superuser' => NULL,
                        ),
                        13 => 
                        array (
                        ),
                      ),
                    ),
                  )),
                )),
                'response' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'response',
                   '_definition' => 'Phalcon\\Http\\Response',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'cookies' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'cookies',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'request' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'request',
                   '_definition' => 'Phalcon\\Http\\Request',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                )),
                'filter' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'filter',
                   '_definition' => 'Phalcon\\Filter',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'escaper' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'escaper',
                   '_definition' => 'Phalcon\\Escaper',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'security' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'security',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'crypt' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'crypt',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'annotations' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'annotations',
                   '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flash' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flash',
                   '_definition' => 'Phalcon\\Flash\\Direct',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flashSession' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flashSession',
                   '_definition' => 'Phalcon\\Flash\\Session',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'tag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'tag',
                   '_definition' => 'Phalcon\\Tag',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'session' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'session',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'sessionBag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'sessionBag',
                   '_definition' => 'Phalcon\\Session\\Bag',
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'eventsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'eventsManager',
                   '_definition' => 'Phalcon\\Events\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'transactionManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'transactionManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'assets' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'assets',
                   '_definition' => 'Phalcon\\Assets\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'config' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'config',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Config\Adapter\Ini::__set_state(array(
                     'database' => 
                    Phalcon\Config::__set_state(array(
                       'host' => 'localhost',
                       'dbname' => 'phalcon',
                       'username' => 'pgsql',
                       'password' => 'secret',
                    )),
                     'application' => 
                    Phalcon\Config::__set_state(array(
                       'appDir' => '/var/www/dev/app/../app/',
                       'controllersDir' => '/var/www/dev/app/../app/controllers/',
                       'modelsDir' => '/var/www/dev/app/../app/models/',
                       'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                       'viewsDir' => '/var/www/dev/app/../app/views/',
                       'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                       'libraryDir' => '/var/www/dev/app/../app/library/',
                       'utilsDir' => '/var/www/dev/app/../app/utils/',
                       'logPath' => '/var/www/dev/app/../logs/debug.log',
                       'cacheDir' => '/var/www/dev/app/../cache/',
                       'dataDir' => '/var/www/dev/app/../data/',
                    )),
                  )),
                )),
                'logger' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'logger',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'viewCache' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'viewCache',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'view' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'view',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\View::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_options' => 
                    array (
                    ),
                     '_basePath' => '',
                     '_content' => NULL,
                     '_renderLevel' => 5,
                     '_currentRenderLevel' => 0,
                     '_disabledLevels' => NULL,
                     '_viewParams' => 
                    array (
                    ),
                     '_layout' => NULL,
                     '_layoutsDir' => '',
                     '_partialsDir' => '',
                     '_viewsDirs' => '/var/www/dev/app/../app/views/',
                     '_templatesBefore' => 
                    array (
                    ),
                     '_templatesAfter' => 
                    array (
                    ),
                     '_engines' => false,
                     '_registeredEngines' => NULL,
                     '_mainView' => 'index',
                     '_controllerName' => NULL,
                     '_actionName' => NULL,
                     '_params' => NULL,
                     '_pickView' => NULL,
                     '_cache' => NULL,
                     '_cacheLevel' => 0,
                     '_activeRenderPaths' => NULL,
                     '_disabled' => false,
                  )),
                )),
                'db' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'db',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
              ),
               '_sharedInstances' => 
              array (
                'config' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
                'router' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
                'view' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
                'dispatcher' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
                'ApiUsersController' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
                'modelsManager' => NULL,
                'modelsMetadata' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
                'db' => 
                Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                   '_eventsManager' => NULL,
                   '_descriptor' => 
                  array (
                    'host' => 'localhost',
                    'username' => 'pgsql',
                    'password' => 'secret',
                    'dbname' => 'phalcon',
                  ),
                   '_dialect' => 
                  Phalcon\Db\Dialect\Postgresql::__set_state(array(
                     '_customFunctions' => NULL,
                     '_escapeChar' => '"',
                  )),
                   '_connectionId' => 0,
                   '_sqlStatement' => NULL,
                   '_sqlVariables' => NULL,
                   '_sqlBindTypes' => NULL,
                   '_transactionLevel' => 0,
                   '_transactionsWithSavepoints' => false,
                   '_pdo' => 
                  PDO::__set_state(array(
                  )),
                   '_affectedRows' => NULL,
                   '_type' => 'pgsql',
                   '_dialectType' => 'postgresql',
                )),
              ),
               '_freshInstance' => false,
               '_eventsManager' => NULL,
            )),
             '_modelsManager' => NULL,
             '_modelsMetaData' => NULL,
             '_errorMessages' => NULL,
             '_operationMade' => 0,
             '_dirtyState' => 1,
             '_transaction' => NULL,
             '_uniqueKey' => NULL,
             '_uniqueParams' => NULL,
             '_uniqueTypes' => NULL,
             '_skipped' => NULL,
             '_related' => NULL,
             '_snapshot' => NULL,
             '_oldSnapshot' => 
            array (
            ),
          )),
        ),
         '_prefix' => '',
         '_sources' => 
        array (
          'user' => 'user',
        ),
         '_schemas' => NULL,
         '_behaviors' => NULL,
         '_lastInitialized' => 
        User::__set_state(array(
           'id' => NULL,
           'name' => NULL,
           'password' => NULL,
           'gecos' => NULL,
           'superuser' => NULL,
           '_dependencyInjector' => 
          Phalcon\Di\FactoryDefault::__set_state(array(
             '_services' => 
            array (
              'router' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'router',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
              )),
              'dispatcher' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'dispatcher',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
              )),
              'url' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'url',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'modelsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'modelsMetadata' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsMetadata',
                 '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
              )),
              'response' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'response',
                 '_definition' => 'Phalcon\\Http\\Response',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'cookies' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'cookies',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'request' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'request',
                 '_definition' => 'Phalcon\\Http\\Request',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
              )),
              'filter' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'filter',
                 '_definition' => 'Phalcon\\Filter',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'escaper' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'escaper',
                 '_definition' => 'Phalcon\\Escaper',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'security' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'security',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'crypt' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'crypt',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'annotations' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'annotations',
                 '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flash' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flash',
                 '_definition' => 'Phalcon\\Flash\\Direct',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flashSession' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flashSession',
                 '_definition' => 'Phalcon\\Flash\\Session',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'tag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'tag',
                 '_definition' => 'Phalcon\\Tag',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'session' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'session',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'sessionBag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'sessionBag',
                 '_definition' => 'Phalcon\\Session\\Bag',
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'eventsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'eventsManager',
                 '_definition' => 'Phalcon\\Events\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'transactionManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'transactionManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'assets' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'assets',
                 '_definition' => 'Phalcon\\Assets\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'config' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'config',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
              )),
              'logger' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'logger',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'viewCache' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'viewCache',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'view' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'view',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
              )),
              'db' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'db',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
            ),
             '_sharedInstances' => 
            array (
              'config' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
              'router' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
              'view' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
              'dispatcher' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
              'ApiUsersController' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
              'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5dabf40-7cbc-44d5-8efd-ede7dbfe151b"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
              'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
              'modelsManager' => NULL,
              'modelsMetadata' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
              'db' => 
              Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                 '_eventsManager' => NULL,
                 '_descriptor' => 
                array (
                  'host' => 'localhost',
                  'username' => 'pgsql',
                  'password' => 'secret',
                  'dbname' => 'phalcon',
                ),
                 '_dialect' => 
                Phalcon\Db\Dialect\Postgresql::__set_state(array(
                   '_customFunctions' => NULL,
                   '_escapeChar' => '"',
                )),
                 '_connectionId' => 0,
                 '_sqlStatement' => NULL,
                 '_sqlVariables' => NULL,
                 '_sqlBindTypes' => NULL,
                 '_transactionLevel' => 0,
                 '_transactionsWithSavepoints' => false,
                 '_pdo' => 
                PDO::__set_state(array(
                )),
                 '_affectedRows' => NULL,
                 '_type' => 'pgsql',
                 '_dialectType' => 'postgresql',
              )),
            ),
             '_freshInstance' => false,
             '_eventsManager' => NULL,
          )),
           '_modelsManager' => NULL,
           '_modelsMetaData' => NULL,
           '_errorMessages' => NULL,
           '_operationMade' => 0,
           '_dirtyState' => 1,
           '_transaction' => NULL,
           '_uniqueKey' => NULL,
           '_uniqueParams' => NULL,
           '_uniqueTypes' => NULL,
           '_skipped' => NULL,
           '_related' => NULL,
           '_snapshot' => NULL,
           '_oldSnapshot' => 
          array (
          ),
        )),
         '_lastQuery' => NULL,
         '_reusable' => NULL,
         '_keepSnapshots' => NULL,
         '_dynamicUpdate' => NULL,
         '_namespaceAliases' => NULL,
      )),
       '_modelsMetaData' => NULL,
       '_errorMessages' => NULL,
       '_operationMade' => 0,
       '_dirtyState' => 1,
       '_transaction' => NULL,
       '_uniqueKey' => NULL,
       '_uniqueParams' => NULL,
       '_uniqueTypes' => NULL,
       '_skipped' => NULL,
       '_related' => NULL,
       '_snapshot' => NULL,
       '_oldSnapshot' => 
      array (
      ),
    )),
     '_columnMap' => 
    array (
      'id' => 'id',
      'name' => 'name',
      'password' => 'password',
      'gecos' => 'gecos',
      'superuser' => 'superuser',
    ),
     '_keepSnapshots' => false,
  )),
)
[Mon, 17 Dec 18 23:30:47 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'drop',
   'params' => 
  stdClass::__set_state(array(
     'id' => 2,
  )),
   'id' => '2faebdc0-0e33-4fe1-8393-a717452b3eaa',
))
[Mon, 17 Dec 18 23:30:47 +0200][DEBUG] array (
  'result' => true,
)
[Mon, 17 Dec 18 23:30:47 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
   'id' => '5f4dd06b-515a-4759-b6bb-c306d7db7daa',
))
[Mon, 17 Dec 18 23:30:47 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Resultset\Simple::__set_state(array(
     '_result' => 
    Phalcon\Db\Result\Pdo::__set_state(array(
       '_connection' => 
      Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
         '_eventsManager' => NULL,
         '_descriptor' => 
        array (
          'host' => 'localhost',
          'username' => 'pgsql',
          'password' => 'secret',
          'dbname' => 'phalcon',
        ),
         '_dialect' => 
        Phalcon\Db\Dialect\Postgresql::__set_state(array(
           '_customFunctions' => NULL,
           '_escapeChar' => '"',
        )),
         '_connectionId' => 0,
         '_sqlStatement' => NULL,
         '_sqlVariables' => NULL,
         '_sqlBindTypes' => NULL,
         '_transactionLevel' => 0,
         '_transactionsWithSavepoints' => false,
         '_pdo' => 
        PDO::__set_state(array(
        )),
         '_affectedRows' => NULL,
         '_type' => 'pgsql',
         '_dialectType' => 'postgresql',
      )),
       '_result' => NULL,
       '_fetchMode' => 2,
       '_pdoStatement' => 
      PDOStatement::__set_state(array(
         'queryString' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
      )),
       '_sqlStatement' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
       '_bindParams' => NULL,
       '_bindTypes' => NULL,
       '_rowCount' => 1,
    )),
     '_cache' => NULL,
     '_isFresh' => true,
     '_pointer' => 0,
     '_count' => 1,
     '_activeRow' => NULL,
     '_rows' => 
    array (
      0 => 
      array (
        'id' => 2,
        'name' => 'qasert',
        'gecos' => '1132312',
        'password' => '21212',
        'superuser' => false,
      ),
    ),
     '_row' => NULL,
     '_errorMessages' => NULL,
     '_hydrateMode' => 0,
     '_model' => 
    User::__set_state(array(
       'id' => NULL,
       'name' => NULL,
       'password' => NULL,
       'gecos' => NULL,
       'superuser' => NULL,
       '_dependencyInjector' => 
      Phalcon\Di\FactoryDefault::__set_state(array(
         '_services' => 
        array (
          'router' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'router',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
          )),
          'dispatcher' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'dispatcher',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
          )),
          'url' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'url',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\Manager::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_customEventsManager' => NULL,
               '_readConnectionServices' => NULL,
               '_writeConnectionServices' => NULL,
               '_aliases' => NULL,
               '_modelVisibility' => 
              array (
              ),
               '_hasMany' => NULL,
               '_hasManySingle' => NULL,
               '_hasOne' => NULL,
               '_hasOneSingle' => NULL,
               '_belongsTo' => NULL,
               '_belongsToSingle' => NULL,
               '_hasManyToMany' => NULL,
               '_hasManyToManySingle' => NULL,
               '_initialized' => 
              array (
                'user' => 
                User::__set_state(array(
                   'id' => NULL,
                   'name' => NULL,
                   'password' => NULL,
                   'gecos' => NULL,
                   'superuser' => NULL,
                   '_dependencyInjector' => NULL,
                   '_modelsManager' => NULL,
                   '_modelsMetaData' => NULL,
                   '_errorMessages' => NULL,
                   '_operationMade' => 0,
                   '_dirtyState' => 1,
                   '_transaction' => NULL,
                   '_uniqueKey' => NULL,
                   '_uniqueParams' => NULL,
                   '_uniqueTypes' => NULL,
                   '_skipped' => NULL,
                   '_related' => NULL,
                   '_snapshot' => NULL,
                   '_oldSnapshot' => 
                  array (
                  ),
                )),
              ),
               '_prefix' => '',
               '_sources' => 
              array (
                'user' => 'user',
              ),
               '_schemas' => NULL,
               '_behaviors' => NULL,
               '_lastInitialized' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
               '_lastQuery' => NULL,
               '_reusable' => NULL,
               '_keepSnapshots' => NULL,
               '_dynamicUpdate' => NULL,
               '_namespaceAliases' => NULL,
            )),
          )),
          'modelsMetadata' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsMetadata',
             '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
          )),
          'response' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'response',
             '_definition' => 'Phalcon\\Http\\Response',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'cookies' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'cookies',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'request' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'request',
             '_definition' => 'Phalcon\\Http\\Request',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
          )),
          'filter' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'filter',
             '_definition' => 'Phalcon\\Filter',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'escaper' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'escaper',
             '_definition' => 'Phalcon\\Escaper',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'security' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'security',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'crypt' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'crypt',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'annotations' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'annotations',
             '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flash' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flash',
             '_definition' => 'Phalcon\\Flash\\Direct',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flashSession' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flashSession',
             '_definition' => 'Phalcon\\Flash\\Session',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'tag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'tag',
             '_definition' => 'Phalcon\\Tag',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'session' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'session',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'sessionBag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'sessionBag',
             '_definition' => 'Phalcon\\Session\\Bag',
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'eventsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'eventsManager',
             '_definition' => 'Phalcon\\Events\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'transactionManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'transactionManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'assets' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'assets',
             '_definition' => 'Phalcon\\Assets\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'config' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'config',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
          )),
          'logger' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'logger',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
          'viewCache' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'viewCache',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'view' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'view',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
          )),
          'db' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'db',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
        ),
         '_sharedInstances' => 
        array (
          'config' => 
          Phalcon\Config\Adapter\Ini::__set_state(array(
             'database' => 
            Phalcon\Config::__set_state(array(
               'host' => 'localhost',
               'dbname' => 'phalcon',
               'username' => 'pgsql',
               'password' => 'secret',
            )),
             'application' => 
            Phalcon\Config::__set_state(array(
               'appDir' => '/var/www/dev/app/../app/',
               'controllersDir' => '/var/www/dev/app/../app/controllers/',
               'modelsDir' => '/var/www/dev/app/../app/models/',
               'migrationsDir' => '/var/www/dev/app/../app/migrations/',
               'viewsDir' => '/var/www/dev/app/../app/views/',
               'pluginsDir' => '/var/www/dev/app/../app/plugins/',
               'libraryDir' => '/var/www/dev/app/../app/library/',
               'utilsDir' => '/var/www/dev/app/../app/utils/',
               'logPath' => '/var/www/dev/app/../logs/debug.log',
               'cacheDir' => '/var/www/dev/app/../cache/',
               'dataDir' => '/var/www/dev/app/../data/',
            )),
          )),
          'router' => 
          Phalcon\Mvc\Router::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_uriSource' => NULL,
             '_namespace' => NULL,
             '_module' => NULL,
             '_controller' => 'api-users',
             '_action' => 'index',
             '_params' => 
            array (
            ),
             '_routes' => 
            array (
              0 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/',
                 '_compiledPattern' => '/',
                 '_paths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 0,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              1 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/login',
                 '_compiledPattern' => '/api/login',
                 '_paths' => 
                array (
                  'controller' => 'api-login',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 1,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              2 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
            ),
             '_matchedRoute' => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/users',
               '_compiledPattern' => '/api/users',
               '_paths' => 
              array (
                'controller' => 'api-users',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 2,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
             '_matches' => NULL,
             '_wasMatched' => true,
             '_defaultNamespace' => NULL,
             '_defaultModule' => NULL,
             '_defaultController' => 'index',
             '_defaultAction' => 'index',
             '_defaultParams' => 
            array (
            ),
             '_removeExtraSlashes' => true,
             '_notFoundPaths' => 
            array (
              'controller' => 'index',
              'action' => 'index',
            ),
             '_keyRouteNames' => 
            array (
            ),
             '_keyRouteIds' => 
            array (
            ),
          )),
          'view' => 
          Phalcon\Mvc\View::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_options' => 
            array (
            ),
             '_basePath' => '',
             '_content' => NULL,
             '_renderLevel' => 5,
             '_currentRenderLevel' => 0,
             '_disabledLevels' => NULL,
             '_viewParams' => 
            array (
            ),
             '_layout' => NULL,
             '_layoutsDir' => '',
             '_partialsDir' => '',
             '_viewsDirs' => '/var/www/dev/app/../app/views/',
             '_templatesBefore' => 
            array (
            ),
             '_templatesAfter' => 
            array (
            ),
             '_engines' => false,
             '_registeredEngines' => NULL,
             '_mainView' => 'index',
             '_controllerName' => NULL,
             '_actionName' => NULL,
             '_params' => NULL,
             '_pickView' => NULL,
             '_cache' => NULL,
             '_cacheLevel' => 0,
             '_activeRenderPaths' => NULL,
             '_disabled' => false,
          )),
          'dispatcher' => 
          Phalcon\Mvc\Dispatcher::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => 
            Phalcon\Events\Manager::__set_state(array(
               '_events' => 
              array (
                'dispatch:beforeExecuteRoute' => 
                array (
                  0 => 
                  SecurityPlugin::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                  )),
                ),
              ),
               '_collect' => false,
               '_enablePriorities' => false,
               '_responses' => NULL,
            )),
             '_activeHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_finished' => true,
             '_forwarded' => false,
             '_moduleName' => '',
             '_namespaceName' => NULL,
             '_handlerName' => 'api-users',
             '_actionName' => 'index',
             '_params' => 
            array (
            ),
             '_returnedValue' => NULL,
             '_lastHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_defaultNamespace' => NULL,
             '_actionSuffix' => 'Action',
             '_previousNamespaceName' => NULL,
             '_previousHandlerName' => NULL,
             '_previousActionName' => NULL,
             '_modelBinding' => false,
             '_modelBinder' => NULL,
             '_isControllerInitialize' => false,
             '_handlerSuffix' => 'Controller',
             '_defaultHandler' => 'index',
             '_defaultAction' => 'index',
          )),
          'ApiUsersController' => 
          ApiUsersController::__set_state(array(
             'invalidRequest' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32600,
                'message' => 'Invalid Request',
              ),
              'id' => NULL,
            ),
             'parseError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32700,
                'message' => 'Parse error',
              ),
              'id' => NULL,
            ),
             'methodNotFound' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32601,
                'message' => 'Method not found',
              ),
              'id' => 1,
            ),
             'internalError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32603,
                'message' => 'Internal error',
              ),
              'id' => 0,
            ),
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
             'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
          )),
          'request' => 
          Phalcon\Http\Request::__set_state(array(
             '_dependencyInjector' => NULL,
             '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
             '_filter' => NULL,
             '_putCache' => NULL,
             '_httpMethodParameterOverride' => false,
             '_strictHostCheck' => false,
          )),
          'logger' => 
          Phalcon\Logger\Adapter\File::__set_state(array(
             '_transaction' => false,
             '_queue' => 
            array (
            ),
             '_formatter' => 
            Phalcon\Logger\Formatter\Line::__set_state(array(
               '_dateFormat' => 'D, d M y H:i:s O',
               '_format' => '[%date%][%type%] %message%',
            )),
             '_logLevel' => 9,
             '_fileHandler' => NULL,
             '_path' => '/var/www/dev/app/../logs/debug.log',
             '_options' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Mvc\Model\Manager::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_customEventsManager' => NULL,
             '_readConnectionServices' => NULL,
             '_writeConnectionServices' => NULL,
             '_aliases' => NULL,
             '_modelVisibility' => 
            array (
            ),
             '_hasMany' => NULL,
             '_hasManySingle' => NULL,
             '_hasOne' => NULL,
             '_hasOneSingle' => NULL,
             '_belongsTo' => NULL,
             '_belongsToSingle' => NULL,
             '_hasManyToMany' => NULL,
             '_hasManyToManySingle' => NULL,
             '_initialized' => 
            array (
              'user' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
            ),
             '_prefix' => '',
             '_sources' => 
            array (
              'user' => 'user',
            ),
             '_schemas' => NULL,
             '_behaviors' => NULL,
             '_lastInitialized' => 
            User::__set_state(array(
               'id' => NULL,
               'name' => NULL,
               'password' => NULL,
               'gecos' => NULL,
               'superuser' => NULL,
               '_dependencyInjector' => NULL,
               '_modelsManager' => NULL,
               '_modelsMetaData' => NULL,
               '_errorMessages' => NULL,
               '_operationMade' => 0,
               '_dirtyState' => 1,
               '_transaction' => NULL,
               '_uniqueKey' => NULL,
               '_uniqueParams' => NULL,
               '_uniqueTypes' => NULL,
               '_skipped' => NULL,
               '_related' => NULL,
               '_snapshot' => NULL,
               '_oldSnapshot' => 
              array (
              ),
            )),
             '_lastQuery' => NULL,
             '_reusable' => NULL,
             '_keepSnapshots' => NULL,
             '_dynamicUpdate' => NULL,
             '_namespaceAliases' => NULL,
          )),
          'modelsMetadata' => 
          Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
             '_dependencyInjector' => NULL,
             '_strategy' => 
            Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
            )),
             '_columnMap' => 
            array (
              'user' => 
              array (
                0 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
                1 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
              ),
            ),
             '_metaData' => 
            array (
              'user-user' => 
              array (
                0 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                  4 => 'superuser',
                ),
                1 => 
                array (
                  0 => 'id',
                ),
                2 => 
                array (
                  0 => 'name',
                  1 => 'gecos',
                  2 => 'password',
                  3 => 'superuser',
                ),
                3 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                ),
                4 => 
                array (
                  'id' => 0,
                  'name' => 6,
                  'gecos' => 6,
                  'password' => 6,
                  'superuser' => 8,
                ),
                5 => 
                array (
                  'id' => true,
                ),
                8 => 'id',
                9 => 
                array (
                  'id' => 1,
                  'name' => 2,
                  'gecos' => 2,
                  'password' => 2,
                  'superuser' => 5,
                ),
                10 => 
                array (
                ),
                11 => 
                array (
                ),
                12 => 
                array (
                  'superuser' => NULL,
                ),
                13 => 
                array (
                ),
              ),
            ),
          )),
          'db' => 
          Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
             '_eventsManager' => NULL,
             '_descriptor' => 
            array (
              'host' => 'localhost',
              'username' => 'pgsql',
              'password' => 'secret',
              'dbname' => 'phalcon',
            ),
             '_dialect' => 
            Phalcon\Db\Dialect\Postgresql::__set_state(array(
               '_customFunctions' => NULL,
               '_escapeChar' => '"',
            )),
             '_connectionId' => 0,
             '_sqlStatement' => NULL,
             '_sqlVariables' => NULL,
             '_sqlBindTypes' => NULL,
             '_transactionLevel' => 0,
             '_transactionsWithSavepoints' => false,
             '_pdo' => 
            PDO::__set_state(array(
            )),
             '_affectedRows' => NULL,
             '_type' => 'pgsql',
             '_dialectType' => 'postgresql',
          )),
        ),
         '_freshInstance' => false,
         '_eventsManager' => NULL,
      )),
       '_modelsManager' => 
      Phalcon\Mvc\Model\Manager::__set_state(array(
         '_dependencyInjector' => 
        Phalcon\Di\FactoryDefault::__set_state(array(
           '_services' => 
          array (
            'router' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'router',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
            )),
            'dispatcher' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'dispatcher',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
            )),
            'url' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'url',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'modelsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'modelsMetadata' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsMetadata',
               '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
            )),
            'response' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'response',
               '_definition' => 'Phalcon\\Http\\Response',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'cookies' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'cookies',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'request' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'request',
               '_definition' => 'Phalcon\\Http\\Request',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
            )),
            'filter' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'filter',
               '_definition' => 'Phalcon\\Filter',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'escaper' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'escaper',
               '_definition' => 'Phalcon\\Escaper',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'security' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'security',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'crypt' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'crypt',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'annotations' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'annotations',
               '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flash' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flash',
               '_definition' => 'Phalcon\\Flash\\Direct',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flashSession' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flashSession',
               '_definition' => 'Phalcon\\Flash\\Session',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'tag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'tag',
               '_definition' => 'Phalcon\\Tag',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'session' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'session',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'sessionBag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'sessionBag',
               '_definition' => 'Phalcon\\Session\\Bag',
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'eventsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'eventsManager',
               '_definition' => 'Phalcon\\Events\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'transactionManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'transactionManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'assets' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'assets',
               '_definition' => 'Phalcon\\Assets\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'config' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'config',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
            )),
            'logger' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'logger',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'viewCache' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'viewCache',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'view' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'view',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
            )),
            'db' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'db',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
          ),
           '_sharedInstances' => 
          array (
            'config' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
            'router' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
            'view' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
            'dispatcher' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
            'ApiUsersController' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
            'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
            'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
            'modelsManager' => NULL,
            'modelsMetadata' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
            'db' => 
            Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
               '_eventsManager' => NULL,
               '_descriptor' => 
              array (
                'host' => 'localhost',
                'username' => 'pgsql',
                'password' => 'secret',
                'dbname' => 'phalcon',
              ),
               '_dialect' => 
              Phalcon\Db\Dialect\Postgresql::__set_state(array(
                 '_customFunctions' => NULL,
                 '_escapeChar' => '"',
              )),
               '_connectionId' => 0,
               '_sqlStatement' => NULL,
               '_sqlVariables' => NULL,
               '_sqlBindTypes' => NULL,
               '_transactionLevel' => 0,
               '_transactionsWithSavepoints' => false,
               '_pdo' => 
              PDO::__set_state(array(
              )),
               '_affectedRows' => NULL,
               '_type' => 'pgsql',
               '_dialectType' => 'postgresql',
            )),
          ),
           '_freshInstance' => false,
           '_eventsManager' => NULL,
        )),
         '_eventsManager' => NULL,
         '_customEventsManager' => NULL,
         '_readConnectionServices' => NULL,
         '_writeConnectionServices' => NULL,
         '_aliases' => NULL,
         '_modelVisibility' => 
        array (
        ),
         '_hasMany' => NULL,
         '_hasManySingle' => NULL,
         '_hasOne' => NULL,
         '_hasOneSingle' => NULL,
         '_belongsTo' => NULL,
         '_belongsToSingle' => NULL,
         '_hasManyToMany' => NULL,
         '_hasManyToManySingle' => NULL,
         '_initialized' => 
        array (
          'user' => 
          User::__set_state(array(
             'id' => NULL,
             'name' => NULL,
             'password' => NULL,
             'gecos' => NULL,
             'superuser' => NULL,
             '_dependencyInjector' => 
            Phalcon\Di\FactoryDefault::__set_state(array(
               '_services' => 
              array (
                'router' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'router',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Router::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_uriSource' => NULL,
                     '_namespace' => NULL,
                     '_module' => NULL,
                     '_controller' => 'api-users',
                     '_action' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_routes' => 
                    array (
                      0 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/',
                         '_compiledPattern' => '/',
                         '_paths' => 
                        array (
                          'controller' => 'index',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 0,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      1 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/login',
                         '_compiledPattern' => '/api/login',
                         '_paths' => 
                        array (
                          'controller' => 'api-login',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 1,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      2 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/users',
                         '_compiledPattern' => '/api/users',
                         '_paths' => 
                        array (
                          'controller' => 'api-users',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 2,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                    ),
                     '_matchedRoute' => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                     '_matches' => NULL,
                     '_wasMatched' => true,
                     '_defaultNamespace' => NULL,
                     '_defaultModule' => NULL,
                     '_defaultController' => 'index',
                     '_defaultAction' => 'index',
                     '_defaultParams' => 
                    array (
                    ),
                     '_removeExtraSlashes' => true,
                     '_notFoundPaths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_keyRouteNames' => 
                    array (
                    ),
                     '_keyRouteIds' => 
                    array (
                    ),
                  )),
                )),
                'dispatcher' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'dispatcher',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Dispatcher::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => 
                    Phalcon\Events\Manager::__set_state(array(
                       '_events' => 
                      array (
                        'dispatch:beforeExecuteRoute' => 
                        array (
                          0 => 
                          SecurityPlugin::__set_state(array(
                             '_dependencyInjector' => NULL,
                             '_eventsManager' => NULL,
                          )),
                        ),
                      ),
                       '_collect' => false,
                       '_enablePriorities' => false,
                       '_responses' => NULL,
                    )),
                     '_activeHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_finished' => true,
                     '_forwarded' => false,
                     '_moduleName' => '',
                     '_namespaceName' => NULL,
                     '_handlerName' => 'api-users',
                     '_actionName' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_returnedValue' => NULL,
                     '_lastHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_defaultNamespace' => NULL,
                     '_actionSuffix' => 'Action',
                     '_previousNamespaceName' => NULL,
                     '_previousHandlerName' => NULL,
                     '_previousActionName' => NULL,
                     '_modelBinding' => false,
                     '_modelBinder' => NULL,
                     '_isControllerInitialize' => false,
                     '_handlerSuffix' => 'Controller',
                     '_defaultHandler' => 'index',
                     '_defaultAction' => 'index',
                  )),
                )),
                'url' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'url',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'modelsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'modelsMetadata' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsMetadata',
                   '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_strategy' => 
                    Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                    )),
                     '_columnMap' => 
                    array (
                      'user' => 
                      array (
                        0 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                        1 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                      ),
                    ),
                     '_metaData' => 
                    array (
                      'user-user' => 
                      array (
                        0 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                          4 => 'superuser',
                        ),
                        1 => 
                        array (
                          0 => 'id',
                        ),
                        2 => 
                        array (
                          0 => 'name',
                          1 => 'gecos',
                          2 => 'password',
                          3 => 'superuser',
                        ),
                        3 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                        ),
                        4 => 
                        array (
                          'id' => 0,
                          'name' => 6,
                          'gecos' => 6,
                          'password' => 6,
                          'superuser' => 8,
                        ),
                        5 => 
                        array (
                          'id' => true,
                        ),
                        8 => 'id',
                        9 => 
                        array (
                          'id' => 1,
                          'name' => 2,
                          'gecos' => 2,
                          'password' => 2,
                          'superuser' => 5,
                        ),
                        10 => 
                        array (
                        ),
                        11 => 
                        array (
                        ),
                        12 => 
                        array (
                          'superuser' => NULL,
                        ),
                        13 => 
                        array (
                        ),
                      ),
                    ),
                  )),
                )),
                'response' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'response',
                   '_definition' => 'Phalcon\\Http\\Response',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'cookies' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'cookies',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'request' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'request',
                   '_definition' => 'Phalcon\\Http\\Request',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                )),
                'filter' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'filter',
                   '_definition' => 'Phalcon\\Filter',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'escaper' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'escaper',
                   '_definition' => 'Phalcon\\Escaper',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'security' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'security',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'crypt' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'crypt',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'annotations' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'annotations',
                   '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flash' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flash',
                   '_definition' => 'Phalcon\\Flash\\Direct',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flashSession' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flashSession',
                   '_definition' => 'Phalcon\\Flash\\Session',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'tag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'tag',
                   '_definition' => 'Phalcon\\Tag',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'session' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'session',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'sessionBag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'sessionBag',
                   '_definition' => 'Phalcon\\Session\\Bag',
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'eventsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'eventsManager',
                   '_definition' => 'Phalcon\\Events\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'transactionManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'transactionManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'assets' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'assets',
                   '_definition' => 'Phalcon\\Assets\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'config' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'config',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Config\Adapter\Ini::__set_state(array(
                     'database' => 
                    Phalcon\Config::__set_state(array(
                       'host' => 'localhost',
                       'dbname' => 'phalcon',
                       'username' => 'pgsql',
                       'password' => 'secret',
                    )),
                     'application' => 
                    Phalcon\Config::__set_state(array(
                       'appDir' => '/var/www/dev/app/../app/',
                       'controllersDir' => '/var/www/dev/app/../app/controllers/',
                       'modelsDir' => '/var/www/dev/app/../app/models/',
                       'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                       'viewsDir' => '/var/www/dev/app/../app/views/',
                       'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                       'libraryDir' => '/var/www/dev/app/../app/library/',
                       'utilsDir' => '/var/www/dev/app/../app/utils/',
                       'logPath' => '/var/www/dev/app/../logs/debug.log',
                       'cacheDir' => '/var/www/dev/app/../cache/',
                       'dataDir' => '/var/www/dev/app/../data/',
                    )),
                  )),
                )),
                'logger' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'logger',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'viewCache' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'viewCache',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'view' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'view',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\View::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_options' => 
                    array (
                    ),
                     '_basePath' => '',
                     '_content' => NULL,
                     '_renderLevel' => 5,
                     '_currentRenderLevel' => 0,
                     '_disabledLevels' => NULL,
                     '_viewParams' => 
                    array (
                    ),
                     '_layout' => NULL,
                     '_layoutsDir' => '',
                     '_partialsDir' => '',
                     '_viewsDirs' => '/var/www/dev/app/../app/views/',
                     '_templatesBefore' => 
                    array (
                    ),
                     '_templatesAfter' => 
                    array (
                    ),
                     '_engines' => false,
                     '_registeredEngines' => NULL,
                     '_mainView' => 'index',
                     '_controllerName' => NULL,
                     '_actionName' => NULL,
                     '_params' => NULL,
                     '_pickView' => NULL,
                     '_cache' => NULL,
                     '_cacheLevel' => 0,
                     '_activeRenderPaths' => NULL,
                     '_disabled' => false,
                  )),
                )),
                'db' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'db',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
              ),
               '_sharedInstances' => 
              array (
                'config' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
                'router' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
                'view' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
                'dispatcher' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
                'ApiUsersController' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
                'modelsManager' => NULL,
                'modelsMetadata' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
                'db' => 
                Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                   '_eventsManager' => NULL,
                   '_descriptor' => 
                  array (
                    'host' => 'localhost',
                    'username' => 'pgsql',
                    'password' => 'secret',
                    'dbname' => 'phalcon',
                  ),
                   '_dialect' => 
                  Phalcon\Db\Dialect\Postgresql::__set_state(array(
                     '_customFunctions' => NULL,
                     '_escapeChar' => '"',
                  )),
                   '_connectionId' => 0,
                   '_sqlStatement' => NULL,
                   '_sqlVariables' => NULL,
                   '_sqlBindTypes' => NULL,
                   '_transactionLevel' => 0,
                   '_transactionsWithSavepoints' => false,
                   '_pdo' => 
                  PDO::__set_state(array(
                  )),
                   '_affectedRows' => NULL,
                   '_type' => 'pgsql',
                   '_dialectType' => 'postgresql',
                )),
              ),
               '_freshInstance' => false,
               '_eventsManager' => NULL,
            )),
             '_modelsManager' => NULL,
             '_modelsMetaData' => NULL,
             '_errorMessages' => NULL,
             '_operationMade' => 0,
             '_dirtyState' => 1,
             '_transaction' => NULL,
             '_uniqueKey' => NULL,
             '_uniqueParams' => NULL,
             '_uniqueTypes' => NULL,
             '_skipped' => NULL,
             '_related' => NULL,
             '_snapshot' => NULL,
             '_oldSnapshot' => 
            array (
            ),
          )),
        ),
         '_prefix' => '',
         '_sources' => 
        array (
          'user' => 'user',
        ),
         '_schemas' => NULL,
         '_behaviors' => NULL,
         '_lastInitialized' => 
        User::__set_state(array(
           'id' => NULL,
           'name' => NULL,
           'password' => NULL,
           'gecos' => NULL,
           'superuser' => NULL,
           '_dependencyInjector' => 
          Phalcon\Di\FactoryDefault::__set_state(array(
             '_services' => 
            array (
              'router' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'router',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
              )),
              'dispatcher' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'dispatcher',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
              )),
              'url' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'url',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'modelsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'modelsMetadata' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsMetadata',
                 '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
              )),
              'response' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'response',
                 '_definition' => 'Phalcon\\Http\\Response',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'cookies' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'cookies',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'request' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'request',
                 '_definition' => 'Phalcon\\Http\\Request',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
              )),
              'filter' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'filter',
                 '_definition' => 'Phalcon\\Filter',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'escaper' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'escaper',
                 '_definition' => 'Phalcon\\Escaper',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'security' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'security',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'crypt' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'crypt',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'annotations' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'annotations',
                 '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flash' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flash',
                 '_definition' => 'Phalcon\\Flash\\Direct',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flashSession' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flashSession',
                 '_definition' => 'Phalcon\\Flash\\Session',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'tag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'tag',
                 '_definition' => 'Phalcon\\Tag',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'session' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'session',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'sessionBag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'sessionBag',
                 '_definition' => 'Phalcon\\Session\\Bag',
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'eventsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'eventsManager',
                 '_definition' => 'Phalcon\\Events\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'transactionManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'transactionManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'assets' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'assets',
                 '_definition' => 'Phalcon\\Assets\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'config' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'config',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
              )),
              'logger' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'logger',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'viewCache' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'viewCache',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'view' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'view',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
              )),
              'db' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'db',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
            ),
             '_sharedInstances' => 
            array (
              'config' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
              'router' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
              'view' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
              'dispatcher' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
              'ApiUsersController' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
              'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"5f4dd06b-515a-4759-b6bb-c306d7db7daa"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
              'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
              'modelsManager' => NULL,
              'modelsMetadata' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
              'db' => 
              Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                 '_eventsManager' => NULL,
                 '_descriptor' => 
                array (
                  'host' => 'localhost',
                  'username' => 'pgsql',
                  'password' => 'secret',
                  'dbname' => 'phalcon',
                ),
                 '_dialect' => 
                Phalcon\Db\Dialect\Postgresql::__set_state(array(
                   '_customFunctions' => NULL,
                   '_escapeChar' => '"',
                )),
                 '_connectionId' => 0,
                 '_sqlStatement' => NULL,
                 '_sqlVariables' => NULL,
                 '_sqlBindTypes' => NULL,
                 '_transactionLevel' => 0,
                 '_transactionsWithSavepoints' => false,
                 '_pdo' => 
                PDO::__set_state(array(
                )),
                 '_affectedRows' => NULL,
                 '_type' => 'pgsql',
                 '_dialectType' => 'postgresql',
              )),
            ),
             '_freshInstance' => false,
             '_eventsManager' => NULL,
          )),
           '_modelsManager' => NULL,
           '_modelsMetaData' => NULL,
           '_errorMessages' => NULL,
           '_operationMade' => 0,
           '_dirtyState' => 1,
           '_transaction' => NULL,
           '_uniqueKey' => NULL,
           '_uniqueParams' => NULL,
           '_uniqueTypes' => NULL,
           '_skipped' => NULL,
           '_related' => NULL,
           '_snapshot' => NULL,
           '_oldSnapshot' => 
          array (
          ),
        )),
         '_lastQuery' => NULL,
         '_reusable' => NULL,
         '_keepSnapshots' => NULL,
         '_dynamicUpdate' => NULL,
         '_namespaceAliases' => NULL,
      )),
       '_modelsMetaData' => NULL,
       '_errorMessages' => NULL,
       '_operationMade' => 0,
       '_dirtyState' => 1,
       '_transaction' => NULL,
       '_uniqueKey' => NULL,
       '_uniqueParams' => NULL,
       '_uniqueTypes' => NULL,
       '_skipped' => NULL,
       '_related' => NULL,
       '_snapshot' => NULL,
       '_oldSnapshot' => 
      array (
      ),
    )),
     '_columnMap' => 
    array (
      'id' => 'id',
      'name' => 'name',
      'password' => 'password',
      'gecos' => 'gecos',
      'superuser' => 'superuser',
    ),
     '_keepSnapshots' => false,
  )),
)
[Mon, 17 Dec 18 23:31:14 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'create',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
     'gecos' => 'Luppolo Kuppolo',
     'superuser' => true,
  )),
   'id' => '1bb1de51-1ff8-4d14-9e95-a557fb7f92f8',
))
[Mon, 17 Dec 18 23:31:14 +0200][DEBUG] array (
  'result' => true,
)
[Mon, 17 Dec 18 23:31:14 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
   'id' => 'a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e',
))
[Mon, 17 Dec 18 23:31:14 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Resultset\Simple::__set_state(array(
     '_result' => 
    Phalcon\Db\Result\Pdo::__set_state(array(
       '_connection' => 
      Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
         '_eventsManager' => NULL,
         '_descriptor' => 
        array (
          'host' => 'localhost',
          'username' => 'pgsql',
          'password' => 'secret',
          'dbname' => 'phalcon',
        ),
         '_dialect' => 
        Phalcon\Db\Dialect\Postgresql::__set_state(array(
           '_customFunctions' => NULL,
           '_escapeChar' => '"',
        )),
         '_connectionId' => 0,
         '_sqlStatement' => NULL,
         '_sqlVariables' => NULL,
         '_sqlBindTypes' => NULL,
         '_transactionLevel' => 0,
         '_transactionsWithSavepoints' => false,
         '_pdo' => 
        PDO::__set_state(array(
        )),
         '_affectedRows' => NULL,
         '_type' => 'pgsql',
         '_dialectType' => 'postgresql',
      )),
       '_result' => NULL,
       '_fetchMode' => 2,
       '_pdoStatement' => 
      PDOStatement::__set_state(array(
         'queryString' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
      )),
       '_sqlStatement' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
       '_bindParams' => NULL,
       '_bindTypes' => NULL,
       '_rowCount' => 2,
    )),
     '_cache' => NULL,
     '_isFresh' => true,
     '_pointer' => 0,
     '_count' => 2,
     '_activeRow' => NULL,
     '_rows' => 
    array (
      0 => 
      array (
        'id' => 2,
        'name' => 'qasert',
        'gecos' => '1132312',
        'password' => '21212',
        'superuser' => false,
      ),
      1 => 
      array (
        'id' => 3,
        'name' => 'qwerty',
        'gecos' => 'Luppolo Kuppolo',
        'password' => '12345',
        'superuser' => true,
      ),
    ),
     '_row' => NULL,
     '_errorMessages' => NULL,
     '_hydrateMode' => 0,
     '_model' => 
    User::__set_state(array(
       'id' => NULL,
       'name' => NULL,
       'password' => NULL,
       'gecos' => NULL,
       'superuser' => NULL,
       '_dependencyInjector' => 
      Phalcon\Di\FactoryDefault::__set_state(array(
         '_services' => 
        array (
          'router' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'router',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
          )),
          'dispatcher' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'dispatcher',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
          )),
          'url' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'url',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\Manager::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_customEventsManager' => NULL,
               '_readConnectionServices' => NULL,
               '_writeConnectionServices' => NULL,
               '_aliases' => NULL,
               '_modelVisibility' => 
              array (
              ),
               '_hasMany' => NULL,
               '_hasManySingle' => NULL,
               '_hasOne' => NULL,
               '_hasOneSingle' => NULL,
               '_belongsTo' => NULL,
               '_belongsToSingle' => NULL,
               '_hasManyToMany' => NULL,
               '_hasManyToManySingle' => NULL,
               '_initialized' => 
              array (
                'user' => 
                User::__set_state(array(
                   'id' => NULL,
                   'name' => NULL,
                   'password' => NULL,
                   'gecos' => NULL,
                   'superuser' => NULL,
                   '_dependencyInjector' => NULL,
                   '_modelsManager' => NULL,
                   '_modelsMetaData' => NULL,
                   '_errorMessages' => NULL,
                   '_operationMade' => 0,
                   '_dirtyState' => 1,
                   '_transaction' => NULL,
                   '_uniqueKey' => NULL,
                   '_uniqueParams' => NULL,
                   '_uniqueTypes' => NULL,
                   '_skipped' => NULL,
                   '_related' => NULL,
                   '_snapshot' => NULL,
                   '_oldSnapshot' => 
                  array (
                  ),
                )),
              ),
               '_prefix' => '',
               '_sources' => 
              array (
                'user' => 'user',
              ),
               '_schemas' => NULL,
               '_behaviors' => NULL,
               '_lastInitialized' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
               '_lastQuery' => NULL,
               '_reusable' => NULL,
               '_keepSnapshots' => NULL,
               '_dynamicUpdate' => NULL,
               '_namespaceAliases' => NULL,
            )),
          )),
          'modelsMetadata' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsMetadata',
             '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
          )),
          'response' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'response',
             '_definition' => 'Phalcon\\Http\\Response',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'cookies' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'cookies',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'request' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'request',
             '_definition' => 'Phalcon\\Http\\Request',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
          )),
          'filter' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'filter',
             '_definition' => 'Phalcon\\Filter',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'escaper' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'escaper',
             '_definition' => 'Phalcon\\Escaper',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'security' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'security',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'crypt' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'crypt',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'annotations' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'annotations',
             '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flash' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flash',
             '_definition' => 'Phalcon\\Flash\\Direct',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flashSession' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flashSession',
             '_definition' => 'Phalcon\\Flash\\Session',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'tag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'tag',
             '_definition' => 'Phalcon\\Tag',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'session' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'session',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'sessionBag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'sessionBag',
             '_definition' => 'Phalcon\\Session\\Bag',
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'eventsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'eventsManager',
             '_definition' => 'Phalcon\\Events\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'transactionManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'transactionManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'assets' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'assets',
             '_definition' => 'Phalcon\\Assets\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'config' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'config',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
          )),
          'logger' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'logger',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
          'viewCache' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'viewCache',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'view' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'view',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
          )),
          'db' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'db',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
        ),
         '_sharedInstances' => 
        array (
          'config' => 
          Phalcon\Config\Adapter\Ini::__set_state(array(
             'database' => 
            Phalcon\Config::__set_state(array(
               'host' => 'localhost',
               'dbname' => 'phalcon',
               'username' => 'pgsql',
               'password' => 'secret',
            )),
             'application' => 
            Phalcon\Config::__set_state(array(
               'appDir' => '/var/www/dev/app/../app/',
               'controllersDir' => '/var/www/dev/app/../app/controllers/',
               'modelsDir' => '/var/www/dev/app/../app/models/',
               'migrationsDir' => '/var/www/dev/app/../app/migrations/',
               'viewsDir' => '/var/www/dev/app/../app/views/',
               'pluginsDir' => '/var/www/dev/app/../app/plugins/',
               'libraryDir' => '/var/www/dev/app/../app/library/',
               'utilsDir' => '/var/www/dev/app/../app/utils/',
               'logPath' => '/var/www/dev/app/../logs/debug.log',
               'cacheDir' => '/var/www/dev/app/../cache/',
               'dataDir' => '/var/www/dev/app/../data/',
            )),
          )),
          'router' => 
          Phalcon\Mvc\Router::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_uriSource' => NULL,
             '_namespace' => NULL,
             '_module' => NULL,
             '_controller' => 'api-users',
             '_action' => 'index',
             '_params' => 
            array (
            ),
             '_routes' => 
            array (
              0 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/',
                 '_compiledPattern' => '/',
                 '_paths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 0,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              1 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/login',
                 '_compiledPattern' => '/api/login',
                 '_paths' => 
                array (
                  'controller' => 'api-login',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 1,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              2 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
            ),
             '_matchedRoute' => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/users',
               '_compiledPattern' => '/api/users',
               '_paths' => 
              array (
                'controller' => 'api-users',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 2,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
             '_matches' => NULL,
             '_wasMatched' => true,
             '_defaultNamespace' => NULL,
             '_defaultModule' => NULL,
             '_defaultController' => 'index',
             '_defaultAction' => 'index',
             '_defaultParams' => 
            array (
            ),
             '_removeExtraSlashes' => true,
             '_notFoundPaths' => 
            array (
              'controller' => 'index',
              'action' => 'index',
            ),
             '_keyRouteNames' => 
            array (
            ),
             '_keyRouteIds' => 
            array (
            ),
          )),
          'view' => 
          Phalcon\Mvc\View::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_options' => 
            array (
            ),
             '_basePath' => '',
             '_content' => NULL,
             '_renderLevel' => 5,
             '_currentRenderLevel' => 0,
             '_disabledLevels' => NULL,
             '_viewParams' => 
            array (
            ),
             '_layout' => NULL,
             '_layoutsDir' => '',
             '_partialsDir' => '',
             '_viewsDirs' => '/var/www/dev/app/../app/views/',
             '_templatesBefore' => 
            array (
            ),
             '_templatesAfter' => 
            array (
            ),
             '_engines' => false,
             '_registeredEngines' => NULL,
             '_mainView' => 'index',
             '_controllerName' => NULL,
             '_actionName' => NULL,
             '_params' => NULL,
             '_pickView' => NULL,
             '_cache' => NULL,
             '_cacheLevel' => 0,
             '_activeRenderPaths' => NULL,
             '_disabled' => false,
          )),
          'dispatcher' => 
          Phalcon\Mvc\Dispatcher::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => 
            Phalcon\Events\Manager::__set_state(array(
               '_events' => 
              array (
                'dispatch:beforeExecuteRoute' => 
                array (
                  0 => 
                  SecurityPlugin::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                  )),
                ),
              ),
               '_collect' => false,
               '_enablePriorities' => false,
               '_responses' => NULL,
            )),
             '_activeHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_finished' => true,
             '_forwarded' => false,
             '_moduleName' => '',
             '_namespaceName' => NULL,
             '_handlerName' => 'api-users',
             '_actionName' => 'index',
             '_params' => 
            array (
            ),
             '_returnedValue' => NULL,
             '_lastHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_defaultNamespace' => NULL,
             '_actionSuffix' => 'Action',
             '_previousNamespaceName' => NULL,
             '_previousHandlerName' => NULL,
             '_previousActionName' => NULL,
             '_modelBinding' => false,
             '_modelBinder' => NULL,
             '_isControllerInitialize' => false,
             '_handlerSuffix' => 'Controller',
             '_defaultHandler' => 'index',
             '_defaultAction' => 'index',
          )),
          'ApiUsersController' => 
          ApiUsersController::__set_state(array(
             'invalidRequest' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32600,
                'message' => 'Invalid Request',
              ),
              'id' => NULL,
            ),
             'parseError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32700,
                'message' => 'Parse error',
              ),
              'id' => NULL,
            ),
             'methodNotFound' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32601,
                'message' => 'Method not found',
              ),
              'id' => 1,
            ),
             'internalError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32603,
                'message' => 'Internal error',
              ),
              'id' => 0,
            ),
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
             'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
          )),
          'request' => 
          Phalcon\Http\Request::__set_state(array(
             '_dependencyInjector' => NULL,
             '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
             '_filter' => NULL,
             '_putCache' => NULL,
             '_httpMethodParameterOverride' => false,
             '_strictHostCheck' => false,
          )),
          'logger' => 
          Phalcon\Logger\Adapter\File::__set_state(array(
             '_transaction' => false,
             '_queue' => 
            array (
            ),
             '_formatter' => 
            Phalcon\Logger\Formatter\Line::__set_state(array(
               '_dateFormat' => 'D, d M y H:i:s O',
               '_format' => '[%date%][%type%] %message%',
            )),
             '_logLevel' => 9,
             '_fileHandler' => NULL,
             '_path' => '/var/www/dev/app/../logs/debug.log',
             '_options' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Mvc\Model\Manager::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_customEventsManager' => NULL,
             '_readConnectionServices' => NULL,
             '_writeConnectionServices' => NULL,
             '_aliases' => NULL,
             '_modelVisibility' => 
            array (
            ),
             '_hasMany' => NULL,
             '_hasManySingle' => NULL,
             '_hasOne' => NULL,
             '_hasOneSingle' => NULL,
             '_belongsTo' => NULL,
             '_belongsToSingle' => NULL,
             '_hasManyToMany' => NULL,
             '_hasManyToManySingle' => NULL,
             '_initialized' => 
            array (
              'user' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
            ),
             '_prefix' => '',
             '_sources' => 
            array (
              'user' => 'user',
            ),
             '_schemas' => NULL,
             '_behaviors' => NULL,
             '_lastInitialized' => 
            User::__set_state(array(
               'id' => NULL,
               'name' => NULL,
               'password' => NULL,
               'gecos' => NULL,
               'superuser' => NULL,
               '_dependencyInjector' => NULL,
               '_modelsManager' => NULL,
               '_modelsMetaData' => NULL,
               '_errorMessages' => NULL,
               '_operationMade' => 0,
               '_dirtyState' => 1,
               '_transaction' => NULL,
               '_uniqueKey' => NULL,
               '_uniqueParams' => NULL,
               '_uniqueTypes' => NULL,
               '_skipped' => NULL,
               '_related' => NULL,
               '_snapshot' => NULL,
               '_oldSnapshot' => 
              array (
              ),
            )),
             '_lastQuery' => NULL,
             '_reusable' => NULL,
             '_keepSnapshots' => NULL,
             '_dynamicUpdate' => NULL,
             '_namespaceAliases' => NULL,
          )),
          'modelsMetadata' => 
          Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
             '_dependencyInjector' => NULL,
             '_strategy' => 
            Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
            )),
             '_columnMap' => 
            array (
              'user' => 
              array (
                0 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
                1 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
              ),
            ),
             '_metaData' => 
            array (
              'user-user' => 
              array (
                0 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                  4 => 'superuser',
                ),
                1 => 
                array (
                  0 => 'id',
                ),
                2 => 
                array (
                  0 => 'name',
                  1 => 'gecos',
                  2 => 'password',
                  3 => 'superuser',
                ),
                3 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                ),
                4 => 
                array (
                  'id' => 0,
                  'name' => 6,
                  'gecos' => 6,
                  'password' => 6,
                  'superuser' => 8,
                ),
                5 => 
                array (
                  'id' => true,
                ),
                8 => 'id',
                9 => 
                array (
                  'id' => 1,
                  'name' => 2,
                  'gecos' => 2,
                  'password' => 2,
                  'superuser' => 5,
                ),
                10 => 
                array (
                ),
                11 => 
                array (
                ),
                12 => 
                array (
                  'superuser' => NULL,
                ),
                13 => 
                array (
                ),
              ),
            ),
          )),
          'db' => 
          Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
             '_eventsManager' => NULL,
             '_descriptor' => 
            array (
              'host' => 'localhost',
              'username' => 'pgsql',
              'password' => 'secret',
              'dbname' => 'phalcon',
            ),
             '_dialect' => 
            Phalcon\Db\Dialect\Postgresql::__set_state(array(
               '_customFunctions' => NULL,
               '_escapeChar' => '"',
            )),
             '_connectionId' => 0,
             '_sqlStatement' => NULL,
             '_sqlVariables' => NULL,
             '_sqlBindTypes' => NULL,
             '_transactionLevel' => 0,
             '_transactionsWithSavepoints' => false,
             '_pdo' => 
            PDO::__set_state(array(
            )),
             '_affectedRows' => NULL,
             '_type' => 'pgsql',
             '_dialectType' => 'postgresql',
          )),
        ),
         '_freshInstance' => false,
         '_eventsManager' => NULL,
      )),
       '_modelsManager' => 
      Phalcon\Mvc\Model\Manager::__set_state(array(
         '_dependencyInjector' => 
        Phalcon\Di\FactoryDefault::__set_state(array(
           '_services' => 
          array (
            'router' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'router',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
            )),
            'dispatcher' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'dispatcher',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
            )),
            'url' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'url',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'modelsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'modelsMetadata' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsMetadata',
               '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
            )),
            'response' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'response',
               '_definition' => 'Phalcon\\Http\\Response',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'cookies' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'cookies',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'request' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'request',
               '_definition' => 'Phalcon\\Http\\Request',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
            )),
            'filter' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'filter',
               '_definition' => 'Phalcon\\Filter',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'escaper' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'escaper',
               '_definition' => 'Phalcon\\Escaper',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'security' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'security',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'crypt' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'crypt',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'annotations' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'annotations',
               '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flash' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flash',
               '_definition' => 'Phalcon\\Flash\\Direct',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flashSession' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flashSession',
               '_definition' => 'Phalcon\\Flash\\Session',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'tag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'tag',
               '_definition' => 'Phalcon\\Tag',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'session' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'session',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'sessionBag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'sessionBag',
               '_definition' => 'Phalcon\\Session\\Bag',
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'eventsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'eventsManager',
               '_definition' => 'Phalcon\\Events\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'transactionManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'transactionManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'assets' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'assets',
               '_definition' => 'Phalcon\\Assets\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'config' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'config',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
            )),
            'logger' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'logger',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'viewCache' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'viewCache',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'view' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'view',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
            )),
            'db' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'db',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
          ),
           '_sharedInstances' => 
          array (
            'config' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
            'router' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
            'view' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
            'dispatcher' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
            'ApiUsersController' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
            'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
            'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
            'modelsManager' => NULL,
            'modelsMetadata' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
            'db' => 
            Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
               '_eventsManager' => NULL,
               '_descriptor' => 
              array (
                'host' => 'localhost',
                'username' => 'pgsql',
                'password' => 'secret',
                'dbname' => 'phalcon',
              ),
               '_dialect' => 
              Phalcon\Db\Dialect\Postgresql::__set_state(array(
                 '_customFunctions' => NULL,
                 '_escapeChar' => '"',
              )),
               '_connectionId' => 0,
               '_sqlStatement' => NULL,
               '_sqlVariables' => NULL,
               '_sqlBindTypes' => NULL,
               '_transactionLevel' => 0,
               '_transactionsWithSavepoints' => false,
               '_pdo' => 
              PDO::__set_state(array(
              )),
               '_affectedRows' => NULL,
               '_type' => 'pgsql',
               '_dialectType' => 'postgresql',
            )),
          ),
           '_freshInstance' => false,
           '_eventsManager' => NULL,
        )),
         '_eventsManager' => NULL,
         '_customEventsManager' => NULL,
         '_readConnectionServices' => NULL,
         '_writeConnectionServices' => NULL,
         '_aliases' => NULL,
         '_modelVisibility' => 
        array (
        ),
         '_hasMany' => NULL,
         '_hasManySingle' => NULL,
         '_hasOne' => NULL,
         '_hasOneSingle' => NULL,
         '_belongsTo' => NULL,
         '_belongsToSingle' => NULL,
         '_hasManyToMany' => NULL,
         '_hasManyToManySingle' => NULL,
         '_initialized' => 
        array (
          'user' => 
          User::__set_state(array(
             'id' => NULL,
             'name' => NULL,
             'password' => NULL,
             'gecos' => NULL,
             'superuser' => NULL,
             '_dependencyInjector' => 
            Phalcon\Di\FactoryDefault::__set_state(array(
               '_services' => 
              array (
                'router' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'router',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Router::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_uriSource' => NULL,
                     '_namespace' => NULL,
                     '_module' => NULL,
                     '_controller' => 'api-users',
                     '_action' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_routes' => 
                    array (
                      0 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/',
                         '_compiledPattern' => '/',
                         '_paths' => 
                        array (
                          'controller' => 'index',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 0,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      1 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/login',
                         '_compiledPattern' => '/api/login',
                         '_paths' => 
                        array (
                          'controller' => 'api-login',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 1,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      2 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/users',
                         '_compiledPattern' => '/api/users',
                         '_paths' => 
                        array (
                          'controller' => 'api-users',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 2,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                    ),
                     '_matchedRoute' => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                     '_matches' => NULL,
                     '_wasMatched' => true,
                     '_defaultNamespace' => NULL,
                     '_defaultModule' => NULL,
                     '_defaultController' => 'index',
                     '_defaultAction' => 'index',
                     '_defaultParams' => 
                    array (
                    ),
                     '_removeExtraSlashes' => true,
                     '_notFoundPaths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_keyRouteNames' => 
                    array (
                    ),
                     '_keyRouteIds' => 
                    array (
                    ),
                  )),
                )),
                'dispatcher' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'dispatcher',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Dispatcher::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => 
                    Phalcon\Events\Manager::__set_state(array(
                       '_events' => 
                      array (
                        'dispatch:beforeExecuteRoute' => 
                        array (
                          0 => 
                          SecurityPlugin::__set_state(array(
                             '_dependencyInjector' => NULL,
                             '_eventsManager' => NULL,
                          )),
                        ),
                      ),
                       '_collect' => false,
                       '_enablePriorities' => false,
                       '_responses' => NULL,
                    )),
                     '_activeHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_finished' => true,
                     '_forwarded' => false,
                     '_moduleName' => '',
                     '_namespaceName' => NULL,
                     '_handlerName' => 'api-users',
                     '_actionName' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_returnedValue' => NULL,
                     '_lastHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_defaultNamespace' => NULL,
                     '_actionSuffix' => 'Action',
                     '_previousNamespaceName' => NULL,
                     '_previousHandlerName' => NULL,
                     '_previousActionName' => NULL,
                     '_modelBinding' => false,
                     '_modelBinder' => NULL,
                     '_isControllerInitialize' => false,
                     '_handlerSuffix' => 'Controller',
                     '_defaultHandler' => 'index',
                     '_defaultAction' => 'index',
                  )),
                )),
                'url' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'url',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'modelsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'modelsMetadata' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsMetadata',
                   '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_strategy' => 
                    Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                    )),
                     '_columnMap' => 
                    array (
                      'user' => 
                      array (
                        0 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                        1 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                      ),
                    ),
                     '_metaData' => 
                    array (
                      'user-user' => 
                      array (
                        0 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                          4 => 'superuser',
                        ),
                        1 => 
                        array (
                          0 => 'id',
                        ),
                        2 => 
                        array (
                          0 => 'name',
                          1 => 'gecos',
                          2 => 'password',
                          3 => 'superuser',
                        ),
                        3 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                        ),
                        4 => 
                        array (
                          'id' => 0,
                          'name' => 6,
                          'gecos' => 6,
                          'password' => 6,
                          'superuser' => 8,
                        ),
                        5 => 
                        array (
                          'id' => true,
                        ),
                        8 => 'id',
                        9 => 
                        array (
                          'id' => 1,
                          'name' => 2,
                          'gecos' => 2,
                          'password' => 2,
                          'superuser' => 5,
                        ),
                        10 => 
                        array (
                        ),
                        11 => 
                        array (
                        ),
                        12 => 
                        array (
                          'superuser' => NULL,
                        ),
                        13 => 
                        array (
                        ),
                      ),
                    ),
                  )),
                )),
                'response' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'response',
                   '_definition' => 'Phalcon\\Http\\Response',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'cookies' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'cookies',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'request' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'request',
                   '_definition' => 'Phalcon\\Http\\Request',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                )),
                'filter' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'filter',
                   '_definition' => 'Phalcon\\Filter',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'escaper' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'escaper',
                   '_definition' => 'Phalcon\\Escaper',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'security' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'security',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'crypt' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'crypt',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'annotations' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'annotations',
                   '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flash' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flash',
                   '_definition' => 'Phalcon\\Flash\\Direct',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flashSession' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flashSession',
                   '_definition' => 'Phalcon\\Flash\\Session',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'tag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'tag',
                   '_definition' => 'Phalcon\\Tag',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'session' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'session',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'sessionBag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'sessionBag',
                   '_definition' => 'Phalcon\\Session\\Bag',
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'eventsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'eventsManager',
                   '_definition' => 'Phalcon\\Events\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'transactionManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'transactionManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'assets' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'assets',
                   '_definition' => 'Phalcon\\Assets\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'config' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'config',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Config\Adapter\Ini::__set_state(array(
                     'database' => 
                    Phalcon\Config::__set_state(array(
                       'host' => 'localhost',
                       'dbname' => 'phalcon',
                       'username' => 'pgsql',
                       'password' => 'secret',
                    )),
                     'application' => 
                    Phalcon\Config::__set_state(array(
                       'appDir' => '/var/www/dev/app/../app/',
                       'controllersDir' => '/var/www/dev/app/../app/controllers/',
                       'modelsDir' => '/var/www/dev/app/../app/models/',
                       'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                       'viewsDir' => '/var/www/dev/app/../app/views/',
                       'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                       'libraryDir' => '/var/www/dev/app/../app/library/',
                       'utilsDir' => '/var/www/dev/app/../app/utils/',
                       'logPath' => '/var/www/dev/app/../logs/debug.log',
                       'cacheDir' => '/var/www/dev/app/../cache/',
                       'dataDir' => '/var/www/dev/app/../data/',
                    )),
                  )),
                )),
                'logger' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'logger',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'viewCache' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'viewCache',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'view' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'view',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\View::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_options' => 
                    array (
                    ),
                     '_basePath' => '',
                     '_content' => NULL,
                     '_renderLevel' => 5,
                     '_currentRenderLevel' => 0,
                     '_disabledLevels' => NULL,
                     '_viewParams' => 
                    array (
                    ),
                     '_layout' => NULL,
                     '_layoutsDir' => '',
                     '_partialsDir' => '',
                     '_viewsDirs' => '/var/www/dev/app/../app/views/',
                     '_templatesBefore' => 
                    array (
                    ),
                     '_templatesAfter' => 
                    array (
                    ),
                     '_engines' => false,
                     '_registeredEngines' => NULL,
                     '_mainView' => 'index',
                     '_controllerName' => NULL,
                     '_actionName' => NULL,
                     '_params' => NULL,
                     '_pickView' => NULL,
                     '_cache' => NULL,
                     '_cacheLevel' => 0,
                     '_activeRenderPaths' => NULL,
                     '_disabled' => false,
                  )),
                )),
                'db' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'db',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
              ),
               '_sharedInstances' => 
              array (
                'config' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
                'router' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
                'view' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
                'dispatcher' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
                'ApiUsersController' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
                'modelsManager' => NULL,
                'modelsMetadata' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
                'db' => 
                Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                   '_eventsManager' => NULL,
                   '_descriptor' => 
                  array (
                    'host' => 'localhost',
                    'username' => 'pgsql',
                    'password' => 'secret',
                    'dbname' => 'phalcon',
                  ),
                   '_dialect' => 
                  Phalcon\Db\Dialect\Postgresql::__set_state(array(
                     '_customFunctions' => NULL,
                     '_escapeChar' => '"',
                  )),
                   '_connectionId' => 0,
                   '_sqlStatement' => NULL,
                   '_sqlVariables' => NULL,
                   '_sqlBindTypes' => NULL,
                   '_transactionLevel' => 0,
                   '_transactionsWithSavepoints' => false,
                   '_pdo' => 
                  PDO::__set_state(array(
                  )),
                   '_affectedRows' => NULL,
                   '_type' => 'pgsql',
                   '_dialectType' => 'postgresql',
                )),
              ),
               '_freshInstance' => false,
               '_eventsManager' => NULL,
            )),
             '_modelsManager' => NULL,
             '_modelsMetaData' => NULL,
             '_errorMessages' => NULL,
             '_operationMade' => 0,
             '_dirtyState' => 1,
             '_transaction' => NULL,
             '_uniqueKey' => NULL,
             '_uniqueParams' => NULL,
             '_uniqueTypes' => NULL,
             '_skipped' => NULL,
             '_related' => NULL,
             '_snapshot' => NULL,
             '_oldSnapshot' => 
            array (
            ),
          )),
        ),
         '_prefix' => '',
         '_sources' => 
        array (
          'user' => 'user',
        ),
         '_schemas' => NULL,
         '_behaviors' => NULL,
         '_lastInitialized' => 
        User::__set_state(array(
           'id' => NULL,
           'name' => NULL,
           'password' => NULL,
           'gecos' => NULL,
           'superuser' => NULL,
           '_dependencyInjector' => 
          Phalcon\Di\FactoryDefault::__set_state(array(
             '_services' => 
            array (
              'router' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'router',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
              )),
              'dispatcher' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'dispatcher',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
              )),
              'url' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'url',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'modelsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'modelsMetadata' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsMetadata',
                 '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
              )),
              'response' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'response',
                 '_definition' => 'Phalcon\\Http\\Response',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'cookies' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'cookies',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'request' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'request',
                 '_definition' => 'Phalcon\\Http\\Request',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
              )),
              'filter' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'filter',
                 '_definition' => 'Phalcon\\Filter',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'escaper' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'escaper',
                 '_definition' => 'Phalcon\\Escaper',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'security' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'security',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'crypt' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'crypt',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'annotations' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'annotations',
                 '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flash' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flash',
                 '_definition' => 'Phalcon\\Flash\\Direct',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flashSession' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flashSession',
                 '_definition' => 'Phalcon\\Flash\\Session',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'tag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'tag',
                 '_definition' => 'Phalcon\\Tag',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'session' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'session',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'sessionBag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'sessionBag',
                 '_definition' => 'Phalcon\\Session\\Bag',
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'eventsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'eventsManager',
                 '_definition' => 'Phalcon\\Events\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'transactionManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'transactionManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'assets' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'assets',
                 '_definition' => 'Phalcon\\Assets\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'config' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'config',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
              )),
              'logger' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'logger',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'viewCache' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'viewCache',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'view' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'view',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
              )),
              'db' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'db',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
            ),
             '_sharedInstances' => 
            array (
              'config' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
              'router' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
              'view' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
              'dispatcher' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
              'ApiUsersController' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
              'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"a5287fb9-d6d1-4e83-8a7a-2ef73e3ee44e"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
              'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
              'modelsManager' => NULL,
              'modelsMetadata' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
              'db' => 
              Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                 '_eventsManager' => NULL,
                 '_descriptor' => 
                array (
                  'host' => 'localhost',
                  'username' => 'pgsql',
                  'password' => 'secret',
                  'dbname' => 'phalcon',
                ),
                 '_dialect' => 
                Phalcon\Db\Dialect\Postgresql::__set_state(array(
                   '_customFunctions' => NULL,
                   '_escapeChar' => '"',
                )),
                 '_connectionId' => 0,
                 '_sqlStatement' => NULL,
                 '_sqlVariables' => NULL,
                 '_sqlBindTypes' => NULL,
                 '_transactionLevel' => 0,
                 '_transactionsWithSavepoints' => false,
                 '_pdo' => 
                PDO::__set_state(array(
                )),
                 '_affectedRows' => NULL,
                 '_type' => 'pgsql',
                 '_dialectType' => 'postgresql',
              )),
            ),
             '_freshInstance' => false,
             '_eventsManager' => NULL,
          )),
           '_modelsManager' => NULL,
           '_modelsMetaData' => NULL,
           '_errorMessages' => NULL,
           '_operationMade' => 0,
           '_dirtyState' => 1,
           '_transaction' => NULL,
           '_uniqueKey' => NULL,
           '_uniqueParams' => NULL,
           '_uniqueTypes' => NULL,
           '_skipped' => NULL,
           '_related' => NULL,
           '_snapshot' => NULL,
           '_oldSnapshot' => 
          array (
          ),
        )),
         '_lastQuery' => NULL,
         '_reusable' => NULL,
         '_keepSnapshots' => NULL,
         '_dynamicUpdate' => NULL,
         '_namespaceAliases' => NULL,
      )),
       '_modelsMetaData' => NULL,
       '_errorMessages' => NULL,
       '_operationMade' => 0,
       '_dirtyState' => 1,
       '_transaction' => NULL,
       '_uniqueKey' => NULL,
       '_uniqueParams' => NULL,
       '_uniqueTypes' => NULL,
       '_skipped' => NULL,
       '_related' => NULL,
       '_snapshot' => NULL,
       '_oldSnapshot' => 
      array (
      ),
    )),
     '_columnMap' => 
    array (
      'id' => 'id',
      'name' => 'name',
      'password' => 'password',
      'gecos' => 'gecos',
      'superuser' => 'superuser',
    ),
     '_keepSnapshots' => false,
  )),
)
[Mon, 17 Dec 18 23:31:20 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'drop',
   'params' => 
  stdClass::__set_state(array(
     'id' => 2,
  )),
   'id' => '2c659003-c31b-420e-a5e5-97bf73eeafa2',
))
[Mon, 17 Dec 18 23:31:20 +0200][DEBUG] array (
  'result' => true,
)
[Mon, 17 Dec 18 23:31:21 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
   'id' => '1c32fd32-6a84-4736-8d42-66a804c74e23',
))
[Mon, 17 Dec 18 23:31:21 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Resultset\Simple::__set_state(array(
     '_result' => 
    Phalcon\Db\Result\Pdo::__set_state(array(
       '_connection' => 
      Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
         '_eventsManager' => NULL,
         '_descriptor' => 
        array (
          'host' => 'localhost',
          'username' => 'pgsql',
          'password' => 'secret',
          'dbname' => 'phalcon',
        ),
         '_dialect' => 
        Phalcon\Db\Dialect\Postgresql::__set_state(array(
           '_customFunctions' => NULL,
           '_escapeChar' => '"',
        )),
         '_connectionId' => 0,
         '_sqlStatement' => NULL,
         '_sqlVariables' => NULL,
         '_sqlBindTypes' => NULL,
         '_transactionLevel' => 0,
         '_transactionsWithSavepoints' => false,
         '_pdo' => 
        PDO::__set_state(array(
        )),
         '_affectedRows' => NULL,
         '_type' => 'pgsql',
         '_dialectType' => 'postgresql',
      )),
       '_result' => NULL,
       '_fetchMode' => 2,
       '_pdoStatement' => 
      PDOStatement::__set_state(array(
         'queryString' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
      )),
       '_sqlStatement' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
       '_bindParams' => NULL,
       '_bindTypes' => NULL,
       '_rowCount' => 1,
    )),
     '_cache' => NULL,
     '_isFresh' => true,
     '_pointer' => 0,
     '_count' => 1,
     '_activeRow' => NULL,
     '_rows' => 
    array (
      0 => 
      array (
        'id' => 3,
        'name' => 'qwerty',
        'gecos' => 'Luppolo Kuppolo',
        'password' => '12345',
        'superuser' => true,
      ),
    ),
     '_row' => NULL,
     '_errorMessages' => NULL,
     '_hydrateMode' => 0,
     '_model' => 
    User::__set_state(array(
       'id' => NULL,
       'name' => NULL,
       'password' => NULL,
       'gecos' => NULL,
       'superuser' => NULL,
       '_dependencyInjector' => 
      Phalcon\Di\FactoryDefault::__set_state(array(
         '_services' => 
        array (
          'router' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'router',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
          )),
          'dispatcher' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'dispatcher',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
          )),
          'url' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'url',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\Manager::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_customEventsManager' => NULL,
               '_readConnectionServices' => NULL,
               '_writeConnectionServices' => NULL,
               '_aliases' => NULL,
               '_modelVisibility' => 
              array (
              ),
               '_hasMany' => NULL,
               '_hasManySingle' => NULL,
               '_hasOne' => NULL,
               '_hasOneSingle' => NULL,
               '_belongsTo' => NULL,
               '_belongsToSingle' => NULL,
               '_hasManyToMany' => NULL,
               '_hasManyToManySingle' => NULL,
               '_initialized' => 
              array (
                'user' => 
                User::__set_state(array(
                   'id' => NULL,
                   'name' => NULL,
                   'password' => NULL,
                   'gecos' => NULL,
                   'superuser' => NULL,
                   '_dependencyInjector' => NULL,
                   '_modelsManager' => NULL,
                   '_modelsMetaData' => NULL,
                   '_errorMessages' => NULL,
                   '_operationMade' => 0,
                   '_dirtyState' => 1,
                   '_transaction' => NULL,
                   '_uniqueKey' => NULL,
                   '_uniqueParams' => NULL,
                   '_uniqueTypes' => NULL,
                   '_skipped' => NULL,
                   '_related' => NULL,
                   '_snapshot' => NULL,
                   '_oldSnapshot' => 
                  array (
                  ),
                )),
              ),
               '_prefix' => '',
               '_sources' => 
              array (
                'user' => 'user',
              ),
               '_schemas' => NULL,
               '_behaviors' => NULL,
               '_lastInitialized' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
               '_lastQuery' => NULL,
               '_reusable' => NULL,
               '_keepSnapshots' => NULL,
               '_dynamicUpdate' => NULL,
               '_namespaceAliases' => NULL,
            )),
          )),
          'modelsMetadata' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsMetadata',
             '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
          )),
          'response' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'response',
             '_definition' => 'Phalcon\\Http\\Response',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'cookies' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'cookies',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'request' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'request',
             '_definition' => 'Phalcon\\Http\\Request',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
          )),
          'filter' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'filter',
             '_definition' => 'Phalcon\\Filter',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'escaper' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'escaper',
             '_definition' => 'Phalcon\\Escaper',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'security' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'security',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'crypt' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'crypt',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'annotations' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'annotations',
             '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flash' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flash',
             '_definition' => 'Phalcon\\Flash\\Direct',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flashSession' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flashSession',
             '_definition' => 'Phalcon\\Flash\\Session',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'tag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'tag',
             '_definition' => 'Phalcon\\Tag',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'session' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'session',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'sessionBag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'sessionBag',
             '_definition' => 'Phalcon\\Session\\Bag',
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'eventsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'eventsManager',
             '_definition' => 'Phalcon\\Events\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'transactionManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'transactionManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'assets' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'assets',
             '_definition' => 'Phalcon\\Assets\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'config' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'config',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
          )),
          'logger' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'logger',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
          'viewCache' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'viewCache',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'view' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'view',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
          )),
          'db' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'db',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
        ),
         '_sharedInstances' => 
        array (
          'config' => 
          Phalcon\Config\Adapter\Ini::__set_state(array(
             'database' => 
            Phalcon\Config::__set_state(array(
               'host' => 'localhost',
               'dbname' => 'phalcon',
               'username' => 'pgsql',
               'password' => 'secret',
            )),
             'application' => 
            Phalcon\Config::__set_state(array(
               'appDir' => '/var/www/dev/app/../app/',
               'controllersDir' => '/var/www/dev/app/../app/controllers/',
               'modelsDir' => '/var/www/dev/app/../app/models/',
               'migrationsDir' => '/var/www/dev/app/../app/migrations/',
               'viewsDir' => '/var/www/dev/app/../app/views/',
               'pluginsDir' => '/var/www/dev/app/../app/plugins/',
               'libraryDir' => '/var/www/dev/app/../app/library/',
               'utilsDir' => '/var/www/dev/app/../app/utils/',
               'logPath' => '/var/www/dev/app/../logs/debug.log',
               'cacheDir' => '/var/www/dev/app/../cache/',
               'dataDir' => '/var/www/dev/app/../data/',
            )),
          )),
          'router' => 
          Phalcon\Mvc\Router::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_uriSource' => NULL,
             '_namespace' => NULL,
             '_module' => NULL,
             '_controller' => 'api-users',
             '_action' => 'index',
             '_params' => 
            array (
            ),
             '_routes' => 
            array (
              0 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/',
                 '_compiledPattern' => '/',
                 '_paths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 0,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              1 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/login',
                 '_compiledPattern' => '/api/login',
                 '_paths' => 
                array (
                  'controller' => 'api-login',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 1,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              2 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
            ),
             '_matchedRoute' => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/users',
               '_compiledPattern' => '/api/users',
               '_paths' => 
              array (
                'controller' => 'api-users',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 2,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
             '_matches' => NULL,
             '_wasMatched' => true,
             '_defaultNamespace' => NULL,
             '_defaultModule' => NULL,
             '_defaultController' => 'index',
             '_defaultAction' => 'index',
             '_defaultParams' => 
            array (
            ),
             '_removeExtraSlashes' => true,
             '_notFoundPaths' => 
            array (
              'controller' => 'index',
              'action' => 'index',
            ),
             '_keyRouteNames' => 
            array (
            ),
             '_keyRouteIds' => 
            array (
            ),
          )),
          'view' => 
          Phalcon\Mvc\View::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_options' => 
            array (
            ),
             '_basePath' => '',
             '_content' => NULL,
             '_renderLevel' => 5,
             '_currentRenderLevel' => 0,
             '_disabledLevels' => NULL,
             '_viewParams' => 
            array (
            ),
             '_layout' => NULL,
             '_layoutsDir' => '',
             '_partialsDir' => '',
             '_viewsDirs' => '/var/www/dev/app/../app/views/',
             '_templatesBefore' => 
            array (
            ),
             '_templatesAfter' => 
            array (
            ),
             '_engines' => false,
             '_registeredEngines' => NULL,
             '_mainView' => 'index',
             '_controllerName' => NULL,
             '_actionName' => NULL,
             '_params' => NULL,
             '_pickView' => NULL,
             '_cache' => NULL,
             '_cacheLevel' => 0,
             '_activeRenderPaths' => NULL,
             '_disabled' => false,
          )),
          'dispatcher' => 
          Phalcon\Mvc\Dispatcher::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => 
            Phalcon\Events\Manager::__set_state(array(
               '_events' => 
              array (
                'dispatch:beforeExecuteRoute' => 
                array (
                  0 => 
                  SecurityPlugin::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                  )),
                ),
              ),
               '_collect' => false,
               '_enablePriorities' => false,
               '_responses' => NULL,
            )),
             '_activeHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_finished' => true,
             '_forwarded' => false,
             '_moduleName' => '',
             '_namespaceName' => NULL,
             '_handlerName' => 'api-users',
             '_actionName' => 'index',
             '_params' => 
            array (
            ),
             '_returnedValue' => NULL,
             '_lastHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_defaultNamespace' => NULL,
             '_actionSuffix' => 'Action',
             '_previousNamespaceName' => NULL,
             '_previousHandlerName' => NULL,
             '_previousActionName' => NULL,
             '_modelBinding' => false,
             '_modelBinder' => NULL,
             '_isControllerInitialize' => false,
             '_handlerSuffix' => 'Controller',
             '_defaultHandler' => 'index',
             '_defaultAction' => 'index',
          )),
          'ApiUsersController' => 
          ApiUsersController::__set_state(array(
             'invalidRequest' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32600,
                'message' => 'Invalid Request',
              ),
              'id' => NULL,
            ),
             'parseError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32700,
                'message' => 'Parse error',
              ),
              'id' => NULL,
            ),
             'methodNotFound' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32601,
                'message' => 'Method not found',
              ),
              'id' => 1,
            ),
             'internalError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32603,
                'message' => 'Internal error',
              ),
              'id' => 0,
            ),
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
             'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
          )),
          'request' => 
          Phalcon\Http\Request::__set_state(array(
             '_dependencyInjector' => NULL,
             '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
             '_filter' => NULL,
             '_putCache' => NULL,
             '_httpMethodParameterOverride' => false,
             '_strictHostCheck' => false,
          )),
          'logger' => 
          Phalcon\Logger\Adapter\File::__set_state(array(
             '_transaction' => false,
             '_queue' => 
            array (
            ),
             '_formatter' => 
            Phalcon\Logger\Formatter\Line::__set_state(array(
               '_dateFormat' => 'D, d M y H:i:s O',
               '_format' => '[%date%][%type%] %message%',
            )),
             '_logLevel' => 9,
             '_fileHandler' => NULL,
             '_path' => '/var/www/dev/app/../logs/debug.log',
             '_options' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Mvc\Model\Manager::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_customEventsManager' => NULL,
             '_readConnectionServices' => NULL,
             '_writeConnectionServices' => NULL,
             '_aliases' => NULL,
             '_modelVisibility' => 
            array (
            ),
             '_hasMany' => NULL,
             '_hasManySingle' => NULL,
             '_hasOne' => NULL,
             '_hasOneSingle' => NULL,
             '_belongsTo' => NULL,
             '_belongsToSingle' => NULL,
             '_hasManyToMany' => NULL,
             '_hasManyToManySingle' => NULL,
             '_initialized' => 
            array (
              'user' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
            ),
             '_prefix' => '',
             '_sources' => 
            array (
              'user' => 'user',
            ),
             '_schemas' => NULL,
             '_behaviors' => NULL,
             '_lastInitialized' => 
            User::__set_state(array(
               'id' => NULL,
               'name' => NULL,
               'password' => NULL,
               'gecos' => NULL,
               'superuser' => NULL,
               '_dependencyInjector' => NULL,
               '_modelsManager' => NULL,
               '_modelsMetaData' => NULL,
               '_errorMessages' => NULL,
               '_operationMade' => 0,
               '_dirtyState' => 1,
               '_transaction' => NULL,
               '_uniqueKey' => NULL,
               '_uniqueParams' => NULL,
               '_uniqueTypes' => NULL,
               '_skipped' => NULL,
               '_related' => NULL,
               '_snapshot' => NULL,
               '_oldSnapshot' => 
              array (
              ),
            )),
             '_lastQuery' => NULL,
             '_reusable' => NULL,
             '_keepSnapshots' => NULL,
             '_dynamicUpdate' => NULL,
             '_namespaceAliases' => NULL,
          )),
          'modelsMetadata' => 
          Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
             '_dependencyInjector' => NULL,
             '_strategy' => 
            Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
            )),
             '_columnMap' => 
            array (
              'user' => 
              array (
                0 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
                1 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
              ),
            ),
             '_metaData' => 
            array (
              'user-user' => 
              array (
                0 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                  4 => 'superuser',
                ),
                1 => 
                array (
                  0 => 'id',
                ),
                2 => 
                array (
                  0 => 'name',
                  1 => 'gecos',
                  2 => 'password',
                  3 => 'superuser',
                ),
                3 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                ),
                4 => 
                array (
                  'id' => 0,
                  'name' => 6,
                  'gecos' => 6,
                  'password' => 6,
                  'superuser' => 8,
                ),
                5 => 
                array (
                  'id' => true,
                ),
                8 => 'id',
                9 => 
                array (
                  'id' => 1,
                  'name' => 2,
                  'gecos' => 2,
                  'password' => 2,
                  'superuser' => 5,
                ),
                10 => 
                array (
                ),
                11 => 
                array (
                ),
                12 => 
                array (
                  'superuser' => NULL,
                ),
                13 => 
                array (
                ),
              ),
            ),
          )),
          'db' => 
          Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
             '_eventsManager' => NULL,
             '_descriptor' => 
            array (
              'host' => 'localhost',
              'username' => 'pgsql',
              'password' => 'secret',
              'dbname' => 'phalcon',
            ),
             '_dialect' => 
            Phalcon\Db\Dialect\Postgresql::__set_state(array(
               '_customFunctions' => NULL,
               '_escapeChar' => '"',
            )),
             '_connectionId' => 0,
             '_sqlStatement' => NULL,
             '_sqlVariables' => NULL,
             '_sqlBindTypes' => NULL,
             '_transactionLevel' => 0,
             '_transactionsWithSavepoints' => false,
             '_pdo' => 
            PDO::__set_state(array(
            )),
             '_affectedRows' => NULL,
             '_type' => 'pgsql',
             '_dialectType' => 'postgresql',
          )),
        ),
         '_freshInstance' => false,
         '_eventsManager' => NULL,
      )),
       '_modelsManager' => 
      Phalcon\Mvc\Model\Manager::__set_state(array(
         '_dependencyInjector' => 
        Phalcon\Di\FactoryDefault::__set_state(array(
           '_services' => 
          array (
            'router' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'router',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
            )),
            'dispatcher' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'dispatcher',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
            )),
            'url' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'url',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'modelsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'modelsMetadata' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsMetadata',
               '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
            )),
            'response' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'response',
               '_definition' => 'Phalcon\\Http\\Response',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'cookies' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'cookies',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'request' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'request',
               '_definition' => 'Phalcon\\Http\\Request',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
            )),
            'filter' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'filter',
               '_definition' => 'Phalcon\\Filter',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'escaper' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'escaper',
               '_definition' => 'Phalcon\\Escaper',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'security' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'security',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'crypt' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'crypt',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'annotations' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'annotations',
               '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flash' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flash',
               '_definition' => 'Phalcon\\Flash\\Direct',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flashSession' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flashSession',
               '_definition' => 'Phalcon\\Flash\\Session',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'tag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'tag',
               '_definition' => 'Phalcon\\Tag',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'session' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'session',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'sessionBag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'sessionBag',
               '_definition' => 'Phalcon\\Session\\Bag',
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'eventsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'eventsManager',
               '_definition' => 'Phalcon\\Events\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'transactionManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'transactionManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'assets' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'assets',
               '_definition' => 'Phalcon\\Assets\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'config' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'config',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
            )),
            'logger' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'logger',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'viewCache' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'viewCache',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'view' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'view',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
            )),
            'db' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'db',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
          ),
           '_sharedInstances' => 
          array (
            'config' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
            'router' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
            'view' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
            'dispatcher' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
            'ApiUsersController' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
            'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
            'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
            'modelsManager' => NULL,
            'modelsMetadata' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
            'db' => 
            Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
               '_eventsManager' => NULL,
               '_descriptor' => 
              array (
                'host' => 'localhost',
                'username' => 'pgsql',
                'password' => 'secret',
                'dbname' => 'phalcon',
              ),
               '_dialect' => 
              Phalcon\Db\Dialect\Postgresql::__set_state(array(
                 '_customFunctions' => NULL,
                 '_escapeChar' => '"',
              )),
               '_connectionId' => 0,
               '_sqlStatement' => NULL,
               '_sqlVariables' => NULL,
               '_sqlBindTypes' => NULL,
               '_transactionLevel' => 0,
               '_transactionsWithSavepoints' => false,
               '_pdo' => 
              PDO::__set_state(array(
              )),
               '_affectedRows' => NULL,
               '_type' => 'pgsql',
               '_dialectType' => 'postgresql',
            )),
          ),
           '_freshInstance' => false,
           '_eventsManager' => NULL,
        )),
         '_eventsManager' => NULL,
         '_customEventsManager' => NULL,
         '_readConnectionServices' => NULL,
         '_writeConnectionServices' => NULL,
         '_aliases' => NULL,
         '_modelVisibility' => 
        array (
        ),
         '_hasMany' => NULL,
         '_hasManySingle' => NULL,
         '_hasOne' => NULL,
         '_hasOneSingle' => NULL,
         '_belongsTo' => NULL,
         '_belongsToSingle' => NULL,
         '_hasManyToMany' => NULL,
         '_hasManyToManySingle' => NULL,
         '_initialized' => 
        array (
          'user' => 
          User::__set_state(array(
             'id' => NULL,
             'name' => NULL,
             'password' => NULL,
             'gecos' => NULL,
             'superuser' => NULL,
             '_dependencyInjector' => 
            Phalcon\Di\FactoryDefault::__set_state(array(
               '_services' => 
              array (
                'router' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'router',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Router::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_uriSource' => NULL,
                     '_namespace' => NULL,
                     '_module' => NULL,
                     '_controller' => 'api-users',
                     '_action' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_routes' => 
                    array (
                      0 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/',
                         '_compiledPattern' => '/',
                         '_paths' => 
                        array (
                          'controller' => 'index',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 0,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      1 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/login',
                         '_compiledPattern' => '/api/login',
                         '_paths' => 
                        array (
                          'controller' => 'api-login',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 1,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      2 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/users',
                         '_compiledPattern' => '/api/users',
                         '_paths' => 
                        array (
                          'controller' => 'api-users',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 2,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                    ),
                     '_matchedRoute' => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                     '_matches' => NULL,
                     '_wasMatched' => true,
                     '_defaultNamespace' => NULL,
                     '_defaultModule' => NULL,
                     '_defaultController' => 'index',
                     '_defaultAction' => 'index',
                     '_defaultParams' => 
                    array (
                    ),
                     '_removeExtraSlashes' => true,
                     '_notFoundPaths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_keyRouteNames' => 
                    array (
                    ),
                     '_keyRouteIds' => 
                    array (
                    ),
                  )),
                )),
                'dispatcher' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'dispatcher',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Dispatcher::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => 
                    Phalcon\Events\Manager::__set_state(array(
                       '_events' => 
                      array (
                        'dispatch:beforeExecuteRoute' => 
                        array (
                          0 => 
                          SecurityPlugin::__set_state(array(
                             '_dependencyInjector' => NULL,
                             '_eventsManager' => NULL,
                          )),
                        ),
                      ),
                       '_collect' => false,
                       '_enablePriorities' => false,
                       '_responses' => NULL,
                    )),
                     '_activeHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_finished' => true,
                     '_forwarded' => false,
                     '_moduleName' => '',
                     '_namespaceName' => NULL,
                     '_handlerName' => 'api-users',
                     '_actionName' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_returnedValue' => NULL,
                     '_lastHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_defaultNamespace' => NULL,
                     '_actionSuffix' => 'Action',
                     '_previousNamespaceName' => NULL,
                     '_previousHandlerName' => NULL,
                     '_previousActionName' => NULL,
                     '_modelBinding' => false,
                     '_modelBinder' => NULL,
                     '_isControllerInitialize' => false,
                     '_handlerSuffix' => 'Controller',
                     '_defaultHandler' => 'index',
                     '_defaultAction' => 'index',
                  )),
                )),
                'url' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'url',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'modelsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'modelsMetadata' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsMetadata',
                   '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_strategy' => 
                    Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                    )),
                     '_columnMap' => 
                    array (
                      'user' => 
                      array (
                        0 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                        1 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                      ),
                    ),
                     '_metaData' => 
                    array (
                      'user-user' => 
                      array (
                        0 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                          4 => 'superuser',
                        ),
                        1 => 
                        array (
                          0 => 'id',
                        ),
                        2 => 
                        array (
                          0 => 'name',
                          1 => 'gecos',
                          2 => 'password',
                          3 => 'superuser',
                        ),
                        3 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                        ),
                        4 => 
                        array (
                          'id' => 0,
                          'name' => 6,
                          'gecos' => 6,
                          'password' => 6,
                          'superuser' => 8,
                        ),
                        5 => 
                        array (
                          'id' => true,
                        ),
                        8 => 'id',
                        9 => 
                        array (
                          'id' => 1,
                          'name' => 2,
                          'gecos' => 2,
                          'password' => 2,
                          'superuser' => 5,
                        ),
                        10 => 
                        array (
                        ),
                        11 => 
                        array (
                        ),
                        12 => 
                        array (
                          'superuser' => NULL,
                        ),
                        13 => 
                        array (
                        ),
                      ),
                    ),
                  )),
                )),
                'response' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'response',
                   '_definition' => 'Phalcon\\Http\\Response',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'cookies' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'cookies',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'request' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'request',
                   '_definition' => 'Phalcon\\Http\\Request',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                )),
                'filter' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'filter',
                   '_definition' => 'Phalcon\\Filter',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'escaper' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'escaper',
                   '_definition' => 'Phalcon\\Escaper',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'security' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'security',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'crypt' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'crypt',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'annotations' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'annotations',
                   '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flash' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flash',
                   '_definition' => 'Phalcon\\Flash\\Direct',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flashSession' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flashSession',
                   '_definition' => 'Phalcon\\Flash\\Session',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'tag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'tag',
                   '_definition' => 'Phalcon\\Tag',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'session' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'session',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'sessionBag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'sessionBag',
                   '_definition' => 'Phalcon\\Session\\Bag',
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'eventsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'eventsManager',
                   '_definition' => 'Phalcon\\Events\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'transactionManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'transactionManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'assets' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'assets',
                   '_definition' => 'Phalcon\\Assets\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'config' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'config',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Config\Adapter\Ini::__set_state(array(
                     'database' => 
                    Phalcon\Config::__set_state(array(
                       'host' => 'localhost',
                       'dbname' => 'phalcon',
                       'username' => 'pgsql',
                       'password' => 'secret',
                    )),
                     'application' => 
                    Phalcon\Config::__set_state(array(
                       'appDir' => '/var/www/dev/app/../app/',
                       'controllersDir' => '/var/www/dev/app/../app/controllers/',
                       'modelsDir' => '/var/www/dev/app/../app/models/',
                       'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                       'viewsDir' => '/var/www/dev/app/../app/views/',
                       'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                       'libraryDir' => '/var/www/dev/app/../app/library/',
                       'utilsDir' => '/var/www/dev/app/../app/utils/',
                       'logPath' => '/var/www/dev/app/../logs/debug.log',
                       'cacheDir' => '/var/www/dev/app/../cache/',
                       'dataDir' => '/var/www/dev/app/../data/',
                    )),
                  )),
                )),
                'logger' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'logger',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'viewCache' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'viewCache',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'view' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'view',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\View::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_options' => 
                    array (
                    ),
                     '_basePath' => '',
                     '_content' => NULL,
                     '_renderLevel' => 5,
                     '_currentRenderLevel' => 0,
                     '_disabledLevels' => NULL,
                     '_viewParams' => 
                    array (
                    ),
                     '_layout' => NULL,
                     '_layoutsDir' => '',
                     '_partialsDir' => '',
                     '_viewsDirs' => '/var/www/dev/app/../app/views/',
                     '_templatesBefore' => 
                    array (
                    ),
                     '_templatesAfter' => 
                    array (
                    ),
                     '_engines' => false,
                     '_registeredEngines' => NULL,
                     '_mainView' => 'index',
                     '_controllerName' => NULL,
                     '_actionName' => NULL,
                     '_params' => NULL,
                     '_pickView' => NULL,
                     '_cache' => NULL,
                     '_cacheLevel' => 0,
                     '_activeRenderPaths' => NULL,
                     '_disabled' => false,
                  )),
                )),
                'db' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'db',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
              ),
               '_sharedInstances' => 
              array (
                'config' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
                'router' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
                'view' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
                'dispatcher' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
                'ApiUsersController' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
                'modelsManager' => NULL,
                'modelsMetadata' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
                'db' => 
                Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                   '_eventsManager' => NULL,
                   '_descriptor' => 
                  array (
                    'host' => 'localhost',
                    'username' => 'pgsql',
                    'password' => 'secret',
                    'dbname' => 'phalcon',
                  ),
                   '_dialect' => 
                  Phalcon\Db\Dialect\Postgresql::__set_state(array(
                     '_customFunctions' => NULL,
                     '_escapeChar' => '"',
                  )),
                   '_connectionId' => 0,
                   '_sqlStatement' => NULL,
                   '_sqlVariables' => NULL,
                   '_sqlBindTypes' => NULL,
                   '_transactionLevel' => 0,
                   '_transactionsWithSavepoints' => false,
                   '_pdo' => 
                  PDO::__set_state(array(
                  )),
                   '_affectedRows' => NULL,
                   '_type' => 'pgsql',
                   '_dialectType' => 'postgresql',
                )),
              ),
               '_freshInstance' => false,
               '_eventsManager' => NULL,
            )),
             '_modelsManager' => NULL,
             '_modelsMetaData' => NULL,
             '_errorMessages' => NULL,
             '_operationMade' => 0,
             '_dirtyState' => 1,
             '_transaction' => NULL,
             '_uniqueKey' => NULL,
             '_uniqueParams' => NULL,
             '_uniqueTypes' => NULL,
             '_skipped' => NULL,
             '_related' => NULL,
             '_snapshot' => NULL,
             '_oldSnapshot' => 
            array (
            ),
          )),
        ),
         '_prefix' => '',
         '_sources' => 
        array (
          'user' => 'user',
        ),
         '_schemas' => NULL,
         '_behaviors' => NULL,
         '_lastInitialized' => 
        User::__set_state(array(
           'id' => NULL,
           'name' => NULL,
           'password' => NULL,
           'gecos' => NULL,
           'superuser' => NULL,
           '_dependencyInjector' => 
          Phalcon\Di\FactoryDefault::__set_state(array(
             '_services' => 
            array (
              'router' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'router',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
              )),
              'dispatcher' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'dispatcher',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
              )),
              'url' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'url',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'modelsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'modelsMetadata' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsMetadata',
                 '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
              )),
              'response' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'response',
                 '_definition' => 'Phalcon\\Http\\Response',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'cookies' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'cookies',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'request' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'request',
                 '_definition' => 'Phalcon\\Http\\Request',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
              )),
              'filter' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'filter',
                 '_definition' => 'Phalcon\\Filter',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'escaper' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'escaper',
                 '_definition' => 'Phalcon\\Escaper',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'security' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'security',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'crypt' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'crypt',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'annotations' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'annotations',
                 '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flash' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flash',
                 '_definition' => 'Phalcon\\Flash\\Direct',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flashSession' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flashSession',
                 '_definition' => 'Phalcon\\Flash\\Session',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'tag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'tag',
                 '_definition' => 'Phalcon\\Tag',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'session' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'session',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'sessionBag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'sessionBag',
                 '_definition' => 'Phalcon\\Session\\Bag',
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'eventsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'eventsManager',
                 '_definition' => 'Phalcon\\Events\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'transactionManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'transactionManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'assets' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'assets',
                 '_definition' => 'Phalcon\\Assets\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'config' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'config',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
              )),
              'logger' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'logger',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'viewCache' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'viewCache',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'view' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'view',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
              )),
              'db' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'db',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
            ),
             '_sharedInstances' => 
            array (
              'config' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
              'router' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
              'view' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
              'dispatcher' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
              'ApiUsersController' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
              'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"1c32fd32-6a84-4736-8d42-66a804c74e23"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
              'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
              'modelsManager' => NULL,
              'modelsMetadata' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
              'db' => 
              Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                 '_eventsManager' => NULL,
                 '_descriptor' => 
                array (
                  'host' => 'localhost',
                  'username' => 'pgsql',
                  'password' => 'secret',
                  'dbname' => 'phalcon',
                ),
                 '_dialect' => 
                Phalcon\Db\Dialect\Postgresql::__set_state(array(
                   '_customFunctions' => NULL,
                   '_escapeChar' => '"',
                )),
                 '_connectionId' => 0,
                 '_sqlStatement' => NULL,
                 '_sqlVariables' => NULL,
                 '_sqlBindTypes' => NULL,
                 '_transactionLevel' => 0,
                 '_transactionsWithSavepoints' => false,
                 '_pdo' => 
                PDO::__set_state(array(
                )),
                 '_affectedRows' => NULL,
                 '_type' => 'pgsql',
                 '_dialectType' => 'postgresql',
              )),
            ),
             '_freshInstance' => false,
             '_eventsManager' => NULL,
          )),
           '_modelsManager' => NULL,
           '_modelsMetaData' => NULL,
           '_errorMessages' => NULL,
           '_operationMade' => 0,
           '_dirtyState' => 1,
           '_transaction' => NULL,
           '_uniqueKey' => NULL,
           '_uniqueParams' => NULL,
           '_uniqueTypes' => NULL,
           '_skipped' => NULL,
           '_related' => NULL,
           '_snapshot' => NULL,
           '_oldSnapshot' => 
          array (
          ),
        )),
         '_lastQuery' => NULL,
         '_reusable' => NULL,
         '_keepSnapshots' => NULL,
         '_dynamicUpdate' => NULL,
         '_namespaceAliases' => NULL,
      )),
       '_modelsMetaData' => NULL,
       '_errorMessages' => NULL,
       '_operationMade' => 0,
       '_dirtyState' => 1,
       '_transaction' => NULL,
       '_uniqueKey' => NULL,
       '_uniqueParams' => NULL,
       '_uniqueTypes' => NULL,
       '_skipped' => NULL,
       '_related' => NULL,
       '_snapshot' => NULL,
       '_oldSnapshot' => 
      array (
      ),
    )),
     '_columnMap' => 
    array (
      'id' => 'id',
      'name' => 'name',
      'password' => 'password',
      'gecos' => 'gecos',
      'superuser' => 'superuser',
    ),
     '_keepSnapshots' => false,
  )),
)
[Mon, 17 Dec 18 23:31:43 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
   'id' => '7162095c-26c5-47ee-85c0-507b04a6a05b',
))
[Mon, 17 Dec 18 23:31:43 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Resultset\Simple::__set_state(array(
     '_result' => 
    Phalcon\Db\Result\Pdo::__set_state(array(
       '_connection' => 
      Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
         '_eventsManager' => NULL,
         '_descriptor' => 
        array (
          'host' => 'localhost',
          'username' => 'pgsql',
          'password' => 'secret',
          'dbname' => 'phalcon',
        ),
         '_dialect' => 
        Phalcon\Db\Dialect\Postgresql::__set_state(array(
           '_customFunctions' => NULL,
           '_escapeChar' => '"',
        )),
         '_connectionId' => 0,
         '_sqlStatement' => NULL,
         '_sqlVariables' => NULL,
         '_sqlBindTypes' => NULL,
         '_transactionLevel' => 0,
         '_transactionsWithSavepoints' => false,
         '_pdo' => 
        PDO::__set_state(array(
        )),
         '_affectedRows' => NULL,
         '_type' => 'pgsql',
         '_dialectType' => 'postgresql',
      )),
       '_result' => NULL,
       '_fetchMode' => 2,
       '_pdoStatement' => 
      PDOStatement::__set_state(array(
         'queryString' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
      )),
       '_sqlStatement' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
       '_bindParams' => NULL,
       '_bindTypes' => NULL,
       '_rowCount' => 1,
    )),
     '_cache' => NULL,
     '_isFresh' => true,
     '_pointer' => 0,
     '_count' => 1,
     '_activeRow' => NULL,
     '_rows' => 
    array (
      0 => 
      array (
        'id' => 3,
        'name' => 'qwerty',
        'gecos' => 'Luppolo Kuppolo',
        'password' => '12345',
        'superuser' => true,
      ),
    ),
     '_row' => NULL,
     '_errorMessages' => NULL,
     '_hydrateMode' => 0,
     '_model' => 
    User::__set_state(array(
       'id' => NULL,
       'name' => NULL,
       'password' => NULL,
       'gecos' => NULL,
       'superuser' => NULL,
       '_dependencyInjector' => 
      Phalcon\Di\FactoryDefault::__set_state(array(
         '_services' => 
        array (
          'router' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'router',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
          )),
          'dispatcher' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'dispatcher',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
          )),
          'url' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'url',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\Manager::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_customEventsManager' => NULL,
               '_readConnectionServices' => NULL,
               '_writeConnectionServices' => NULL,
               '_aliases' => NULL,
               '_modelVisibility' => 
              array (
              ),
               '_hasMany' => NULL,
               '_hasManySingle' => NULL,
               '_hasOne' => NULL,
               '_hasOneSingle' => NULL,
               '_belongsTo' => NULL,
               '_belongsToSingle' => NULL,
               '_hasManyToMany' => NULL,
               '_hasManyToManySingle' => NULL,
               '_initialized' => 
              array (
                'user' => 
                User::__set_state(array(
                   'id' => NULL,
                   'name' => NULL,
                   'password' => NULL,
                   'gecos' => NULL,
                   'superuser' => NULL,
                   '_dependencyInjector' => NULL,
                   '_modelsManager' => NULL,
                   '_modelsMetaData' => NULL,
                   '_errorMessages' => NULL,
                   '_operationMade' => 0,
                   '_dirtyState' => 1,
                   '_transaction' => NULL,
                   '_uniqueKey' => NULL,
                   '_uniqueParams' => NULL,
                   '_uniqueTypes' => NULL,
                   '_skipped' => NULL,
                   '_related' => NULL,
                   '_snapshot' => NULL,
                   '_oldSnapshot' => 
                  array (
                  ),
                )),
              ),
               '_prefix' => '',
               '_sources' => 
              array (
                'user' => 'user',
              ),
               '_schemas' => NULL,
               '_behaviors' => NULL,
               '_lastInitialized' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
               '_lastQuery' => NULL,
               '_reusable' => NULL,
               '_keepSnapshots' => NULL,
               '_dynamicUpdate' => NULL,
               '_namespaceAliases' => NULL,
            )),
          )),
          'modelsMetadata' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsMetadata',
             '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
          )),
          'response' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'response',
             '_definition' => 'Phalcon\\Http\\Response',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'cookies' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'cookies',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'request' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'request',
             '_definition' => 'Phalcon\\Http\\Request',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
          )),
          'filter' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'filter',
             '_definition' => 'Phalcon\\Filter',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'escaper' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'escaper',
             '_definition' => 'Phalcon\\Escaper',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'security' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'security',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'crypt' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'crypt',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'annotations' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'annotations',
             '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flash' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flash',
             '_definition' => 'Phalcon\\Flash\\Direct',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flashSession' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flashSession',
             '_definition' => 'Phalcon\\Flash\\Session',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'tag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'tag',
             '_definition' => 'Phalcon\\Tag',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'session' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'session',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'sessionBag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'sessionBag',
             '_definition' => 'Phalcon\\Session\\Bag',
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'eventsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'eventsManager',
             '_definition' => 'Phalcon\\Events\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'transactionManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'transactionManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'assets' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'assets',
             '_definition' => 'Phalcon\\Assets\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'config' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'config',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
          )),
          'logger' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'logger',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
          'viewCache' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'viewCache',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'view' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'view',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
          )),
          'db' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'db',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
        ),
         '_sharedInstances' => 
        array (
          'config' => 
          Phalcon\Config\Adapter\Ini::__set_state(array(
             'database' => 
            Phalcon\Config::__set_state(array(
               'host' => 'localhost',
               'dbname' => 'phalcon',
               'username' => 'pgsql',
               'password' => 'secret',
            )),
             'application' => 
            Phalcon\Config::__set_state(array(
               'appDir' => '/var/www/dev/app/../app/',
               'controllersDir' => '/var/www/dev/app/../app/controllers/',
               'modelsDir' => '/var/www/dev/app/../app/models/',
               'migrationsDir' => '/var/www/dev/app/../app/migrations/',
               'viewsDir' => '/var/www/dev/app/../app/views/',
               'pluginsDir' => '/var/www/dev/app/../app/plugins/',
               'libraryDir' => '/var/www/dev/app/../app/library/',
               'utilsDir' => '/var/www/dev/app/../app/utils/',
               'logPath' => '/var/www/dev/app/../logs/debug.log',
               'cacheDir' => '/var/www/dev/app/../cache/',
               'dataDir' => '/var/www/dev/app/../data/',
            )),
          )),
          'router' => 
          Phalcon\Mvc\Router::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_uriSource' => NULL,
             '_namespace' => NULL,
             '_module' => NULL,
             '_controller' => 'api-users',
             '_action' => 'index',
             '_params' => 
            array (
            ),
             '_routes' => 
            array (
              0 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/',
                 '_compiledPattern' => '/',
                 '_paths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 0,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              1 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/login',
                 '_compiledPattern' => '/api/login',
                 '_paths' => 
                array (
                  'controller' => 'api-login',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 1,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              2 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
            ),
             '_matchedRoute' => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/users',
               '_compiledPattern' => '/api/users',
               '_paths' => 
              array (
                'controller' => 'api-users',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 2,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
             '_matches' => NULL,
             '_wasMatched' => true,
             '_defaultNamespace' => NULL,
             '_defaultModule' => NULL,
             '_defaultController' => 'index',
             '_defaultAction' => 'index',
             '_defaultParams' => 
            array (
            ),
             '_removeExtraSlashes' => true,
             '_notFoundPaths' => 
            array (
              'controller' => 'index',
              'action' => 'index',
            ),
             '_keyRouteNames' => 
            array (
            ),
             '_keyRouteIds' => 
            array (
            ),
          )),
          'view' => 
          Phalcon\Mvc\View::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_options' => 
            array (
            ),
             '_basePath' => '',
             '_content' => NULL,
             '_renderLevel' => 5,
             '_currentRenderLevel' => 0,
             '_disabledLevels' => NULL,
             '_viewParams' => 
            array (
            ),
             '_layout' => NULL,
             '_layoutsDir' => '',
             '_partialsDir' => '',
             '_viewsDirs' => '/var/www/dev/app/../app/views/',
             '_templatesBefore' => 
            array (
            ),
             '_templatesAfter' => 
            array (
            ),
             '_engines' => false,
             '_registeredEngines' => NULL,
             '_mainView' => 'index',
             '_controllerName' => NULL,
             '_actionName' => NULL,
             '_params' => NULL,
             '_pickView' => NULL,
             '_cache' => NULL,
             '_cacheLevel' => 0,
             '_activeRenderPaths' => NULL,
             '_disabled' => false,
          )),
          'dispatcher' => 
          Phalcon\Mvc\Dispatcher::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => 
            Phalcon\Events\Manager::__set_state(array(
               '_events' => 
              array (
                'dispatch:beforeExecuteRoute' => 
                array (
                  0 => 
                  SecurityPlugin::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                  )),
                ),
              ),
               '_collect' => false,
               '_enablePriorities' => false,
               '_responses' => NULL,
            )),
             '_activeHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_finished' => true,
             '_forwarded' => false,
             '_moduleName' => '',
             '_namespaceName' => NULL,
             '_handlerName' => 'api-users',
             '_actionName' => 'index',
             '_params' => 
            array (
            ),
             '_returnedValue' => NULL,
             '_lastHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_defaultNamespace' => NULL,
             '_actionSuffix' => 'Action',
             '_previousNamespaceName' => NULL,
             '_previousHandlerName' => NULL,
             '_previousActionName' => NULL,
             '_modelBinding' => false,
             '_modelBinder' => NULL,
             '_isControllerInitialize' => false,
             '_handlerSuffix' => 'Controller',
             '_defaultHandler' => 'index',
             '_defaultAction' => 'index',
          )),
          'ApiUsersController' => 
          ApiUsersController::__set_state(array(
             'invalidRequest' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32600,
                'message' => 'Invalid Request',
              ),
              'id' => NULL,
            ),
             'parseError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32700,
                'message' => 'Parse error',
              ),
              'id' => NULL,
            ),
             'methodNotFound' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32601,
                'message' => 'Method not found',
              ),
              'id' => 1,
            ),
             'internalError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32603,
                'message' => 'Internal error',
              ),
              'id' => 0,
            ),
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
             'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
          )),
          'request' => 
          Phalcon\Http\Request::__set_state(array(
             '_dependencyInjector' => NULL,
             '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
             '_filter' => NULL,
             '_putCache' => NULL,
             '_httpMethodParameterOverride' => false,
             '_strictHostCheck' => false,
          )),
          'logger' => 
          Phalcon\Logger\Adapter\File::__set_state(array(
             '_transaction' => false,
             '_queue' => 
            array (
            ),
             '_formatter' => 
            Phalcon\Logger\Formatter\Line::__set_state(array(
               '_dateFormat' => 'D, d M y H:i:s O',
               '_format' => '[%date%][%type%] %message%',
            )),
             '_logLevel' => 9,
             '_fileHandler' => NULL,
             '_path' => '/var/www/dev/app/../logs/debug.log',
             '_options' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Mvc\Model\Manager::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_customEventsManager' => NULL,
             '_readConnectionServices' => NULL,
             '_writeConnectionServices' => NULL,
             '_aliases' => NULL,
             '_modelVisibility' => 
            array (
            ),
             '_hasMany' => NULL,
             '_hasManySingle' => NULL,
             '_hasOne' => NULL,
             '_hasOneSingle' => NULL,
             '_belongsTo' => NULL,
             '_belongsToSingle' => NULL,
             '_hasManyToMany' => NULL,
             '_hasManyToManySingle' => NULL,
             '_initialized' => 
            array (
              'user' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
            ),
             '_prefix' => '',
             '_sources' => 
            array (
              'user' => 'user',
            ),
             '_schemas' => NULL,
             '_behaviors' => NULL,
             '_lastInitialized' => 
            User::__set_state(array(
               'id' => NULL,
               'name' => NULL,
               'password' => NULL,
               'gecos' => NULL,
               'superuser' => NULL,
               '_dependencyInjector' => NULL,
               '_modelsManager' => NULL,
               '_modelsMetaData' => NULL,
               '_errorMessages' => NULL,
               '_operationMade' => 0,
               '_dirtyState' => 1,
               '_transaction' => NULL,
               '_uniqueKey' => NULL,
               '_uniqueParams' => NULL,
               '_uniqueTypes' => NULL,
               '_skipped' => NULL,
               '_related' => NULL,
               '_snapshot' => NULL,
               '_oldSnapshot' => 
              array (
              ),
            )),
             '_lastQuery' => NULL,
             '_reusable' => NULL,
             '_keepSnapshots' => NULL,
             '_dynamicUpdate' => NULL,
             '_namespaceAliases' => NULL,
          )),
          'modelsMetadata' => 
          Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
             '_dependencyInjector' => NULL,
             '_strategy' => 
            Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
            )),
             '_columnMap' => 
            array (
              'user' => 
              array (
                0 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
                1 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
              ),
            ),
             '_metaData' => 
            array (
              'user-user' => 
              array (
                0 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                  4 => 'superuser',
                ),
                1 => 
                array (
                  0 => 'id',
                ),
                2 => 
                array (
                  0 => 'name',
                  1 => 'gecos',
                  2 => 'password',
                  3 => 'superuser',
                ),
                3 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                ),
                4 => 
                array (
                  'id' => 0,
                  'name' => 6,
                  'gecos' => 6,
                  'password' => 6,
                  'superuser' => 8,
                ),
                5 => 
                array (
                  'id' => true,
                ),
                8 => 'id',
                9 => 
                array (
                  'id' => 1,
                  'name' => 2,
                  'gecos' => 2,
                  'password' => 2,
                  'superuser' => 5,
                ),
                10 => 
                array (
                ),
                11 => 
                array (
                ),
                12 => 
                array (
                  'superuser' => NULL,
                ),
                13 => 
                array (
                ),
              ),
            ),
          )),
          'db' => 
          Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
             '_eventsManager' => NULL,
             '_descriptor' => 
            array (
              'host' => 'localhost',
              'username' => 'pgsql',
              'password' => 'secret',
              'dbname' => 'phalcon',
            ),
             '_dialect' => 
            Phalcon\Db\Dialect\Postgresql::__set_state(array(
               '_customFunctions' => NULL,
               '_escapeChar' => '"',
            )),
             '_connectionId' => 0,
             '_sqlStatement' => NULL,
             '_sqlVariables' => NULL,
             '_sqlBindTypes' => NULL,
             '_transactionLevel' => 0,
             '_transactionsWithSavepoints' => false,
             '_pdo' => 
            PDO::__set_state(array(
            )),
             '_affectedRows' => NULL,
             '_type' => 'pgsql',
             '_dialectType' => 'postgresql',
          )),
        ),
         '_freshInstance' => false,
         '_eventsManager' => NULL,
      )),
       '_modelsManager' => 
      Phalcon\Mvc\Model\Manager::__set_state(array(
         '_dependencyInjector' => 
        Phalcon\Di\FactoryDefault::__set_state(array(
           '_services' => 
          array (
            'router' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'router',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
            )),
            'dispatcher' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'dispatcher',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
            )),
            'url' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'url',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'modelsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'modelsMetadata' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsMetadata',
               '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
            )),
            'response' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'response',
               '_definition' => 'Phalcon\\Http\\Response',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'cookies' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'cookies',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'request' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'request',
               '_definition' => 'Phalcon\\Http\\Request',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
            )),
            'filter' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'filter',
               '_definition' => 'Phalcon\\Filter',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'escaper' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'escaper',
               '_definition' => 'Phalcon\\Escaper',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'security' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'security',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'crypt' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'crypt',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'annotations' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'annotations',
               '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flash' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flash',
               '_definition' => 'Phalcon\\Flash\\Direct',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flashSession' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flashSession',
               '_definition' => 'Phalcon\\Flash\\Session',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'tag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'tag',
               '_definition' => 'Phalcon\\Tag',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'session' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'session',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'sessionBag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'sessionBag',
               '_definition' => 'Phalcon\\Session\\Bag',
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'eventsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'eventsManager',
               '_definition' => 'Phalcon\\Events\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'transactionManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'transactionManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'assets' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'assets',
               '_definition' => 'Phalcon\\Assets\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'config' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'config',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
            )),
            'logger' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'logger',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'viewCache' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'viewCache',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'view' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'view',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
            )),
            'db' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'db',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
          ),
           '_sharedInstances' => 
          array (
            'config' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
            'router' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
            'view' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
            'dispatcher' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
            'ApiUsersController' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
            'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
            'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
            'modelsManager' => NULL,
            'modelsMetadata' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
            'db' => 
            Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
               '_eventsManager' => NULL,
               '_descriptor' => 
              array (
                'host' => 'localhost',
                'username' => 'pgsql',
                'password' => 'secret',
                'dbname' => 'phalcon',
              ),
               '_dialect' => 
              Phalcon\Db\Dialect\Postgresql::__set_state(array(
                 '_customFunctions' => NULL,
                 '_escapeChar' => '"',
              )),
               '_connectionId' => 0,
               '_sqlStatement' => NULL,
               '_sqlVariables' => NULL,
               '_sqlBindTypes' => NULL,
               '_transactionLevel' => 0,
               '_transactionsWithSavepoints' => false,
               '_pdo' => 
              PDO::__set_state(array(
              )),
               '_affectedRows' => NULL,
               '_type' => 'pgsql',
               '_dialectType' => 'postgresql',
            )),
          ),
           '_freshInstance' => false,
           '_eventsManager' => NULL,
        )),
         '_eventsManager' => NULL,
         '_customEventsManager' => NULL,
         '_readConnectionServices' => NULL,
         '_writeConnectionServices' => NULL,
         '_aliases' => NULL,
         '_modelVisibility' => 
        array (
        ),
         '_hasMany' => NULL,
         '_hasManySingle' => NULL,
         '_hasOne' => NULL,
         '_hasOneSingle' => NULL,
         '_belongsTo' => NULL,
         '_belongsToSingle' => NULL,
         '_hasManyToMany' => NULL,
         '_hasManyToManySingle' => NULL,
         '_initialized' => 
        array (
          'user' => 
          User::__set_state(array(
             'id' => NULL,
             'name' => NULL,
             'password' => NULL,
             'gecos' => NULL,
             'superuser' => NULL,
             '_dependencyInjector' => 
            Phalcon\Di\FactoryDefault::__set_state(array(
               '_services' => 
              array (
                'router' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'router',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Router::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_uriSource' => NULL,
                     '_namespace' => NULL,
                     '_module' => NULL,
                     '_controller' => 'api-users',
                     '_action' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_routes' => 
                    array (
                      0 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/',
                         '_compiledPattern' => '/',
                         '_paths' => 
                        array (
                          'controller' => 'index',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 0,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      1 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/login',
                         '_compiledPattern' => '/api/login',
                         '_paths' => 
                        array (
                          'controller' => 'api-login',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 1,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      2 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/users',
                         '_compiledPattern' => '/api/users',
                         '_paths' => 
                        array (
                          'controller' => 'api-users',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 2,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                    ),
                     '_matchedRoute' => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                     '_matches' => NULL,
                     '_wasMatched' => true,
                     '_defaultNamespace' => NULL,
                     '_defaultModule' => NULL,
                     '_defaultController' => 'index',
                     '_defaultAction' => 'index',
                     '_defaultParams' => 
                    array (
                    ),
                     '_removeExtraSlashes' => true,
                     '_notFoundPaths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_keyRouteNames' => 
                    array (
                    ),
                     '_keyRouteIds' => 
                    array (
                    ),
                  )),
                )),
                'dispatcher' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'dispatcher',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Dispatcher::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => 
                    Phalcon\Events\Manager::__set_state(array(
                       '_events' => 
                      array (
                        'dispatch:beforeExecuteRoute' => 
                        array (
                          0 => 
                          SecurityPlugin::__set_state(array(
                             '_dependencyInjector' => NULL,
                             '_eventsManager' => NULL,
                          )),
                        ),
                      ),
                       '_collect' => false,
                       '_enablePriorities' => false,
                       '_responses' => NULL,
                    )),
                     '_activeHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_finished' => true,
                     '_forwarded' => false,
                     '_moduleName' => '',
                     '_namespaceName' => NULL,
                     '_handlerName' => 'api-users',
                     '_actionName' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_returnedValue' => NULL,
                     '_lastHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_defaultNamespace' => NULL,
                     '_actionSuffix' => 'Action',
                     '_previousNamespaceName' => NULL,
                     '_previousHandlerName' => NULL,
                     '_previousActionName' => NULL,
                     '_modelBinding' => false,
                     '_modelBinder' => NULL,
                     '_isControllerInitialize' => false,
                     '_handlerSuffix' => 'Controller',
                     '_defaultHandler' => 'index',
                     '_defaultAction' => 'index',
                  )),
                )),
                'url' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'url',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'modelsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'modelsMetadata' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsMetadata',
                   '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_strategy' => 
                    Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                    )),
                     '_columnMap' => 
                    array (
                      'user' => 
                      array (
                        0 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                        1 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                      ),
                    ),
                     '_metaData' => 
                    array (
                      'user-user' => 
                      array (
                        0 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                          4 => 'superuser',
                        ),
                        1 => 
                        array (
                          0 => 'id',
                        ),
                        2 => 
                        array (
                          0 => 'name',
                          1 => 'gecos',
                          2 => 'password',
                          3 => 'superuser',
                        ),
                        3 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                        ),
                        4 => 
                        array (
                          'id' => 0,
                          'name' => 6,
                          'gecos' => 6,
                          'password' => 6,
                          'superuser' => 8,
                        ),
                        5 => 
                        array (
                          'id' => true,
                        ),
                        8 => 'id',
                        9 => 
                        array (
                          'id' => 1,
                          'name' => 2,
                          'gecos' => 2,
                          'password' => 2,
                          'superuser' => 5,
                        ),
                        10 => 
                        array (
                        ),
                        11 => 
                        array (
                        ),
                        12 => 
                        array (
                          'superuser' => NULL,
                        ),
                        13 => 
                        array (
                        ),
                      ),
                    ),
                  )),
                )),
                'response' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'response',
                   '_definition' => 'Phalcon\\Http\\Response',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'cookies' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'cookies',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'request' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'request',
                   '_definition' => 'Phalcon\\Http\\Request',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                )),
                'filter' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'filter',
                   '_definition' => 'Phalcon\\Filter',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'escaper' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'escaper',
                   '_definition' => 'Phalcon\\Escaper',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'security' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'security',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'crypt' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'crypt',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'annotations' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'annotations',
                   '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flash' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flash',
                   '_definition' => 'Phalcon\\Flash\\Direct',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flashSession' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flashSession',
                   '_definition' => 'Phalcon\\Flash\\Session',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'tag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'tag',
                   '_definition' => 'Phalcon\\Tag',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'session' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'session',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'sessionBag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'sessionBag',
                   '_definition' => 'Phalcon\\Session\\Bag',
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'eventsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'eventsManager',
                   '_definition' => 'Phalcon\\Events\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'transactionManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'transactionManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'assets' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'assets',
                   '_definition' => 'Phalcon\\Assets\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'config' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'config',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Config\Adapter\Ini::__set_state(array(
                     'database' => 
                    Phalcon\Config::__set_state(array(
                       'host' => 'localhost',
                       'dbname' => 'phalcon',
                       'username' => 'pgsql',
                       'password' => 'secret',
                    )),
                     'application' => 
                    Phalcon\Config::__set_state(array(
                       'appDir' => '/var/www/dev/app/../app/',
                       'controllersDir' => '/var/www/dev/app/../app/controllers/',
                       'modelsDir' => '/var/www/dev/app/../app/models/',
                       'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                       'viewsDir' => '/var/www/dev/app/../app/views/',
                       'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                       'libraryDir' => '/var/www/dev/app/../app/library/',
                       'utilsDir' => '/var/www/dev/app/../app/utils/',
                       'logPath' => '/var/www/dev/app/../logs/debug.log',
                       'cacheDir' => '/var/www/dev/app/../cache/',
                       'dataDir' => '/var/www/dev/app/../data/',
                    )),
                  )),
                )),
                'logger' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'logger',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'viewCache' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'viewCache',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'view' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'view',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\View::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_options' => 
                    array (
                    ),
                     '_basePath' => '',
                     '_content' => NULL,
                     '_renderLevel' => 5,
                     '_currentRenderLevel' => 0,
                     '_disabledLevels' => NULL,
                     '_viewParams' => 
                    array (
                    ),
                     '_layout' => NULL,
                     '_layoutsDir' => '',
                     '_partialsDir' => '',
                     '_viewsDirs' => '/var/www/dev/app/../app/views/',
                     '_templatesBefore' => 
                    array (
                    ),
                     '_templatesAfter' => 
                    array (
                    ),
                     '_engines' => false,
                     '_registeredEngines' => NULL,
                     '_mainView' => 'index',
                     '_controllerName' => NULL,
                     '_actionName' => NULL,
                     '_params' => NULL,
                     '_pickView' => NULL,
                     '_cache' => NULL,
                     '_cacheLevel' => 0,
                     '_activeRenderPaths' => NULL,
                     '_disabled' => false,
                  )),
                )),
                'db' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'db',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
              ),
               '_sharedInstances' => 
              array (
                'config' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
                'router' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
                'view' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
                'dispatcher' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
                'ApiUsersController' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
                'modelsManager' => NULL,
                'modelsMetadata' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
                'db' => 
                Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                   '_eventsManager' => NULL,
                   '_descriptor' => 
                  array (
                    'host' => 'localhost',
                    'username' => 'pgsql',
                    'password' => 'secret',
                    'dbname' => 'phalcon',
                  ),
                   '_dialect' => 
                  Phalcon\Db\Dialect\Postgresql::__set_state(array(
                     '_customFunctions' => NULL,
                     '_escapeChar' => '"',
                  )),
                   '_connectionId' => 0,
                   '_sqlStatement' => NULL,
                   '_sqlVariables' => NULL,
                   '_sqlBindTypes' => NULL,
                   '_transactionLevel' => 0,
                   '_transactionsWithSavepoints' => false,
                   '_pdo' => 
                  PDO::__set_state(array(
                  )),
                   '_affectedRows' => NULL,
                   '_type' => 'pgsql',
                   '_dialectType' => 'postgresql',
                )),
              ),
               '_freshInstance' => false,
               '_eventsManager' => NULL,
            )),
             '_modelsManager' => NULL,
             '_modelsMetaData' => NULL,
             '_errorMessages' => NULL,
             '_operationMade' => 0,
             '_dirtyState' => 1,
             '_transaction' => NULL,
             '_uniqueKey' => NULL,
             '_uniqueParams' => NULL,
             '_uniqueTypes' => NULL,
             '_skipped' => NULL,
             '_related' => NULL,
             '_snapshot' => NULL,
             '_oldSnapshot' => 
            array (
            ),
          )),
        ),
         '_prefix' => '',
         '_sources' => 
        array (
          'user' => 'user',
        ),
         '_schemas' => NULL,
         '_behaviors' => NULL,
         '_lastInitialized' => 
        User::__set_state(array(
           'id' => NULL,
           'name' => NULL,
           'password' => NULL,
           'gecos' => NULL,
           'superuser' => NULL,
           '_dependencyInjector' => 
          Phalcon\Di\FactoryDefault::__set_state(array(
             '_services' => 
            array (
              'router' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'router',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
              )),
              'dispatcher' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'dispatcher',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
              )),
              'url' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'url',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'modelsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'modelsMetadata' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsMetadata',
                 '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
              )),
              'response' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'response',
                 '_definition' => 'Phalcon\\Http\\Response',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'cookies' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'cookies',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'request' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'request',
                 '_definition' => 'Phalcon\\Http\\Request',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
              )),
              'filter' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'filter',
                 '_definition' => 'Phalcon\\Filter',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'escaper' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'escaper',
                 '_definition' => 'Phalcon\\Escaper',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'security' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'security',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'crypt' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'crypt',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'annotations' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'annotations',
                 '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flash' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flash',
                 '_definition' => 'Phalcon\\Flash\\Direct',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flashSession' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flashSession',
                 '_definition' => 'Phalcon\\Flash\\Session',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'tag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'tag',
                 '_definition' => 'Phalcon\\Tag',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'session' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'session',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'sessionBag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'sessionBag',
                 '_definition' => 'Phalcon\\Session\\Bag',
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'eventsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'eventsManager',
                 '_definition' => 'Phalcon\\Events\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'transactionManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'transactionManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'assets' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'assets',
                 '_definition' => 'Phalcon\\Assets\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'config' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'config',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
              )),
              'logger' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'logger',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'viewCache' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'viewCache',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'view' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'view',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
              )),
              'db' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'db',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
            ),
             '_sharedInstances' => 
            array (
              'config' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
              'router' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
              'view' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
              'dispatcher' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
              'ApiUsersController' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
              'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"7162095c-26c5-47ee-85c0-507b04a6a05b"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
              'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
              'modelsManager' => NULL,
              'modelsMetadata' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
              'db' => 
              Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                 '_eventsManager' => NULL,
                 '_descriptor' => 
                array (
                  'host' => 'localhost',
                  'username' => 'pgsql',
                  'password' => 'secret',
                  'dbname' => 'phalcon',
                ),
                 '_dialect' => 
                Phalcon\Db\Dialect\Postgresql::__set_state(array(
                   '_customFunctions' => NULL,
                   '_escapeChar' => '"',
                )),
                 '_connectionId' => 0,
                 '_sqlStatement' => NULL,
                 '_sqlVariables' => NULL,
                 '_sqlBindTypes' => NULL,
                 '_transactionLevel' => 0,
                 '_transactionsWithSavepoints' => false,
                 '_pdo' => 
                PDO::__set_state(array(
                )),
                 '_affectedRows' => NULL,
                 '_type' => 'pgsql',
                 '_dialectType' => 'postgresql',
              )),
            ),
             '_freshInstance' => false,
             '_eventsManager' => NULL,
          )),
           '_modelsManager' => NULL,
           '_modelsMetaData' => NULL,
           '_errorMessages' => NULL,
           '_operationMade' => 0,
           '_dirtyState' => 1,
           '_transaction' => NULL,
           '_uniqueKey' => NULL,
           '_uniqueParams' => NULL,
           '_uniqueTypes' => NULL,
           '_skipped' => NULL,
           '_related' => NULL,
           '_snapshot' => NULL,
           '_oldSnapshot' => 
          array (
          ),
        )),
         '_lastQuery' => NULL,
         '_reusable' => NULL,
         '_keepSnapshots' => NULL,
         '_dynamicUpdate' => NULL,
         '_namespaceAliases' => NULL,
      )),
       '_modelsMetaData' => NULL,
       '_errorMessages' => NULL,
       '_operationMade' => 0,
       '_dirtyState' => 1,
       '_transaction' => NULL,
       '_uniqueKey' => NULL,
       '_uniqueParams' => NULL,
       '_uniqueTypes' => NULL,
       '_skipped' => NULL,
       '_related' => NULL,
       '_snapshot' => NULL,
       '_oldSnapshot' => 
      array (
      ),
    )),
     '_columnMap' => 
    array (
      'id' => 'id',
      'name' => 'name',
      'password' => 'password',
      'gecos' => 'gecos',
      'superuser' => 'superuser',
    ),
     '_keepSnapshots' => false,
  )),
)
[Mon, 17 Dec 18 23:34:27 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
     'id' => -1,
  )),
   'id' => 'baab45e0-73e9-4de4-a413-1123672f9ac8',
))
[Mon, 17 Dec 18 23:34:28 +0200][DEBUG] array (
  'result' => 
  array (
    0 => 
    Phalcon\Mvc\Model\Row::__set_state(array(
       'id' => 3,
       'name' => 'qwerty',
       'gecos' => 'Luppolo Kuppolo',
       'superuser' => true,
    )),
  ),
)
[Mon, 17 Dec 18 23:34:28 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'list',
   'params' => 
  stdClass::__set_state(array(
  )),
   'id' => '160b38ff-1d29-4b95-a15c-ec69a6acd998',
))
[Mon, 17 Dec 18 23:34:28 +0200][DEBUG] array (
  'result' => 
  Phalcon\Mvc\Model\Resultset\Simple::__set_state(array(
     '_result' => 
    Phalcon\Db\Result\Pdo::__set_state(array(
       '_connection' => 
      Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
         '_eventsManager' => NULL,
         '_descriptor' => 
        array (
          'host' => 'localhost',
          'username' => 'pgsql',
          'password' => 'secret',
          'dbname' => 'phalcon',
        ),
         '_dialect' => 
        Phalcon\Db\Dialect\Postgresql::__set_state(array(
           '_customFunctions' => NULL,
           '_escapeChar' => '"',
        )),
         '_connectionId' => 0,
         '_sqlStatement' => NULL,
         '_sqlVariables' => NULL,
         '_sqlBindTypes' => NULL,
         '_transactionLevel' => 0,
         '_transactionsWithSavepoints' => false,
         '_pdo' => 
        PDO::__set_state(array(
        )),
         '_affectedRows' => NULL,
         '_type' => 'pgsql',
         '_dialectType' => 'postgresql',
      )),
       '_result' => NULL,
       '_fetchMode' => 2,
       '_pdoStatement' => 
      PDOStatement::__set_state(array(
         'queryString' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
      )),
       '_sqlStatement' => 'SELECT "user"."id", "user"."name", "user"."gecos", "user"."password", "user"."superuser" FROM "user"',
       '_bindParams' => NULL,
       '_bindTypes' => NULL,
       '_rowCount' => 1,
    )),
     '_cache' => NULL,
     '_isFresh' => true,
     '_pointer' => 0,
     '_count' => 1,
     '_activeRow' => NULL,
     '_rows' => 
    array (
      0 => 
      array (
        'id' => 3,
        'name' => 'qwerty',
        'gecos' => 'Luppolo Kuppolo',
        'password' => '12345',
        'superuser' => true,
      ),
    ),
     '_row' => NULL,
     '_errorMessages' => NULL,
     '_hydrateMode' => 0,
     '_model' => 
    User::__set_state(array(
       'id' => NULL,
       'name' => NULL,
       'password' => NULL,
       'gecos' => NULL,
       'superuser' => NULL,
       '_dependencyInjector' => 
      Phalcon\Di\FactoryDefault::__set_state(array(
         '_services' => 
        array (
          'router' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'router',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
          )),
          'dispatcher' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'dispatcher',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
          )),
          'url' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'url',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\Manager::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_customEventsManager' => NULL,
               '_readConnectionServices' => NULL,
               '_writeConnectionServices' => NULL,
               '_aliases' => NULL,
               '_modelVisibility' => 
              array (
              ),
               '_hasMany' => NULL,
               '_hasManySingle' => NULL,
               '_hasOne' => NULL,
               '_hasOneSingle' => NULL,
               '_belongsTo' => NULL,
               '_belongsToSingle' => NULL,
               '_hasManyToMany' => NULL,
               '_hasManyToManySingle' => NULL,
               '_initialized' => 
              array (
                'user' => 
                User::__set_state(array(
                   'id' => NULL,
                   'name' => NULL,
                   'password' => NULL,
                   'gecos' => NULL,
                   'superuser' => NULL,
                   '_dependencyInjector' => NULL,
                   '_modelsManager' => NULL,
                   '_modelsMetaData' => NULL,
                   '_errorMessages' => NULL,
                   '_operationMade' => 0,
                   '_dirtyState' => 1,
                   '_transaction' => NULL,
                   '_uniqueKey' => NULL,
                   '_uniqueParams' => NULL,
                   '_uniqueTypes' => NULL,
                   '_skipped' => NULL,
                   '_related' => NULL,
                   '_snapshot' => NULL,
                   '_oldSnapshot' => 
                  array (
                  ),
                )),
              ),
               '_prefix' => '',
               '_sources' => 
              array (
                'user' => 'user',
              ),
               '_schemas' => NULL,
               '_behaviors' => NULL,
               '_lastInitialized' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
               '_lastQuery' => NULL,
               '_reusable' => NULL,
               '_keepSnapshots' => NULL,
               '_dynamicUpdate' => NULL,
               '_namespaceAliases' => NULL,
            )),
          )),
          'modelsMetadata' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'modelsMetadata',
             '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
          )),
          'response' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'response',
             '_definition' => 'Phalcon\\Http\\Response',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'cookies' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'cookies',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'request' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'request',
             '_definition' => 'Phalcon\\Http\\Request',
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
          )),
          'filter' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'filter',
             '_definition' => 'Phalcon\\Filter',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'escaper' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'escaper',
             '_definition' => 'Phalcon\\Escaper',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'security' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'security',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'crypt' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'crypt',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'annotations' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'annotations',
             '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flash' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flash',
             '_definition' => 'Phalcon\\Flash\\Direct',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'flashSession' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'flashSession',
             '_definition' => 'Phalcon\\Flash\\Session',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'tag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'tag',
             '_definition' => 'Phalcon\\Tag',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'session' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'session',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'sessionBag' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'sessionBag',
             '_definition' => 'Phalcon\\Session\\Bag',
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'eventsManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'eventsManager',
             '_definition' => 'Phalcon\\Events\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'transactionManager' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'transactionManager',
             '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'assets' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'assets',
             '_definition' => 'Phalcon\\Assets\\Manager',
             '_shared' => true,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'config' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'config',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
          )),
          'logger' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'logger',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
          'viewCache' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'viewCache',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => false,
             '_sharedInstance' => NULL,
          )),
          'view' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'view',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => true,
             '_resolved' => true,
             '_sharedInstance' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
          )),
          'db' => 
          Phalcon\Di\Service::__set_state(array(
             '_name' => 'db',
             '_definition' => 
            Closure::__set_state(array(
            )),
             '_shared' => false,
             '_resolved' => true,
             '_sharedInstance' => NULL,
          )),
        ),
         '_sharedInstances' => 
        array (
          'config' => 
          Phalcon\Config\Adapter\Ini::__set_state(array(
             'database' => 
            Phalcon\Config::__set_state(array(
               'host' => 'localhost',
               'dbname' => 'phalcon',
               'username' => 'pgsql',
               'password' => 'secret',
            )),
             'application' => 
            Phalcon\Config::__set_state(array(
               'appDir' => '/var/www/dev/app/../app/',
               'controllersDir' => '/var/www/dev/app/../app/controllers/',
               'modelsDir' => '/var/www/dev/app/../app/models/',
               'migrationsDir' => '/var/www/dev/app/../app/migrations/',
               'viewsDir' => '/var/www/dev/app/../app/views/',
               'pluginsDir' => '/var/www/dev/app/../app/plugins/',
               'libraryDir' => '/var/www/dev/app/../app/library/',
               'utilsDir' => '/var/www/dev/app/../app/utils/',
               'logPath' => '/var/www/dev/app/../logs/debug.log',
               'cacheDir' => '/var/www/dev/app/../cache/',
               'dataDir' => '/var/www/dev/app/../data/',
            )),
          )),
          'router' => 
          Phalcon\Mvc\Router::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_uriSource' => NULL,
             '_namespace' => NULL,
             '_module' => NULL,
             '_controller' => 'api-users',
             '_action' => 'index',
             '_params' => 
            array (
            ),
             '_routes' => 
            array (
              0 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/',
                 '_compiledPattern' => '/',
                 '_paths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 0,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              1 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/login',
                 '_compiledPattern' => '/api/login',
                 '_paths' => 
                array (
                  'controller' => 'api-login',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 1,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
              2 => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
            ),
             '_matchedRoute' => 
            Phalcon\Mvc\Router\Route::__set_state(array(
               '_pattern' => '/api/users',
               '_compiledPattern' => '/api/users',
               '_paths' => 
              array (
                'controller' => 'api-users',
                'action' => 'index',
              ),
               '_methods' => NULL,
               '_hostname' => NULL,
               '_converters' => NULL,
               '_id' => 2,
               '_name' => NULL,
               '_beforeMatch' => NULL,
               '_match' => NULL,
               '_group' => NULL,
            )),
             '_matches' => NULL,
             '_wasMatched' => true,
             '_defaultNamespace' => NULL,
             '_defaultModule' => NULL,
             '_defaultController' => 'index',
             '_defaultAction' => 'index',
             '_defaultParams' => 
            array (
            ),
             '_removeExtraSlashes' => true,
             '_notFoundPaths' => 
            array (
              'controller' => 'index',
              'action' => 'index',
            ),
             '_keyRouteNames' => 
            array (
            ),
             '_keyRouteIds' => 
            array (
            ),
          )),
          'view' => 
          Phalcon\Mvc\View::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_options' => 
            array (
            ),
             '_basePath' => '',
             '_content' => NULL,
             '_renderLevel' => 5,
             '_currentRenderLevel' => 0,
             '_disabledLevels' => NULL,
             '_viewParams' => 
            array (
            ),
             '_layout' => NULL,
             '_layoutsDir' => '',
             '_partialsDir' => '',
             '_viewsDirs' => '/var/www/dev/app/../app/views/',
             '_templatesBefore' => 
            array (
            ),
             '_templatesAfter' => 
            array (
            ),
             '_engines' => false,
             '_registeredEngines' => NULL,
             '_mainView' => 'index',
             '_controllerName' => NULL,
             '_actionName' => NULL,
             '_params' => NULL,
             '_pickView' => NULL,
             '_cache' => NULL,
             '_cacheLevel' => 0,
             '_activeRenderPaths' => NULL,
             '_disabled' => false,
          )),
          'dispatcher' => 
          Phalcon\Mvc\Dispatcher::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => 
            Phalcon\Events\Manager::__set_state(array(
               '_events' => 
              array (
                'dispatch:beforeExecuteRoute' => 
                array (
                  0 => 
                  SecurityPlugin::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                  )),
                ),
              ),
               '_collect' => false,
               '_enablePriorities' => false,
               '_responses' => NULL,
            )),
             '_activeHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_finished' => true,
             '_forwarded' => false,
             '_moduleName' => '',
             '_namespaceName' => NULL,
             '_handlerName' => 'api-users',
             '_actionName' => 'index',
             '_params' => 
            array (
            ),
             '_returnedValue' => NULL,
             '_lastHandler' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
             '_defaultNamespace' => NULL,
             '_actionSuffix' => 'Action',
             '_previousNamespaceName' => NULL,
             '_previousHandlerName' => NULL,
             '_previousActionName' => NULL,
             '_modelBinding' => false,
             '_modelBinder' => NULL,
             '_isControllerInitialize' => false,
             '_handlerSuffix' => 'Controller',
             '_defaultHandler' => 'index',
             '_defaultAction' => 'index',
          )),
          'ApiUsersController' => 
          ApiUsersController::__set_state(array(
             'invalidRequest' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32600,
                'message' => 'Invalid Request',
              ),
              'id' => NULL,
            ),
             'parseError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32700,
                'message' => 'Parse error',
              ),
              'id' => NULL,
            ),
             'methodNotFound' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32601,
                'message' => 'Method not found',
              ),
              'id' => 1,
            ),
             'internalError' => 
            array (
              'jsonrpc' => '2.0',
              'error' => 
              array (
                'code' => -32603,
                'message' => 'Internal error',
              ),
              'id' => 0,
            ),
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
             'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
          )),
          'request' => 
          Phalcon\Http\Request::__set_state(array(
             '_dependencyInjector' => NULL,
             '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
             '_filter' => NULL,
             '_putCache' => NULL,
             '_httpMethodParameterOverride' => false,
             '_strictHostCheck' => false,
          )),
          'logger' => 
          Phalcon\Logger\Adapter\File::__set_state(array(
             '_transaction' => false,
             '_queue' => 
            array (
            ),
             '_formatter' => 
            Phalcon\Logger\Formatter\Line::__set_state(array(
               '_dateFormat' => 'D, d M y H:i:s O',
               '_format' => '[%date%][%type%] %message%',
            )),
             '_logLevel' => 9,
             '_fileHandler' => NULL,
             '_path' => '/var/www/dev/app/../logs/debug.log',
             '_options' => NULL,
          )),
          'modelsManager' => 
          Phalcon\Mvc\Model\Manager::__set_state(array(
             '_dependencyInjector' => NULL,
             '_eventsManager' => NULL,
             '_customEventsManager' => NULL,
             '_readConnectionServices' => NULL,
             '_writeConnectionServices' => NULL,
             '_aliases' => NULL,
             '_modelVisibility' => 
            array (
            ),
             '_hasMany' => NULL,
             '_hasManySingle' => NULL,
             '_hasOne' => NULL,
             '_hasOneSingle' => NULL,
             '_belongsTo' => NULL,
             '_belongsToSingle' => NULL,
             '_hasManyToMany' => NULL,
             '_hasManyToManySingle' => NULL,
             '_initialized' => 
            array (
              'user' => 
              User::__set_state(array(
                 'id' => NULL,
                 'name' => NULL,
                 'password' => NULL,
                 'gecos' => NULL,
                 'superuser' => NULL,
                 '_dependencyInjector' => NULL,
                 '_modelsManager' => NULL,
                 '_modelsMetaData' => NULL,
                 '_errorMessages' => NULL,
                 '_operationMade' => 0,
                 '_dirtyState' => 1,
                 '_transaction' => NULL,
                 '_uniqueKey' => NULL,
                 '_uniqueParams' => NULL,
                 '_uniqueTypes' => NULL,
                 '_skipped' => NULL,
                 '_related' => NULL,
                 '_snapshot' => NULL,
                 '_oldSnapshot' => 
                array (
                ),
              )),
            ),
             '_prefix' => '',
             '_sources' => 
            array (
              'user' => 'user',
            ),
             '_schemas' => NULL,
             '_behaviors' => NULL,
             '_lastInitialized' => 
            User::__set_state(array(
               'id' => NULL,
               'name' => NULL,
               'password' => NULL,
               'gecos' => NULL,
               'superuser' => NULL,
               '_dependencyInjector' => NULL,
               '_modelsManager' => NULL,
               '_modelsMetaData' => NULL,
               '_errorMessages' => NULL,
               '_operationMade' => 0,
               '_dirtyState' => 1,
               '_transaction' => NULL,
               '_uniqueKey' => NULL,
               '_uniqueParams' => NULL,
               '_uniqueTypes' => NULL,
               '_skipped' => NULL,
               '_related' => NULL,
               '_snapshot' => NULL,
               '_oldSnapshot' => 
              array (
              ),
            )),
             '_lastQuery' => NULL,
             '_reusable' => NULL,
             '_keepSnapshots' => NULL,
             '_dynamicUpdate' => NULL,
             '_namespaceAliases' => NULL,
          )),
          'modelsMetadata' => 
          Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
             '_dependencyInjector' => NULL,
             '_strategy' => 
            Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
            )),
             '_columnMap' => 
            array (
              'user' => 
              array (
                0 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
                1 => 
                array (
                  'id' => 'id',
                  'name' => 'name',
                  'password' => 'password',
                  'gecos' => 'gecos',
                  'superuser' => 'superuser',
                ),
              ),
            ),
             '_metaData' => 
            array (
              'user-user' => 
              array (
                0 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                  4 => 'superuser',
                ),
                1 => 
                array (
                  0 => 'id',
                ),
                2 => 
                array (
                  0 => 'name',
                  1 => 'gecos',
                  2 => 'password',
                  3 => 'superuser',
                ),
                3 => 
                array (
                  0 => 'id',
                  1 => 'name',
                  2 => 'gecos',
                  3 => 'password',
                ),
                4 => 
                array (
                  'id' => 0,
                  'name' => 6,
                  'gecos' => 6,
                  'password' => 6,
                  'superuser' => 8,
                ),
                5 => 
                array (
                  'id' => true,
                ),
                8 => 'id',
                9 => 
                array (
                  'id' => 1,
                  'name' => 2,
                  'gecos' => 2,
                  'password' => 2,
                  'superuser' => 5,
                ),
                10 => 
                array (
                ),
                11 => 
                array (
                ),
                12 => 
                array (
                  'superuser' => NULL,
                ),
                13 => 
                array (
                ),
              ),
            ),
          )),
          'db' => 
          Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
             '_eventsManager' => NULL,
             '_descriptor' => 
            array (
              'host' => 'localhost',
              'username' => 'pgsql',
              'password' => 'secret',
              'dbname' => 'phalcon',
            ),
             '_dialect' => 
            Phalcon\Db\Dialect\Postgresql::__set_state(array(
               '_customFunctions' => NULL,
               '_escapeChar' => '"',
            )),
             '_connectionId' => 0,
             '_sqlStatement' => NULL,
             '_sqlVariables' => NULL,
             '_sqlBindTypes' => NULL,
             '_transactionLevel' => 0,
             '_transactionsWithSavepoints' => false,
             '_pdo' => 
            PDO::__set_state(array(
            )),
             '_affectedRows' => NULL,
             '_type' => 'pgsql',
             '_dialectType' => 'postgresql',
          )),
        ),
         '_freshInstance' => false,
         '_eventsManager' => NULL,
      )),
       '_modelsManager' => 
      Phalcon\Mvc\Model\Manager::__set_state(array(
         '_dependencyInjector' => 
        Phalcon\Di\FactoryDefault::__set_state(array(
           '_services' => 
          array (
            'router' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'router',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
            )),
            'dispatcher' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'dispatcher',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
            )),
            'url' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'url',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'modelsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'modelsMetadata' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'modelsMetadata',
               '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
            )),
            'response' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'response',
               '_definition' => 'Phalcon\\Http\\Response',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'cookies' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'cookies',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'request' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'request',
               '_definition' => 'Phalcon\\Http\\Request',
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
            )),
            'filter' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'filter',
               '_definition' => 'Phalcon\\Filter',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'escaper' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'escaper',
               '_definition' => 'Phalcon\\Escaper',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'security' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'security',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'crypt' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'crypt',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'annotations' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'annotations',
               '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flash' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flash',
               '_definition' => 'Phalcon\\Flash\\Direct',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'flashSession' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'flashSession',
               '_definition' => 'Phalcon\\Flash\\Session',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'tag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'tag',
               '_definition' => 'Phalcon\\Tag',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'session' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'session',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'sessionBag' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'sessionBag',
               '_definition' => 'Phalcon\\Session\\Bag',
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'eventsManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'eventsManager',
               '_definition' => 'Phalcon\\Events\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'transactionManager' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'transactionManager',
               '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'assets' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'assets',
               '_definition' => 'Phalcon\\Assets\\Manager',
               '_shared' => true,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'config' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'config',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
            )),
            'logger' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'logger',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
            'viewCache' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'viewCache',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => false,
               '_sharedInstance' => NULL,
            )),
            'view' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'view',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => true,
               '_resolved' => true,
               '_sharedInstance' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
            )),
            'db' => 
            Phalcon\Di\Service::__set_state(array(
               '_name' => 'db',
               '_definition' => 
              Closure::__set_state(array(
              )),
               '_shared' => false,
               '_resolved' => true,
               '_sharedInstance' => NULL,
            )),
          ),
           '_sharedInstances' => 
          array (
            'config' => 
            Phalcon\Config\Adapter\Ini::__set_state(array(
               'database' => 
              Phalcon\Config::__set_state(array(
                 'host' => 'localhost',
                 'dbname' => 'phalcon',
                 'username' => 'pgsql',
                 'password' => 'secret',
              )),
               'application' => 
              Phalcon\Config::__set_state(array(
                 'appDir' => '/var/www/dev/app/../app/',
                 'controllersDir' => '/var/www/dev/app/../app/controllers/',
                 'modelsDir' => '/var/www/dev/app/../app/models/',
                 'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                 'viewsDir' => '/var/www/dev/app/../app/views/',
                 'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                 'libraryDir' => '/var/www/dev/app/../app/library/',
                 'utilsDir' => '/var/www/dev/app/../app/utils/',
                 'logPath' => '/var/www/dev/app/../logs/debug.log',
                 'cacheDir' => '/var/www/dev/app/../cache/',
                 'dataDir' => '/var/www/dev/app/../data/',
              )),
            )),
            'router' => 
            Phalcon\Mvc\Router::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_uriSource' => NULL,
               '_namespace' => NULL,
               '_module' => NULL,
               '_controller' => 'api-users',
               '_action' => 'index',
               '_params' => 
              array (
              ),
               '_routes' => 
              array (
                0 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/',
                   '_compiledPattern' => '/',
                   '_paths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 0,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                1 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/login',
                   '_compiledPattern' => '/api/login',
                   '_paths' => 
                  array (
                    'controller' => 'api-login',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 1,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                2 => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
              ),
               '_matchedRoute' => 
              Phalcon\Mvc\Router\Route::__set_state(array(
                 '_pattern' => '/api/users',
                 '_compiledPattern' => '/api/users',
                 '_paths' => 
                array (
                  'controller' => 'api-users',
                  'action' => 'index',
                ),
                 '_methods' => NULL,
                 '_hostname' => NULL,
                 '_converters' => NULL,
                 '_id' => 2,
                 '_name' => NULL,
                 '_beforeMatch' => NULL,
                 '_match' => NULL,
                 '_group' => NULL,
              )),
               '_matches' => NULL,
               '_wasMatched' => true,
               '_defaultNamespace' => NULL,
               '_defaultModule' => NULL,
               '_defaultController' => 'index',
               '_defaultAction' => 'index',
               '_defaultParams' => 
              array (
              ),
               '_removeExtraSlashes' => true,
               '_notFoundPaths' => 
              array (
                'controller' => 'index',
                'action' => 'index',
              ),
               '_keyRouteNames' => 
              array (
              ),
               '_keyRouteIds' => 
              array (
              ),
            )),
            'view' => 
            Phalcon\Mvc\View::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               '_options' => 
              array (
              ),
               '_basePath' => '',
               '_content' => NULL,
               '_renderLevel' => 5,
               '_currentRenderLevel' => 0,
               '_disabledLevels' => NULL,
               '_viewParams' => 
              array (
              ),
               '_layout' => NULL,
               '_layoutsDir' => '',
               '_partialsDir' => '',
               '_viewsDirs' => '/var/www/dev/app/../app/views/',
               '_templatesBefore' => 
              array (
              ),
               '_templatesAfter' => 
              array (
              ),
               '_engines' => false,
               '_registeredEngines' => NULL,
               '_mainView' => 'index',
               '_controllerName' => NULL,
               '_actionName' => NULL,
               '_params' => NULL,
               '_pickView' => NULL,
               '_cache' => NULL,
               '_cacheLevel' => 0,
               '_activeRenderPaths' => NULL,
               '_disabled' => false,
            )),
            'dispatcher' => 
            Phalcon\Mvc\Dispatcher::__set_state(array(
               '_dependencyInjector' => NULL,
               '_eventsManager' => 
              Phalcon\Events\Manager::__set_state(array(
                 '_events' => 
                array (
                  'dispatch:beforeExecuteRoute' => 
                  array (
                    0 => 
                    SecurityPlugin::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                    )),
                  ),
                ),
                 '_collect' => false,
                 '_enablePriorities' => false,
                 '_responses' => NULL,
              )),
               '_activeHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_finished' => true,
               '_forwarded' => false,
               '_moduleName' => '',
               '_namespaceName' => NULL,
               '_handlerName' => 'api-users',
               '_actionName' => 'index',
               '_params' => 
              array (
              ),
               '_returnedValue' => NULL,
               '_lastHandler' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
               '_defaultNamespace' => NULL,
               '_actionSuffix' => 'Action',
               '_previousNamespaceName' => NULL,
               '_previousHandlerName' => NULL,
               '_previousActionName' => NULL,
               '_modelBinding' => false,
               '_modelBinder' => NULL,
               '_isControllerInitialize' => false,
               '_handlerSuffix' => 'Controller',
               '_defaultHandler' => 'index',
               '_defaultAction' => 'index',
            )),
            'ApiUsersController' => 
            ApiUsersController::__set_state(array(
               'invalidRequest' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32600,
                  'message' => 'Invalid Request',
                ),
                'id' => NULL,
              ),
               'parseError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32700,
                  'message' => 'Parse error',
                ),
                'id' => NULL,
              ),
               'methodNotFound' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32601,
                  'message' => 'Method not found',
                ),
                'id' => 1,
              ),
               'internalError' => 
              array (
                'jsonrpc' => '2.0',
                'error' => 
                array (
                  'code' => -32603,
                  'message' => 'Internal error',
                ),
                'id' => 0,
              ),
               '_dependencyInjector' => NULL,
               '_eventsManager' => NULL,
               'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
               'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
            )),
            'request' => 
            Phalcon\Http\Request::__set_state(array(
               '_dependencyInjector' => NULL,
               '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
               '_filter' => NULL,
               '_putCache' => NULL,
               '_httpMethodParameterOverride' => false,
               '_strictHostCheck' => false,
            )),
            'logger' => 
            Phalcon\Logger\Adapter\File::__set_state(array(
               '_transaction' => false,
               '_queue' => 
              array (
              ),
               '_formatter' => 
              Phalcon\Logger\Formatter\Line::__set_state(array(
                 '_dateFormat' => 'D, d M y H:i:s O',
                 '_format' => '[%date%][%type%] %message%',
              )),
               '_logLevel' => 9,
               '_fileHandler' => NULL,
               '_path' => '/var/www/dev/app/../logs/debug.log',
               '_options' => NULL,
            )),
            'modelsManager' => NULL,
            'modelsMetadata' => 
            Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
               '_dependencyInjector' => NULL,
               '_strategy' => 
              Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
              )),
               '_columnMap' => 
              array (
                'user' => 
                array (
                  0 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                  1 => 
                  array (
                    'id' => 'id',
                    'name' => 'name',
                    'password' => 'password',
                    'gecos' => 'gecos',
                    'superuser' => 'superuser',
                  ),
                ),
              ),
               '_metaData' => 
              array (
                'user-user' => 
                array (
                  0 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                    4 => 'superuser',
                  ),
                  1 => 
                  array (
                    0 => 'id',
                  ),
                  2 => 
                  array (
                    0 => 'name',
                    1 => 'gecos',
                    2 => 'password',
                    3 => 'superuser',
                  ),
                  3 => 
                  array (
                    0 => 'id',
                    1 => 'name',
                    2 => 'gecos',
                    3 => 'password',
                  ),
                  4 => 
                  array (
                    'id' => 0,
                    'name' => 6,
                    'gecos' => 6,
                    'password' => 6,
                    'superuser' => 8,
                  ),
                  5 => 
                  array (
                    'id' => true,
                  ),
                  8 => 'id',
                  9 => 
                  array (
                    'id' => 1,
                    'name' => 2,
                    'gecos' => 2,
                    'password' => 2,
                    'superuser' => 5,
                  ),
                  10 => 
                  array (
                  ),
                  11 => 
                  array (
                  ),
                  12 => 
                  array (
                    'superuser' => NULL,
                  ),
                  13 => 
                  array (
                  ),
                ),
              ),
            )),
            'db' => 
            Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
               '_eventsManager' => NULL,
               '_descriptor' => 
              array (
                'host' => 'localhost',
                'username' => 'pgsql',
                'password' => 'secret',
                'dbname' => 'phalcon',
              ),
               '_dialect' => 
              Phalcon\Db\Dialect\Postgresql::__set_state(array(
                 '_customFunctions' => NULL,
                 '_escapeChar' => '"',
              )),
               '_connectionId' => 0,
               '_sqlStatement' => NULL,
               '_sqlVariables' => NULL,
               '_sqlBindTypes' => NULL,
               '_transactionLevel' => 0,
               '_transactionsWithSavepoints' => false,
               '_pdo' => 
              PDO::__set_state(array(
              )),
               '_affectedRows' => NULL,
               '_type' => 'pgsql',
               '_dialectType' => 'postgresql',
            )),
          ),
           '_freshInstance' => false,
           '_eventsManager' => NULL,
        )),
         '_eventsManager' => NULL,
         '_customEventsManager' => NULL,
         '_readConnectionServices' => NULL,
         '_writeConnectionServices' => NULL,
         '_aliases' => NULL,
         '_modelVisibility' => 
        array (
        ),
         '_hasMany' => NULL,
         '_hasManySingle' => NULL,
         '_hasOne' => NULL,
         '_hasOneSingle' => NULL,
         '_belongsTo' => NULL,
         '_belongsToSingle' => NULL,
         '_hasManyToMany' => NULL,
         '_hasManyToManySingle' => NULL,
         '_initialized' => 
        array (
          'user' => 
          User::__set_state(array(
             'id' => NULL,
             'name' => NULL,
             'password' => NULL,
             'gecos' => NULL,
             'superuser' => NULL,
             '_dependencyInjector' => 
            Phalcon\Di\FactoryDefault::__set_state(array(
               '_services' => 
              array (
                'router' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'router',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Router::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_uriSource' => NULL,
                     '_namespace' => NULL,
                     '_module' => NULL,
                     '_controller' => 'api-users',
                     '_action' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_routes' => 
                    array (
                      0 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/',
                         '_compiledPattern' => '/',
                         '_paths' => 
                        array (
                          'controller' => 'index',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 0,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      1 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/login',
                         '_compiledPattern' => '/api/login',
                         '_paths' => 
                        array (
                          'controller' => 'api-login',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 1,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                      2 => 
                      Phalcon\Mvc\Router\Route::__set_state(array(
                         '_pattern' => '/api/users',
                         '_compiledPattern' => '/api/users',
                         '_paths' => 
                        array (
                          'controller' => 'api-users',
                          'action' => 'index',
                        ),
                         '_methods' => NULL,
                         '_hostname' => NULL,
                         '_converters' => NULL,
                         '_id' => 2,
                         '_name' => NULL,
                         '_beforeMatch' => NULL,
                         '_match' => NULL,
                         '_group' => NULL,
                      )),
                    ),
                     '_matchedRoute' => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                     '_matches' => NULL,
                     '_wasMatched' => true,
                     '_defaultNamespace' => NULL,
                     '_defaultModule' => NULL,
                     '_defaultController' => 'index',
                     '_defaultAction' => 'index',
                     '_defaultParams' => 
                    array (
                    ),
                     '_removeExtraSlashes' => true,
                     '_notFoundPaths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_keyRouteNames' => 
                    array (
                    ),
                     '_keyRouteIds' => 
                    array (
                    ),
                  )),
                )),
                'dispatcher' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'dispatcher',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Dispatcher::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => 
                    Phalcon\Events\Manager::__set_state(array(
                       '_events' => 
                      array (
                        'dispatch:beforeExecuteRoute' => 
                        array (
                          0 => 
                          SecurityPlugin::__set_state(array(
                             '_dependencyInjector' => NULL,
                             '_eventsManager' => NULL,
                          )),
                        ),
                      ),
                       '_collect' => false,
                       '_enablePriorities' => false,
                       '_responses' => NULL,
                    )),
                     '_activeHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_finished' => true,
                     '_forwarded' => false,
                     '_moduleName' => '',
                     '_namespaceName' => NULL,
                     '_handlerName' => 'api-users',
                     '_actionName' => 'index',
                     '_params' => 
                    array (
                    ),
                     '_returnedValue' => NULL,
                     '_lastHandler' => 
                    ApiUsersController::__set_state(array(
                       'invalidRequest' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32600,
                          'message' => 'Invalid Request',
                        ),
                        'id' => NULL,
                      ),
                       'parseError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32700,
                          'message' => 'Parse error',
                        ),
                        'id' => NULL,
                      ),
                       'methodNotFound' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32601,
                          'message' => 'Method not found',
                        ),
                        'id' => 1,
                      ),
                       'internalError' => 
                      array (
                        'jsonrpc' => '2.0',
                        'error' => 
                        array (
                          'code' => -32603,
                          'message' => 'Internal error',
                        ),
                        'id' => 0,
                      ),
                       '_dependencyInjector' => NULL,
                       '_eventsManager' => NULL,
                       'request' => 
                      Phalcon\Http\Request::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                         '_filter' => NULL,
                         '_putCache' => NULL,
                         '_httpMethodParameterOverride' => false,
                         '_strictHostCheck' => false,
                      )),
                       'logger' => 
                      Phalcon\Logger\Adapter\File::__set_state(array(
                         '_transaction' => false,
                         '_queue' => 
                        array (
                        ),
                         '_formatter' => 
                        Phalcon\Logger\Formatter\Line::__set_state(array(
                           '_dateFormat' => 'D, d M y H:i:s O',
                           '_format' => '[%date%][%type%] %message%',
                        )),
                         '_logLevel' => 9,
                         '_fileHandler' => NULL,
                         '_path' => '/var/www/dev/app/../logs/debug.log',
                         '_options' => NULL,
                      )),
                    )),
                     '_defaultNamespace' => NULL,
                     '_actionSuffix' => 'Action',
                     '_previousNamespaceName' => NULL,
                     '_previousHandlerName' => NULL,
                     '_previousActionName' => NULL,
                     '_modelBinding' => false,
                     '_modelBinder' => NULL,
                     '_isControllerInitialize' => false,
                     '_handlerSuffix' => 'Controller',
                     '_defaultHandler' => 'index',
                     '_defaultAction' => 'index',
                  )),
                )),
                'url' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'url',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'modelsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'modelsMetadata' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'modelsMetadata',
                   '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_strategy' => 
                    Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                    )),
                     '_columnMap' => 
                    array (
                      'user' => 
                      array (
                        0 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                        1 => 
                        array (
                          'id' => 'id',
                          'name' => 'name',
                          'password' => 'password',
                          'gecos' => 'gecos',
                          'superuser' => 'superuser',
                        ),
                      ),
                    ),
                     '_metaData' => 
                    array (
                      'user-user' => 
                      array (
                        0 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                          4 => 'superuser',
                        ),
                        1 => 
                        array (
                          0 => 'id',
                        ),
                        2 => 
                        array (
                          0 => 'name',
                          1 => 'gecos',
                          2 => 'password',
                          3 => 'superuser',
                        ),
                        3 => 
                        array (
                          0 => 'id',
                          1 => 'name',
                          2 => 'gecos',
                          3 => 'password',
                        ),
                        4 => 
                        array (
                          'id' => 0,
                          'name' => 6,
                          'gecos' => 6,
                          'password' => 6,
                          'superuser' => 8,
                        ),
                        5 => 
                        array (
                          'id' => true,
                        ),
                        8 => 'id',
                        9 => 
                        array (
                          'id' => 1,
                          'name' => 2,
                          'gecos' => 2,
                          'password' => 2,
                          'superuser' => 5,
                        ),
                        10 => 
                        array (
                        ),
                        11 => 
                        array (
                        ),
                        12 => 
                        array (
                          'superuser' => NULL,
                        ),
                        13 => 
                        array (
                        ),
                      ),
                    ),
                  )),
                )),
                'response' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'response',
                   '_definition' => 'Phalcon\\Http\\Response',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'cookies' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'cookies',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'request' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'request',
                   '_definition' => 'Phalcon\\Http\\Request',
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                )),
                'filter' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'filter',
                   '_definition' => 'Phalcon\\Filter',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'escaper' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'escaper',
                   '_definition' => 'Phalcon\\Escaper',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'security' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'security',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'crypt' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'crypt',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'annotations' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'annotations',
                   '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flash' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flash',
                   '_definition' => 'Phalcon\\Flash\\Direct',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'flashSession' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'flashSession',
                   '_definition' => 'Phalcon\\Flash\\Session',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'tag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'tag',
                   '_definition' => 'Phalcon\\Tag',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'session' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'session',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'sessionBag' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'sessionBag',
                   '_definition' => 'Phalcon\\Session\\Bag',
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'eventsManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'eventsManager',
                   '_definition' => 'Phalcon\\Events\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'transactionManager' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'transactionManager',
                   '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'assets' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'assets',
                   '_definition' => 'Phalcon\\Assets\\Manager',
                   '_shared' => true,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'config' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'config',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Config\Adapter\Ini::__set_state(array(
                     'database' => 
                    Phalcon\Config::__set_state(array(
                       'host' => 'localhost',
                       'dbname' => 'phalcon',
                       'username' => 'pgsql',
                       'password' => 'secret',
                    )),
                     'application' => 
                    Phalcon\Config::__set_state(array(
                       'appDir' => '/var/www/dev/app/../app/',
                       'controllersDir' => '/var/www/dev/app/../app/controllers/',
                       'modelsDir' => '/var/www/dev/app/../app/models/',
                       'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                       'viewsDir' => '/var/www/dev/app/../app/views/',
                       'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                       'libraryDir' => '/var/www/dev/app/../app/library/',
                       'utilsDir' => '/var/www/dev/app/../app/utils/',
                       'logPath' => '/var/www/dev/app/../logs/debug.log',
                       'cacheDir' => '/var/www/dev/app/../cache/',
                       'dataDir' => '/var/www/dev/app/../data/',
                    )),
                  )),
                )),
                'logger' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'logger',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
                'viewCache' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'viewCache',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => false,
                   '_sharedInstance' => NULL,
                )),
                'view' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'view',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => true,
                   '_resolved' => true,
                   '_sharedInstance' => 
                  Phalcon\Mvc\View::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     '_options' => 
                    array (
                    ),
                     '_basePath' => '',
                     '_content' => NULL,
                     '_renderLevel' => 5,
                     '_currentRenderLevel' => 0,
                     '_disabledLevels' => NULL,
                     '_viewParams' => 
                    array (
                    ),
                     '_layout' => NULL,
                     '_layoutsDir' => '',
                     '_partialsDir' => '',
                     '_viewsDirs' => '/var/www/dev/app/../app/views/',
                     '_templatesBefore' => 
                    array (
                    ),
                     '_templatesAfter' => 
                    array (
                    ),
                     '_engines' => false,
                     '_registeredEngines' => NULL,
                     '_mainView' => 'index',
                     '_controllerName' => NULL,
                     '_actionName' => NULL,
                     '_params' => NULL,
                     '_pickView' => NULL,
                     '_cache' => NULL,
                     '_cacheLevel' => 0,
                     '_activeRenderPaths' => NULL,
                     '_disabled' => false,
                  )),
                )),
                'db' => 
                Phalcon\Di\Service::__set_state(array(
                   '_name' => 'db',
                   '_definition' => 
                  Closure::__set_state(array(
                  )),
                   '_shared' => false,
                   '_resolved' => true,
                   '_sharedInstance' => NULL,
                )),
              ),
               '_sharedInstances' => 
              array (
                'config' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
                'router' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
                'view' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
                'dispatcher' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
                'ApiUsersController' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
                'modelsManager' => NULL,
                'modelsMetadata' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
                'db' => 
                Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                   '_eventsManager' => NULL,
                   '_descriptor' => 
                  array (
                    'host' => 'localhost',
                    'username' => 'pgsql',
                    'password' => 'secret',
                    'dbname' => 'phalcon',
                  ),
                   '_dialect' => 
                  Phalcon\Db\Dialect\Postgresql::__set_state(array(
                     '_customFunctions' => NULL,
                     '_escapeChar' => '"',
                  )),
                   '_connectionId' => 0,
                   '_sqlStatement' => NULL,
                   '_sqlVariables' => NULL,
                   '_sqlBindTypes' => NULL,
                   '_transactionLevel' => 0,
                   '_transactionsWithSavepoints' => false,
                   '_pdo' => 
                  PDO::__set_state(array(
                  )),
                   '_affectedRows' => NULL,
                   '_type' => 'pgsql',
                   '_dialectType' => 'postgresql',
                )),
              ),
               '_freshInstance' => false,
               '_eventsManager' => NULL,
            )),
             '_modelsManager' => NULL,
             '_modelsMetaData' => NULL,
             '_errorMessages' => NULL,
             '_operationMade' => 0,
             '_dirtyState' => 1,
             '_transaction' => NULL,
             '_uniqueKey' => NULL,
             '_uniqueParams' => NULL,
             '_uniqueTypes' => NULL,
             '_skipped' => NULL,
             '_related' => NULL,
             '_snapshot' => NULL,
             '_oldSnapshot' => 
            array (
            ),
          )),
        ),
         '_prefix' => '',
         '_sources' => 
        array (
          'user' => 'user',
        ),
         '_schemas' => NULL,
         '_behaviors' => NULL,
         '_lastInitialized' => 
        User::__set_state(array(
           'id' => NULL,
           'name' => NULL,
           'password' => NULL,
           'gecos' => NULL,
           'superuser' => NULL,
           '_dependencyInjector' => 
          Phalcon\Di\FactoryDefault::__set_state(array(
             '_services' => 
            array (
              'router' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'router',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Router::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_uriSource' => NULL,
                   '_namespace' => NULL,
                   '_module' => NULL,
                   '_controller' => 'api-users',
                   '_action' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_routes' => 
                  array (
                    0 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/',
                       '_compiledPattern' => '/',
                       '_paths' => 
                      array (
                        'controller' => 'index',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 0,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    1 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/login',
                       '_compiledPattern' => '/api/login',
                       '_paths' => 
                      array (
                        'controller' => 'api-login',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 1,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                    2 => 
                    Phalcon\Mvc\Router\Route::__set_state(array(
                       '_pattern' => '/api/users',
                       '_compiledPattern' => '/api/users',
                       '_paths' => 
                      array (
                        'controller' => 'api-users',
                        'action' => 'index',
                      ),
                       '_methods' => NULL,
                       '_hostname' => NULL,
                       '_converters' => NULL,
                       '_id' => 2,
                       '_name' => NULL,
                       '_beforeMatch' => NULL,
                       '_match' => NULL,
                       '_group' => NULL,
                    )),
                  ),
                   '_matchedRoute' => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                   '_matches' => NULL,
                   '_wasMatched' => true,
                   '_defaultNamespace' => NULL,
                   '_defaultModule' => NULL,
                   '_defaultController' => 'index',
                   '_defaultAction' => 'index',
                   '_defaultParams' => 
                  array (
                  ),
                   '_removeExtraSlashes' => true,
                   '_notFoundPaths' => 
                  array (
                    'controller' => 'index',
                    'action' => 'index',
                  ),
                   '_keyRouteNames' => 
                  array (
                  ),
                   '_keyRouteIds' => 
                  array (
                  ),
                )),
              )),
              'dispatcher' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'dispatcher',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Dispatcher::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => 
                  Phalcon\Events\Manager::__set_state(array(
                     '_events' => 
                    array (
                      'dispatch:beforeExecuteRoute' => 
                      array (
                        0 => 
                        SecurityPlugin::__set_state(array(
                           '_dependencyInjector' => NULL,
                           '_eventsManager' => NULL,
                        )),
                      ),
                    ),
                     '_collect' => false,
                     '_enablePriorities' => false,
                     '_responses' => NULL,
                  )),
                   '_activeHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_finished' => true,
                   '_forwarded' => false,
                   '_moduleName' => '',
                   '_namespaceName' => NULL,
                   '_handlerName' => 'api-users',
                   '_actionName' => 'index',
                   '_params' => 
                  array (
                  ),
                   '_returnedValue' => NULL,
                   '_lastHandler' => 
                  ApiUsersController::__set_state(array(
                     'invalidRequest' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32600,
                        'message' => 'Invalid Request',
                      ),
                      'id' => NULL,
                    ),
                     'parseError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32700,
                        'message' => 'Parse error',
                      ),
                      'id' => NULL,
                    ),
                     'methodNotFound' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32601,
                        'message' => 'Method not found',
                      ),
                      'id' => 1,
                    ),
                     'internalError' => 
                    array (
                      'jsonrpc' => '2.0',
                      'error' => 
                      array (
                        'code' => -32603,
                        'message' => 'Internal error',
                      ),
                      'id' => 0,
                    ),
                     '_dependencyInjector' => NULL,
                     '_eventsManager' => NULL,
                     'request' => 
                    Phalcon\Http\Request::__set_state(array(
                       '_dependencyInjector' => NULL,
                       '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                       '_filter' => NULL,
                       '_putCache' => NULL,
                       '_httpMethodParameterOverride' => false,
                       '_strictHostCheck' => false,
                    )),
                     'logger' => 
                    Phalcon\Logger\Adapter\File::__set_state(array(
                       '_transaction' => false,
                       '_queue' => 
                      array (
                      ),
                       '_formatter' => 
                      Phalcon\Logger\Formatter\Line::__set_state(array(
                         '_dateFormat' => 'D, d M y H:i:s O',
                         '_format' => '[%date%][%type%] %message%',
                      )),
                       '_logLevel' => 9,
                       '_fileHandler' => NULL,
                       '_path' => '/var/www/dev/app/../logs/debug.log',
                       '_options' => NULL,
                    )),
                  )),
                   '_defaultNamespace' => NULL,
                   '_actionSuffix' => 'Action',
                   '_previousNamespaceName' => NULL,
                   '_previousHandlerName' => NULL,
                   '_previousActionName' => NULL,
                   '_modelBinding' => false,
                   '_modelBinder' => NULL,
                   '_isControllerInitialize' => false,
                   '_handlerSuffix' => 'Controller',
                   '_defaultHandler' => 'index',
                   '_defaultAction' => 'index',
                )),
              )),
              'url' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'url',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'modelsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Manager',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'modelsMetadata' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'modelsMetadata',
                 '_definition' => 'Phalcon\\Mvc\\Model\\MetaData\\Memory',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_strategy' => 
                  Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                  )),
                   '_columnMap' => 
                  array (
                    'user' => 
                    array (
                      0 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                      1 => 
                      array (
                        'id' => 'id',
                        'name' => 'name',
                        'password' => 'password',
                        'gecos' => 'gecos',
                        'superuser' => 'superuser',
                      ),
                    ),
                  ),
                   '_metaData' => 
                  array (
                    'user-user' => 
                    array (
                      0 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                        4 => 'superuser',
                      ),
                      1 => 
                      array (
                        0 => 'id',
                      ),
                      2 => 
                      array (
                        0 => 'name',
                        1 => 'gecos',
                        2 => 'password',
                        3 => 'superuser',
                      ),
                      3 => 
                      array (
                        0 => 'id',
                        1 => 'name',
                        2 => 'gecos',
                        3 => 'password',
                      ),
                      4 => 
                      array (
                        'id' => 0,
                        'name' => 6,
                        'gecos' => 6,
                        'password' => 6,
                        'superuser' => 8,
                      ),
                      5 => 
                      array (
                        'id' => true,
                      ),
                      8 => 'id',
                      9 => 
                      array (
                        'id' => 1,
                        'name' => 2,
                        'gecos' => 2,
                        'password' => 2,
                        'superuser' => 5,
                      ),
                      10 => 
                      array (
                      ),
                      11 => 
                      array (
                      ),
                      12 => 
                      array (
                        'superuser' => NULL,
                      ),
                      13 => 
                      array (
                      ),
                    ),
                  ),
                )),
              )),
              'response' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'response',
                 '_definition' => 'Phalcon\\Http\\Response',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'cookies' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'cookies',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'request' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'request',
                 '_definition' => 'Phalcon\\Http\\Request',
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
              )),
              'filter' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'filter',
                 '_definition' => 'Phalcon\\Filter',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'escaper' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'escaper',
                 '_definition' => 'Phalcon\\Escaper',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'security' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'security',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'crypt' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'crypt',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'annotations' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'annotations',
                 '_definition' => 'Phalcon\\Annotations\\Adapter\\Memory',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flash' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flash',
                 '_definition' => 'Phalcon\\Flash\\Direct',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'flashSession' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'flashSession',
                 '_definition' => 'Phalcon\\Flash\\Session',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'tag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'tag',
                 '_definition' => 'Phalcon\\Tag',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'session' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'session',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'sessionBag' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'sessionBag',
                 '_definition' => 'Phalcon\\Session\\Bag',
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'eventsManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'eventsManager',
                 '_definition' => 'Phalcon\\Events\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'transactionManager' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'transactionManager',
                 '_definition' => 'Phalcon\\Mvc\\Model\\Transaction\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'assets' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'assets',
                 '_definition' => 'Phalcon\\Assets\\Manager',
                 '_shared' => true,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'config' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'config',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Config\Adapter\Ini::__set_state(array(
                   'database' => 
                  Phalcon\Config::__set_state(array(
                     'host' => 'localhost',
                     'dbname' => 'phalcon',
                     'username' => 'pgsql',
                     'password' => 'secret',
                  )),
                   'application' => 
                  Phalcon\Config::__set_state(array(
                     'appDir' => '/var/www/dev/app/../app/',
                     'controllersDir' => '/var/www/dev/app/../app/controllers/',
                     'modelsDir' => '/var/www/dev/app/../app/models/',
                     'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                     'viewsDir' => '/var/www/dev/app/../app/views/',
                     'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                     'libraryDir' => '/var/www/dev/app/../app/library/',
                     'utilsDir' => '/var/www/dev/app/../app/utils/',
                     'logPath' => '/var/www/dev/app/../logs/debug.log',
                     'cacheDir' => '/var/www/dev/app/../cache/',
                     'dataDir' => '/var/www/dev/app/../data/',
                  )),
                )),
              )),
              'logger' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'logger',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
              'viewCache' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'viewCache',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => false,
                 '_sharedInstance' => NULL,
              )),
              'view' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'view',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => true,
                 '_resolved' => true,
                 '_sharedInstance' => 
                Phalcon\Mvc\View::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   '_options' => 
                  array (
                  ),
                   '_basePath' => '',
                   '_content' => NULL,
                   '_renderLevel' => 5,
                   '_currentRenderLevel' => 0,
                   '_disabledLevels' => NULL,
                   '_viewParams' => 
                  array (
                  ),
                   '_layout' => NULL,
                   '_layoutsDir' => '',
                   '_partialsDir' => '',
                   '_viewsDirs' => '/var/www/dev/app/../app/views/',
                   '_templatesBefore' => 
                  array (
                  ),
                   '_templatesAfter' => 
                  array (
                  ),
                   '_engines' => false,
                   '_registeredEngines' => NULL,
                   '_mainView' => 'index',
                   '_controllerName' => NULL,
                   '_actionName' => NULL,
                   '_params' => NULL,
                   '_pickView' => NULL,
                   '_cache' => NULL,
                   '_cacheLevel' => 0,
                   '_activeRenderPaths' => NULL,
                   '_disabled' => false,
                )),
              )),
              'db' => 
              Phalcon\Di\Service::__set_state(array(
                 '_name' => 'db',
                 '_definition' => 
                Closure::__set_state(array(
                )),
                 '_shared' => false,
                 '_resolved' => true,
                 '_sharedInstance' => NULL,
              )),
            ),
             '_sharedInstances' => 
            array (
              'config' => 
              Phalcon\Config\Adapter\Ini::__set_state(array(
                 'database' => 
                Phalcon\Config::__set_state(array(
                   'host' => 'localhost',
                   'dbname' => 'phalcon',
                   'username' => 'pgsql',
                   'password' => 'secret',
                )),
                 'application' => 
                Phalcon\Config::__set_state(array(
                   'appDir' => '/var/www/dev/app/../app/',
                   'controllersDir' => '/var/www/dev/app/../app/controllers/',
                   'modelsDir' => '/var/www/dev/app/../app/models/',
                   'migrationsDir' => '/var/www/dev/app/../app/migrations/',
                   'viewsDir' => '/var/www/dev/app/../app/views/',
                   'pluginsDir' => '/var/www/dev/app/../app/plugins/',
                   'libraryDir' => '/var/www/dev/app/../app/library/',
                   'utilsDir' => '/var/www/dev/app/../app/utils/',
                   'logPath' => '/var/www/dev/app/../logs/debug.log',
                   'cacheDir' => '/var/www/dev/app/../cache/',
                   'dataDir' => '/var/www/dev/app/../data/',
                )),
              )),
              'router' => 
              Phalcon\Mvc\Router::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_uriSource' => NULL,
                 '_namespace' => NULL,
                 '_module' => NULL,
                 '_controller' => 'api-users',
                 '_action' => 'index',
                 '_params' => 
                array (
                ),
                 '_routes' => 
                array (
                  0 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/',
                     '_compiledPattern' => '/',
                     '_paths' => 
                    array (
                      'controller' => 'index',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 0,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  1 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/login',
                     '_compiledPattern' => '/api/login',
                     '_paths' => 
                    array (
                      'controller' => 'api-login',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 1,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                  2 => 
                  Phalcon\Mvc\Router\Route::__set_state(array(
                     '_pattern' => '/api/users',
                     '_compiledPattern' => '/api/users',
                     '_paths' => 
                    array (
                      'controller' => 'api-users',
                      'action' => 'index',
                    ),
                     '_methods' => NULL,
                     '_hostname' => NULL,
                     '_converters' => NULL,
                     '_id' => 2,
                     '_name' => NULL,
                     '_beforeMatch' => NULL,
                     '_match' => NULL,
                     '_group' => NULL,
                  )),
                ),
                 '_matchedRoute' => 
                Phalcon\Mvc\Router\Route::__set_state(array(
                   '_pattern' => '/api/users',
                   '_compiledPattern' => '/api/users',
                   '_paths' => 
                  array (
                    'controller' => 'api-users',
                    'action' => 'index',
                  ),
                   '_methods' => NULL,
                   '_hostname' => NULL,
                   '_converters' => NULL,
                   '_id' => 2,
                   '_name' => NULL,
                   '_beforeMatch' => NULL,
                   '_match' => NULL,
                   '_group' => NULL,
                )),
                 '_matches' => NULL,
                 '_wasMatched' => true,
                 '_defaultNamespace' => NULL,
                 '_defaultModule' => NULL,
                 '_defaultController' => 'index',
                 '_defaultAction' => 'index',
                 '_defaultParams' => 
                array (
                ),
                 '_removeExtraSlashes' => true,
                 '_notFoundPaths' => 
                array (
                  'controller' => 'index',
                  'action' => 'index',
                ),
                 '_keyRouteNames' => 
                array (
                ),
                 '_keyRouteIds' => 
                array (
                ),
              )),
              'view' => 
              Phalcon\Mvc\View::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 '_options' => 
                array (
                ),
                 '_basePath' => '',
                 '_content' => NULL,
                 '_renderLevel' => 5,
                 '_currentRenderLevel' => 0,
                 '_disabledLevels' => NULL,
                 '_viewParams' => 
                array (
                ),
                 '_layout' => NULL,
                 '_layoutsDir' => '',
                 '_partialsDir' => '',
                 '_viewsDirs' => '/var/www/dev/app/../app/views/',
                 '_templatesBefore' => 
                array (
                ),
                 '_templatesAfter' => 
                array (
                ),
                 '_engines' => false,
                 '_registeredEngines' => NULL,
                 '_mainView' => 'index',
                 '_controllerName' => NULL,
                 '_actionName' => NULL,
                 '_params' => NULL,
                 '_pickView' => NULL,
                 '_cache' => NULL,
                 '_cacheLevel' => 0,
                 '_activeRenderPaths' => NULL,
                 '_disabled' => false,
              )),
              'dispatcher' => 
              Phalcon\Mvc\Dispatcher::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => 
                Phalcon\Events\Manager::__set_state(array(
                   '_events' => 
                  array (
                    'dispatch:beforeExecuteRoute' => 
                    array (
                      0 => 
                      SecurityPlugin::__set_state(array(
                         '_dependencyInjector' => NULL,
                         '_eventsManager' => NULL,
                      )),
                    ),
                  ),
                   '_collect' => false,
                   '_enablePriorities' => false,
                   '_responses' => NULL,
                )),
                 '_activeHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_finished' => true,
                 '_forwarded' => false,
                 '_moduleName' => '',
                 '_namespaceName' => NULL,
                 '_handlerName' => 'api-users',
                 '_actionName' => 'index',
                 '_params' => 
                array (
                ),
                 '_returnedValue' => NULL,
                 '_lastHandler' => 
                ApiUsersController::__set_state(array(
                   'invalidRequest' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32600,
                      'message' => 'Invalid Request',
                    ),
                    'id' => NULL,
                  ),
                   'parseError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32700,
                      'message' => 'Parse error',
                    ),
                    'id' => NULL,
                  ),
                   'methodNotFound' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32601,
                      'message' => 'Method not found',
                    ),
                    'id' => 1,
                  ),
                   'internalError' => 
                  array (
                    'jsonrpc' => '2.0',
                    'error' => 
                    array (
                      'code' => -32603,
                      'message' => 'Internal error',
                    ),
                    'id' => 0,
                  ),
                   '_dependencyInjector' => NULL,
                   '_eventsManager' => NULL,
                   'request' => 
                  Phalcon\Http\Request::__set_state(array(
                     '_dependencyInjector' => NULL,
                     '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                     '_filter' => NULL,
                     '_putCache' => NULL,
                     '_httpMethodParameterOverride' => false,
                     '_strictHostCheck' => false,
                  )),
                   'logger' => 
                  Phalcon\Logger\Adapter\File::__set_state(array(
                     '_transaction' => false,
                     '_queue' => 
                    array (
                    ),
                     '_formatter' => 
                    Phalcon\Logger\Formatter\Line::__set_state(array(
                       '_dateFormat' => 'D, d M y H:i:s O',
                       '_format' => '[%date%][%type%] %message%',
                    )),
                     '_logLevel' => 9,
                     '_fileHandler' => NULL,
                     '_path' => '/var/www/dev/app/../logs/debug.log',
                     '_options' => NULL,
                  )),
                )),
                 '_defaultNamespace' => NULL,
                 '_actionSuffix' => 'Action',
                 '_previousNamespaceName' => NULL,
                 '_previousHandlerName' => NULL,
                 '_previousActionName' => NULL,
                 '_modelBinding' => false,
                 '_modelBinder' => NULL,
                 '_isControllerInitialize' => false,
                 '_handlerSuffix' => 'Controller',
                 '_defaultHandler' => 'index',
                 '_defaultAction' => 'index',
              )),
              'ApiUsersController' => 
              ApiUsersController::__set_state(array(
                 'invalidRequest' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32600,
                    'message' => 'Invalid Request',
                  ),
                  'id' => NULL,
                ),
                 'parseError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32700,
                    'message' => 'Parse error',
                  ),
                  'id' => NULL,
                ),
                 'methodNotFound' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32601,
                    'message' => 'Method not found',
                  ),
                  'id' => 1,
                ),
                 'internalError' => 
                array (
                  'jsonrpc' => '2.0',
                  'error' => 
                  array (
                    'code' => -32603,
                    'message' => 'Internal error',
                  ),
                  'id' => 0,
                ),
                 '_dependencyInjector' => NULL,
                 '_eventsManager' => NULL,
                 'request' => 
                Phalcon\Http\Request::__set_state(array(
                   '_dependencyInjector' => NULL,
                   '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                   '_filter' => NULL,
                   '_putCache' => NULL,
                   '_httpMethodParameterOverride' => false,
                   '_strictHostCheck' => false,
                )),
                 'logger' => 
                Phalcon\Logger\Adapter\File::__set_state(array(
                   '_transaction' => false,
                   '_queue' => 
                  array (
                  ),
                   '_formatter' => 
                  Phalcon\Logger\Formatter\Line::__set_state(array(
                     '_dateFormat' => 'D, d M y H:i:s O',
                     '_format' => '[%date%][%type%] %message%',
                  )),
                   '_logLevel' => 9,
                   '_fileHandler' => NULL,
                   '_path' => '/var/www/dev/app/../logs/debug.log',
                   '_options' => NULL,
                )),
              )),
              'request' => 
              Phalcon\Http\Request::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_rawBody' => '{"jsonrpc":"2.0","method":"list","params":{},"id":"160b38ff-1d29-4b95-a15c-ec69a6acd998"}',
                 '_filter' => NULL,
                 '_putCache' => NULL,
                 '_httpMethodParameterOverride' => false,
                 '_strictHostCheck' => false,
              )),
              'logger' => 
              Phalcon\Logger\Adapter\File::__set_state(array(
                 '_transaction' => false,
                 '_queue' => 
                array (
                ),
                 '_formatter' => 
                Phalcon\Logger\Formatter\Line::__set_state(array(
                   '_dateFormat' => 'D, d M y H:i:s O',
                   '_format' => '[%date%][%type%] %message%',
                )),
                 '_logLevel' => 9,
                 '_fileHandler' => NULL,
                 '_path' => '/var/www/dev/app/../logs/debug.log',
                 '_options' => NULL,
              )),
              'modelsManager' => NULL,
              'modelsMetadata' => 
              Phalcon\Mvc\Model\MetaData\Memory::__set_state(array(
                 '_dependencyInjector' => NULL,
                 '_strategy' => 
                Phalcon\Mvc\Model\MetaData\Strategy\Introspection::__set_state(array(
                )),
                 '_columnMap' => 
                array (
                  'user' => 
                  array (
                    0 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                    1 => 
                    array (
                      'id' => 'id',
                      'name' => 'name',
                      'password' => 'password',
                      'gecos' => 'gecos',
                      'superuser' => 'superuser',
                    ),
                  ),
                ),
                 '_metaData' => 
                array (
                  'user-user' => 
                  array (
                    0 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                      4 => 'superuser',
                    ),
                    1 => 
                    array (
                      0 => 'id',
                    ),
                    2 => 
                    array (
                      0 => 'name',
                      1 => 'gecos',
                      2 => 'password',
                      3 => 'superuser',
                    ),
                    3 => 
                    array (
                      0 => 'id',
                      1 => 'name',
                      2 => 'gecos',
                      3 => 'password',
                    ),
                    4 => 
                    array (
                      'id' => 0,
                      'name' => 6,
                      'gecos' => 6,
                      'password' => 6,
                      'superuser' => 8,
                    ),
                    5 => 
                    array (
                      'id' => true,
                    ),
                    8 => 'id',
                    9 => 
                    array (
                      'id' => 1,
                      'name' => 2,
                      'gecos' => 2,
                      'password' => 2,
                      'superuser' => 5,
                    ),
                    10 => 
                    array (
                    ),
                    11 => 
                    array (
                    ),
                    12 => 
                    array (
                      'superuser' => NULL,
                    ),
                    13 => 
                    array (
                    ),
                  ),
                ),
              )),
              'db' => 
              Phalcon\Db\Adapter\Pdo\Postgresql::__set_state(array(
                 '_eventsManager' => NULL,
                 '_descriptor' => 
                array (
                  'host' => 'localhost',
                  'username' => 'pgsql',
                  'password' => 'secret',
                  'dbname' => 'phalcon',
                ),
                 '_dialect' => 
                Phalcon\Db\Dialect\Postgresql::__set_state(array(
                   '_customFunctions' => NULL,
                   '_escapeChar' => '"',
                )),
                 '_connectionId' => 0,
                 '_sqlStatement' => NULL,
                 '_sqlVariables' => NULL,
                 '_sqlBindTypes' => NULL,
                 '_transactionLevel' => 0,
                 '_transactionsWithSavepoints' => false,
                 '_pdo' => 
                PDO::__set_state(array(
                )),
                 '_affectedRows' => NULL,
                 '_type' => 'pgsql',
                 '_dialectType' => 'postgresql',
              )),
            ),
             '_freshInstance' => false,
             '_eventsManager' => NULL,
          )),
           '_modelsManager' => NULL,
           '_modelsMetaData' => NULL,
           '_errorMessages' => NULL,
           '_operationMade' => 0,
           '_dirtyState' => 1,
           '_transaction' => NULL,
           '_uniqueKey' => NULL,
           '_uniqueParams' => NULL,
           '_uniqueTypes' => NULL,
           '_skipped' => NULL,
           '_related' => NULL,
           '_snapshot' => NULL,
           '_oldSnapshot' => 
          array (
          ),
        )),
         '_lastQuery' => NULL,
         '_reusable' => NULL,
         '_keepSnapshots' => NULL,
         '_dynamicUpdate' => NULL,
         '_namespaceAliases' => NULL,
      )),
       '_modelsMetaData' => NULL,
       '_errorMessages' => NULL,
       '_operationMade' => 0,
       '_dirtyState' => 1,
       '_transaction' => NULL,
       '_uniqueKey' => NULL,
       '_uniqueParams' => NULL,
       '_uniqueTypes' => NULL,
       '_skipped' => NULL,
       '_related' => NULL,
       '_snapshot' => NULL,
       '_oldSnapshot' => 
      array (
      ),
    )),
     '_columnMap' => 
    array (
      'id' => 'id',
      'name' => 'name',
      'password' => 'password',
      'gecos' => 'gecos',
      'superuser' => 'superuser',
    ),
     '_keepSnapshots' => false,
  )),
)
[Tue, 18 Dec 18 10:21:16 +0200][DEBUG] controller=index action=index
[Tue, 18 Dec 18 10:21:57 +0200][DEBUG] controller=api-login action=index
[Tue, 18 Dec 18 10:21:57 +0200][DEBUG] stdClass::__set_state(array(
   'jsonrpc' => '2.0',
   'method' => 'login',
   'params' => 
  stdClass::__set_state(array(
     'name' => 'qwerty',
     'password' => '12345',
     'id' => -1,
  )),
   'id' => '447bf267-73c5-4e4e-8051-c8a3144c0ef8',
))
[Tue, 18 Dec 18 10:21:57 +0200][DEBUG] array (
  'result' => 
  array (
    0 => 
    Phalcon\Mvc\Model\Row::__set_state(array(
       'id' => 3,
       'name' => 'qwerty',
       'gecos' => 'Luppolo Kuppolo',
       'superuser' => true,
    )),
  ),
)
[Tue, 18 Dec 18 10:22:54 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:24:42 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:24:42 +0200][DEBUG] controller=api-login action=index
[Tue, 18 Dec 18 10:25:03 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:25:03 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:29:31 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:29:31 +0200][DEBUG] controller=api-login action=index
[Tue, 18 Dec 18 10:29:46 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:29:46 +0200][DEBUG] controller=api-login action=index
[Tue, 18 Dec 18 10:29:47 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:29:47 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:30:19 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:30:19 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:30:37 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:30:37 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:31:12 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:31:12 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:31:26 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:31:26 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:31:28 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:31:28 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:31:47 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:31:47 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:34:39 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:34:39 +0200][DEBUG] controller=api-login action=index
[Tue, 18 Dec 18 10:34:39 +0200][DEBUG] sessionData=$
[Tue, 18 Dec 18 10:34:40 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:34:40 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:34:40 +0200][DEBUG] sessionData=$1
[Tue, 18 Dec 18 10:34:53 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:34:53 +0200][DEBUG] controller=index action=index
[Tue, 18 Dec 18 10:34:53 +0200][DEBUG] sessionData=$1
[Tue, 18 Dec 18 10:35:09 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:35:09 +0200][DEBUG] controller=api-login action=index
[Tue, 18 Dec 18 10:35:09 +0200][DEBUG] sessionData=1
[Tue, 18 Dec 18 10:35:10 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:35:10 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:35:10 +0200][DEBUG] sessionData=1
[Tue, 18 Dec 18 10:35:23 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:35:23 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:35:23 +0200][DEBUG] sessionData=1
[Tue, 18 Dec 18 10:35:33 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:35:33 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:35:33 +0200][DEBUG] sessionData=
[Tue, 18 Dec 18 10:35:36 +0200][DEBUG] prev-controller= prev-action=
[Tue, 18 Dec 18 10:35:36 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:35:36 +0200][DEBUG] sessionData=
[Tue, 18 Dec 18 10:38:27 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:38:27 +0200][DEBUG] sessionData=
[Tue, 18 Dec 18 10:44:38 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:44:38 +0200][DEBUG] sessionData=
[Tue, 18 Dec 18 10:44:38 +0200][DEBUG] controller=api-dummy action=index
[Tue, 18 Dec 18 10:44:38 +0200][DEBUG] sessionData=
[Tue, 18 Dec 18 10:44:46 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:44:46 +0200][DEBUG] sessionData=
[Tue, 18 Dec 18 10:44:46 +0200][DEBUG] controller=api-dummy action=index
[Tue, 18 Dec 18 10:44:46 +0200][DEBUG] sessionData=
[Tue, 18 Dec 18 10:45:12 +0200][DEBUG] controller=api-login action=index
[Tue, 18 Dec 18 10:45:12 +0200][DEBUG] sessionData=
[Tue, 18 Dec 18 10:45:13 +0200][DEBUG] controller=api-users action=index
[Tue, 18 Dec 18 10:45:13 +0200][DEBUG] sessionData=1
